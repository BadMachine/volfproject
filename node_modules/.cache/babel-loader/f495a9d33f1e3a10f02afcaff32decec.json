{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BackGroundParticles.tsx\",\n    _s = $RefreshSig$();\n\n//\n//\n// class BackGroundParticles extends React.Component<properties>{\n//\n// \tpublic particlesContainer: Container | undefined;\n// \tprivate theme:string;\n// \tpublic options:any;\n// \tconstructor(properties:properties) {\n// \t\tsuper(properties);\n// \t\tthis.particlesInit = this.particlesInit.bind(this);\n// \t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\n// \t\tthis.theme = properties.theme;\n// \t\tthis.particlesContainer;\n// \t\tthis.options = backgroundParticlesConfig;\n// \t}\n//\n// \tcomponentDidMount() {\n// \t\t//\n// \t}\n// \tparticlesInit(main:any) {\n// \t\tconsole.log(main);\n// \t}\n//\n// \tparticlesLoaded(container:any) {\n// \t\tthis.particlesContainer = container;\n// \t\t//console.log(this.particlesContainer);\n// \t}\n//\n//\n// \tpause(theme: string){\n//\n// \t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\n// \t\t// this.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\n// \t\t// this.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\n// \t\t//setTimeout(()=>this.particlesContainer?.pause(), 300);\n// \t\t// this.particlesContainer?.pause();\n// \t}\n// \tresume(){\n//\n// \t\tthis.particlesContainer?.play();\n// \t}\n//\n// \tchangeTheme(theme: string){\n// \t\t// console.log(theme);\n// \t\t// this.options = this.particlesContainer?.options;\n// \t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\n// \t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\n// \t\t//\n// \t\t// this.forceUpdate();\n// \t\t// this.particlesContainer?.refresh();\n// \t\t// this.options.particles.color.value = (theme === NIGHT)? '#141414': '#ffffff';\n// \t\t// this.options.particles.line_linked.color = (theme === NIGHT)? '#141414': '#ffffff';\n// \t\t//this.forceUpdate();\n// \t\t// this.particlesContainer?.options.load(JSON.parse(JSON.stringify(this.options)));\n// \t\t//\n// \t\t// this.particlesContainer?.refresh();\n// \t\t// this.particlesContainer?.destroy();\n// \t\t// this.particlesContainer?.start();\n// \t\t//console.log(this.particlesContainer);\n// \t}\n//\n// \tcomponentDidUpdate(prevProps: Readonly<properties>) {\n// \t\t// console.log(this.particlesContainer);\n// \t\t// this.props.theme==='day'? this.changeTheme(): this.changeTheme();\n// \t\tif(prevProps.theme!==this.props.theme) this.changeTheme(this.props.theme);\n// \t\tObject.values(this.props.properties).includes(true)? this.pause(this.props.theme): this.resume();\n// \t}\n//\n//\n//\n// \trender(){\n// \t\treturn(\n// \t\t\t<Particles loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\n// \t\t);\n// \t}\n// }\n//\n// export const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\nimport React, { useContext } from 'react';\nimport { backgroundParticlesConfig } from './configs/particlesConfig';\nimport Particles from 'react-tsparticles';\nimport { ThemeContext } from './context/themeContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BackGroundParticles(properties) {\n  _s();\n\n  const {\n    theme\n  } = useContext(ThemeContext);\n\n  const particlesLoaded = container => {};\n\n  return /*#__PURE__*/_jsxDEV(Particles, {\n    loaded: particlesLoaded,\n    params: JSON.parse(JSON.stringify(backgroundParticlesConfig(theme)))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BackGroundParticles, \"On+kvQWiI2Qq9odGdo0Jp6enHNs=\");\n\n_c = BackGroundParticles;\nexport const MemorizedBackgroundParticles = /*#__PURE__*/React.memo(BackGroundParticles);\n_c2 = MemorizedBackgroundParticles;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BackGroundParticles\");\n$RefreshReg$(_c2, \"MemorizedBackgroundParticles\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BackGroundParticles.tsx"],"names":["React","useContext","backgroundParticlesConfig","Particles","ThemeContext","BackGroundParticles","properties","theme","particlesLoaded","container","JSON","parse","stringify","MemorizedBackgroundParticles","memo"],"mappings":";;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,yBAAR,QAAwC,2BAAxC;AAGA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,SAAQC,YAAR,QAA2B,wBAA3B;;;AAEA,SAASC,mBAAT,CAA6BC,UAA7B,EAAoD;AAAA;;AAEnD,QAAM;AAACC,IAAAA;AAAD,MAAUN,UAAU,CAACG,YAAD,CAA1B;;AAGA,QAAMI,eAAe,GAAEC,SAAD,IAAkB,CAEvC,CAFD;;AAIA,sBACC,QAAC,SAAD;AAAW,IAAA,MAAM,EAAED,eAAnB;AAAoC,IAAA,MAAM,EAAEE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeV,yBAAyB,CAACK,KAAD,CAAxC,CAAX;AAA5C;AAAA;AAAA;AAAA;AAAA,UADD;AAIA;;GAbQF,mB;;KAAAA,mB;AAeT,OAAO,MAAMQ,4BAA4B,gBAAGb,KAAK,CAACc,IAAN,CAAWT,mBAAX,CAArC;MAAMQ,4B","sourcesContent":["// import React, {useContext} from 'react';\r\n// import {backgroundParticlesConfig} from './configs/particlesConfig';\r\n// import {Container} from 'tsparticles/dist/Core/Container';\r\n// import {modalStateInterface, NIGHT, DAY} from '../interfaces/stateInterfaces';\r\n// import Particles from 'react-tsparticles';\r\n//\r\ninterface properties {\r\n\tproperties: modalStateInterface,\r\n\ttheme: string\r\n}\r\n//\r\n//\r\n// class BackGroundParticles extends React.Component<properties>{\r\n//\r\n// \tpublic particlesContainer: Container | undefined;\r\n// \tprivate theme:string;\r\n// \tpublic options:any;\r\n// \tconstructor(properties:properties) {\r\n// \t\tsuper(properties);\r\n// \t\tthis.particlesInit = this.particlesInit.bind(this);\r\n// \t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\r\n// \t\tthis.theme = properties.theme;\r\n// \t\tthis.particlesContainer;\r\n// \t\tthis.options = backgroundParticlesConfig;\r\n// \t}\r\n//\r\n// \tcomponentDidMount() {\r\n// \t\t//\r\n// \t}\r\n// \tparticlesInit(main:any) {\r\n// \t\tconsole.log(main);\r\n// \t}\r\n//\r\n// \tparticlesLoaded(container:any) {\r\n// \t\tthis.particlesContainer = container;\r\n// \t\t//console.log(this.particlesContainer);\r\n// \t}\r\n//\r\n//\r\n// \tpause(theme: string){\r\n//\r\n// \t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\r\n// \t\t// this.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n// \t\t// this.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n// \t\t//setTimeout(()=>this.particlesContainer?.pause(), 300);\r\n// \t\t// this.particlesContainer?.pause();\r\n// \t}\r\n// \tresume(){\r\n//\r\n// \t\tthis.particlesContainer?.play();\r\n// \t}\r\n//\r\n// \tchangeTheme(theme: string){\r\n// \t\t// console.log(theme);\r\n// \t\t// this.options = this.particlesContainer?.options;\r\n// \t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n// \t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n// \t\t//\r\n// \t\t// this.forceUpdate();\r\n// \t\t// this.particlesContainer?.refresh();\r\n// \t\t// this.options.particles.color.value = (theme === NIGHT)? '#141414': '#ffffff';\r\n// \t\t// this.options.particles.line_linked.color = (theme === NIGHT)? '#141414': '#ffffff';\r\n// \t\t//this.forceUpdate();\r\n// \t\t// this.particlesContainer?.options.load(JSON.parse(JSON.stringify(this.options)));\r\n// \t\t//\r\n// \t\t// this.particlesContainer?.refresh();\r\n// \t\t// this.particlesContainer?.destroy();\r\n// \t\t// this.particlesContainer?.start();\r\n// \t\t//console.log(this.particlesContainer);\r\n// \t}\r\n//\r\n// \tcomponentDidUpdate(prevProps: Readonly<properties>) {\r\n// \t\t// console.log(this.particlesContainer);\r\n// \t\t// this.props.theme==='day'? this.changeTheme(): this.changeTheme();\r\n// \t\tif(prevProps.theme!==this.props.theme) this.changeTheme(this.props.theme);\r\n// \t\tObject.values(this.props.properties).includes(true)? this.pause(this.props.theme): this.resume();\r\n// \t}\r\n//\r\n//\r\n//\r\n// \trender(){\r\n// \t\treturn(\r\n// \t\t\t<Particles loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\r\n// \t\t);\r\n// \t}\r\n// }\r\n//\r\n// export const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n\r\n\r\nimport React, {useContext} from 'react';\r\nimport {backgroundParticlesConfig} from './configs/particlesConfig';\r\nimport {Container} from 'tsparticles/dist/Core/Container';\r\nimport {modalStateInterface, NIGHT, DAY} from '../interfaces/stateInterfaces';\r\nimport Particles from 'react-tsparticles';\r\nimport {ThemeContext} from './context/themeContext';\r\n\r\nfunction BackGroundParticles(properties: properties){\r\n\r\n\tconst {theme} = useContext(ThemeContext);\r\n\r\n\r\n\tconst particlesLoaded=(container: any)=>{\r\n\r\n\t}\r\n\r\n\treturn(\r\n\t\t<Particles loaded={particlesLoaded} params={JSON.parse(JSON.stringify(backgroundParticlesConfig(theme))) }/>\r\n\t);\r\n\r\n}\r\n\r\nexport const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n"]},"metadata":{},"sourceType":"module"}