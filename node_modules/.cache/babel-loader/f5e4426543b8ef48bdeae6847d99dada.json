{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar NodeUtil_js_1 = require(\"./NodeUtil.js\");\n\nvar TexConstants_js_1 = require(\"./TexConstants.js\");\n\nvar ParseUtil_js_1 = require(\"./ParseUtil.js\");\n\nvar ParseMethods;\n\n(function (ParseMethods) {\n  function variable(parser, c) {\n    var def = ParseUtil_js_1.default.getFontDef(parser);\n    var node = parser.create('token', 'mi', def, c);\n    parser.Push(node);\n  }\n\n  ParseMethods.variable = variable;\n\n  function digit(parser, c) {\n    var mml;\n    var pattern = parser.configuration.options['digits'];\n    var n = parser.string.slice(parser.i - 1).match(pattern);\n    var def = ParseUtil_js_1.default.getFontDef(parser);\n\n    if (n) {\n      mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));\n      parser.i += n[0].length - 1;\n    } else {\n      mml = parser.create('token', 'mo', def, c);\n    }\n\n    parser.Push(mml);\n  }\n\n  ParseMethods.digit = digit;\n\n  function controlSequence(parser, _c) {\n    var name = parser.GetCS();\n    parser.parse('macro', [parser, name]);\n  }\n\n  ParseMethods.controlSequence = controlSequence;\n\n  function mathchar0mi(parser, mchar) {\n    var def = mchar.attributes || {\n      mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC\n    };\n    var node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n  }\n\n  ParseMethods.mathchar0mi = mathchar0mi;\n\n  function mathchar0mo(parser, mchar) {\n    var def = mchar.attributes || {};\n    def['stretchy'] = false;\n    var node = parser.create('token', 'mo', def, mchar.char);\n    NodeUtil_js_1.default.setProperty(node, 'fixStretchy', true);\n    parser.configuration.addNode('fixStretchy', node);\n    parser.Push(node);\n  }\n\n  ParseMethods.mathchar0mo = mathchar0mo;\n\n  function mathchar7(parser, mchar) {\n    var def = mchar.attributes || {\n      mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL\n    };\n\n    if (parser.stack.env['font']) {\n      def['mathvariant'] = parser.stack.env['font'];\n    }\n\n    var node = parser.create('token', 'mi', def, mchar.char);\n    parser.Push(node);\n  }\n\n  ParseMethods.mathchar7 = mathchar7;\n\n  function delimiter(parser, delim) {\n    var def = delim.attributes || {};\n    def = Object.assign({\n      fence: false,\n      stretchy: false\n    }, def);\n    var node = parser.create('token', 'mo', def, delim.char);\n    parser.Push(node);\n  }\n\n  ParseMethods.delimiter = delimiter;\n\n  function environment(parser, env, func, args) {\n    var end = args[0];\n    var mml = parser.itemFactory.create('begin').setProperties({\n      name: env,\n      end: end\n    });\n    mml = func.apply(void 0, __spread([parser, mml], args.slice(1)));\n    parser.Push(mml);\n  }\n\n  ParseMethods.environment = environment;\n})(ParseMethods || (ParseMethods = {}));\n\nexports.default = ParseMethods;","map":{"version":3,"sources":["../../../ts/input/tex/ParseMethods.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar NodeUtil_js_1 = require(\"./NodeUtil.js\");\nvar TexConstants_js_1 = require(\"./TexConstants.js\");\nvar ParseUtil_js_1 = require(\"./ParseUtil.js\");\nvar ParseMethods;\n(function (ParseMethods) {\n    function variable(parser, c) {\n        var def = ParseUtil_js_1.default.getFontDef(parser);\n        var node = parser.create('token', 'mi', def, c);\n        parser.Push(node);\n    }\n    ParseMethods.variable = variable;\n    function digit(parser, c) {\n        var mml;\n        var pattern = parser.configuration.options['digits'];\n        var n = parser.string.slice(parser.i - 1).match(pattern);\n        var def = ParseUtil_js_1.default.getFontDef(parser);\n        if (n) {\n            mml = parser.create('token', 'mn', def, n[0].replace(/[{}]/g, ''));\n            parser.i += n[0].length - 1;\n        }\n        else {\n            mml = parser.create('token', 'mo', def, c);\n        }\n        parser.Push(mml);\n    }\n    ParseMethods.digit = digit;\n    function controlSequence(parser, _c) {\n        var name = parser.GetCS();\n        parser.parse('macro', [parser, name]);\n    }\n    ParseMethods.controlSequence = controlSequence;\n    function mathchar0mi(parser, mchar) {\n        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.ITALIC };\n        var node = parser.create('token', 'mi', def, mchar.char);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar0mi = mathchar0mi;\n    function mathchar0mo(parser, mchar) {\n        var def = mchar.attributes || {};\n        def['stretchy'] = false;\n        var node = parser.create('token', 'mo', def, mchar.char);\n        NodeUtil_js_1.default.setProperty(node, 'fixStretchy', true);\n        parser.configuration.addNode('fixStretchy', node);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar0mo = mathchar0mo;\n    function mathchar7(parser, mchar) {\n        var def = mchar.attributes || { mathvariant: TexConstants_js_1.TexConstant.Variant.NORMAL };\n        if (parser.stack.env['font']) {\n            def['mathvariant'] = parser.stack.env['font'];\n        }\n        var node = parser.create('token', 'mi', def, mchar.char);\n        parser.Push(node);\n    }\n    ParseMethods.mathchar7 = mathchar7;\n    function delimiter(parser, delim) {\n        var def = delim.attributes || {};\n        def = Object.assign({ fence: false, stretchy: false }, def);\n        var node = parser.create('token', 'mo', def, delim.char);\n        parser.Push(node);\n    }\n    ParseMethods.delimiter = delimiter;\n    function environment(parser, env, func, args) {\n        var end = args[0];\n        var mml = parser.itemFactory.create('begin').setProperties({ name: env, end: end });\n        mml = func.apply(void 0, __spread([parser, mml], args.slice(1)));\n        parser.Push(mml);\n    }\n    ParseMethods.environment = environment;\n})(ParseMethods || (ParseMethods = {}));\nexports.default = ParseMethods;\n//# sourceMappingURL=ParseMethods.js.map"]},"metadata":{},"sourceType":"script"}