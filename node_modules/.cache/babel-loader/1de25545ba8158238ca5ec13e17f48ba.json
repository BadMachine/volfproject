{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BackGroundParticles.tsx\";\nimport React from 'react';\nimport { backgroundParticlesConfig } from './configs/particlesConfig';\nimport { NIGHT } from '../interfaces/stateInterfaces';\nimport Particles from 'react-tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BackGroundParticles extends React.Component {\n  constructor(properties) {\n    super(properties); // this.particlesInit = this.particlesInit.bind(this);\n\n    this.particlesContainer = void 0;\n    this.theme = void 0;\n    this.options = void 0;\n    this.particlesLoaded = this.particlesLoaded.bind(this);\n    this.theme = properties.theme;\n    this.particlesContainer;\n    this.options = backgroundParticlesConfig;\n  }\n\n  componentDidMount() {//\n  } // particlesInit(main:any) {\n  // \tconsole.log(main);\n  // }\n\n\n  particlesLoaded(container) {\n    this.particlesContainer = container; //console.log(this.particlesContainer);\n  }\n\n  pause() {\n    setTimeout(() => {\n      var _this$particlesContai;\n\n      return (_this$particlesContai = this.particlesContainer) === null || _this$particlesContai === void 0 ? void 0 : _this$particlesContai.pause();\n    }, 300);\n  }\n\n  resume() {\n    var _this$particlesContai2;\n\n    (_this$particlesContai2 = this.particlesContainer) === null || _this$particlesContai2 === void 0 ? void 0 : _this$particlesContai2.play();\n  }\n\n  changeTheme(theme) {\n    var _this$particlesContai3;\n\n    console.log(theme);\n    this.options.particles.color.value = theme === NIGHT ? '#ffffff' : '#141414';\n    this.options.particles.line_linked.color = theme === NIGHT ? '#ffffff' : '#141414';\n    (_this$particlesContai3 = this.particlesContainer) === null || _this$particlesContai3 === void 0 ? void 0 : _this$particlesContai3.options.load(JSON.parse(JSON.stringify(this.options)));\n\n    try {\n      var _this$particlesContai4;\n\n      (_this$particlesContai4 = this.particlesContainer) === null || _this$particlesContai4 === void 0 ? void 0 : _this$particlesContai4.refresh();\n    } catch (e) {\n      console.log(e);\n    } // this.particlesContainer?.destroy();\n    // this.particlesContainer?.start();\n    //console.log(this.particlesContainer);\n\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(this.particlesContainer);\n    // this.props.theme==='day'? this.changeTheme(): this.changeTheme();\n    if (prevProps.theme !== this.props.theme) this.changeTheme(this.props.theme);\n    Object.values(this.props.properties).includes(true) ? this.pause() : this.resume();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Particles, {\n      loaded: this.particlesLoaded,\n      params: JSON.parse(JSON.stringify(this.options))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport const MemorizedBackgroundParticles = /*#__PURE__*/React.memo(BackGroundParticles);\n_c = MemorizedBackgroundParticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedBackgroundParticles\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BackGroundParticles.tsx"],"names":["React","backgroundParticlesConfig","NIGHT","Particles","BackGroundParticles","Component","constructor","properties","particlesContainer","theme","options","particlesLoaded","bind","componentDidMount","container","pause","setTimeout","resume","play","changeTheme","console","log","particles","color","value","line_linked","load","JSON","parse","stringify","refresh","e","componentDidUpdate","prevProps","props","Object","values","includes","render","MemorizedBackgroundParticles","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAQC,yBAAR,QAAwC,2BAAxC;AAEA,SAA6BC,KAA7B,QAA8C,+BAA9C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAQA,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAA6D;AAK5DC,EAAAA,WAAW,CAACC,UAAD,EAAwB;AAClC,UAAMA,UAAN,EADkC,CAElC;;AAFkC,SAH5BC,kBAG4B;AAAA,SAF3BC,KAE2B;AAAA,SAD5BC,OAC4B;AAGlC,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKH,KAAL,GAAaF,UAAU,CAACE,KAAxB;AACA,SAAKD,kBAAL;AACA,SAAKE,OAAL,GAAeT,yBAAf;AACA;;AAEDY,EAAAA,iBAAiB,GAAG,CACnB;AACA,GAhB2D,CAkB5D;AACA;AACA;;;AAEAF,EAAAA,eAAe,CAACG,SAAD,EAAgB;AAC9B,SAAKN,kBAAL,GAA0BM,SAA1B,CAD8B,CAE9B;AACA;;AAGDC,EAAAA,KAAK,GAAE;AAENC,IAAAA,UAAU,CAAC;AAAA;;AAAA,sCAAI,KAAKR,kBAAT,0DAAI,sBAAyBO,KAAzB,EAAJ;AAAA,KAAD,EAAuC,GAAvC,CAAV;AACA;;AACDE,EAAAA,MAAM,GAAE;AAAA;;AACP,mCAAKT,kBAAL,kFAAyBU,IAAzB;AACA;;AAEDC,EAAAA,WAAW,CAACV,KAAD,EAAe;AAAA;;AACzBW,IAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACA,SAAKC,OAAL,CAAaY,SAAb,CAAuBC,KAAvB,CAA6BC,KAA7B,GAAsCf,KAAK,KAAKP,KAAX,GAAmB,SAAnB,GAA8B,SAAnE;AACA,SAAKQ,OAAL,CAAaY,SAAb,CAAuBG,WAAvB,CAAmCF,KAAnC,GAA4Cd,KAAK,KAAKP,KAAX,GAAmB,SAAnB,GAA8B,SAAzE;AACA,mCAAKM,kBAAL,kFAAyBE,OAAzB,CAAiCgB,IAAjC,CAAsCC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKnB,OAApB,CAAX,CAAtC;;AACA,QAAI;AAAA;;AACJ,qCAAKF,kBAAL,kFAAyBsB,OAAzB;AACA,KAFA,CAEA,OAAOC,CAAP,EAAS;AAACX,MAAAA,OAAO,CAACC,GAAR,CAAYU,CAAZ;AAAgB,KAPD,CAQzB;AACA;AACA;;AACA;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAkC;AACnD;AACA;AACA,QAAGA,SAAS,CAACxB,KAAV,KAAkB,KAAKyB,KAAL,CAAWzB,KAAhC,EAAuC,KAAKU,WAAL,CAAiB,KAAKe,KAAL,CAAWzB,KAA5B;AACvC0B,IAAAA,MAAM,CAACC,MAAP,CAAc,KAAKF,KAAL,CAAW3B,UAAzB,EAAqC8B,QAArC,CAA8C,IAA9C,IAAqD,KAAKtB,KAAL,EAArD,GAAmE,KAAKE,MAAL,EAAnE;AACA;;AAIDqB,EAAAA,MAAM,GAAE;AACP,wBACC,QAAC,SAAD;AAAW,MAAA,MAAM,EAAE,KAAK3B,eAAxB;AAAyC,MAAA,MAAM,EAAEgB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAKnB,OAApB,CAAX;AAAjD;AAAA;AAAA;AAAA;AAAA,YADD;AAGA;;AA9D2D;;AAiE7D,OAAO,MAAM6B,4BAA4B,gBAAGvC,KAAK,CAACwC,IAAN,CAAWpC,mBAAX,CAArC;KAAMmC,4B","sourcesContent":["import React, {useContext} from 'react';\r\nimport {backgroundParticlesConfig} from './configs/particlesConfig';\r\nimport {Container} from 'tsparticles/dist/Core/Container';\r\nimport {modalStateInterface, NIGHT, DAY} from '../interfaces/stateInterfaces';\r\nimport Particles from 'react-tsparticles';\r\n\r\ninterface properties {\r\n\tproperties: modalStateInterface,\r\n\ttheme: string\r\n}\r\n\r\n\r\nclass BackGroundParticles extends React.Component<properties>{\r\n\r\n\tpublic particlesContainer: Container | undefined;\r\n\tprivate theme:string;\r\n\tpublic options:any;\r\n\tconstructor(properties:properties) {\r\n\t\tsuper(properties);\r\n\t\t// this.particlesInit = this.particlesInit.bind(this);\r\n\t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\r\n\t\tthis.theme = properties.theme;\r\n\t\tthis.particlesContainer;\r\n\t\tthis.options = backgroundParticlesConfig;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//\r\n\t}\r\n\r\n\t// particlesInit(main:any) {\r\n\t// \tconsole.log(main);\r\n\t// }\r\n\r\n\tparticlesLoaded(container:any) {\r\n\t\tthis.particlesContainer = container;\r\n\t\t//console.log(this.particlesContainer);\r\n\t}\r\n\r\n\r\n\tpause(){\r\n\r\n\t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\r\n\t}\r\n\tresume(){\r\n\t\tthis.particlesContainer?.play();\r\n\t}\r\n\r\n\tchangeTheme(theme: string){\r\n\t\tconsole.log(theme);\r\n\t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\tthis.particlesContainer?.options.load(JSON.parse(JSON.stringify(this.options)));\r\n\t\ttry {\r\n\t\tthis.particlesContainer?.refresh();\r\n\t}catch (e){console.log(e);}\r\n\t\t// this.particlesContainer?.destroy();\r\n\t\t// this.particlesContainer?.start();\r\n\t\t//console.log(this.particlesContainer);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<properties>) {\r\n\t\t// console.log(this.particlesContainer);\r\n\t\t// this.props.theme==='day'? this.changeTheme(): this.changeTheme();\r\n\t\tif(prevProps.theme!==this.props.theme) this.changeTheme(this.props.theme);\r\n\t\tObject.values(this.props.properties).includes(true)? this.pause(): this.resume();\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Particles loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n"]},"metadata":{},"sourceType":"module"}