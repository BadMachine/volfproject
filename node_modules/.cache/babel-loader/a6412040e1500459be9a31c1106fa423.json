{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\drawCOCOimage.tsx\";\nimport React from 'react';\nimport { randomColor } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DrawCOCOimage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.canvas = void 0;\n    this.state = {\n      bboxes: [],\n      descriptions: []\n    };\n  }\n\n  componentDidMount() {\n    //console.log('qweqwe     ', this.props.props.Image.width);\n    this.updateImage();\n  }\n\n  updateImage() {\n    const bboxes = [];\n    const descriptions = [];\n    const imageObj1 = new Image();\n    imageObj1.src = this.props.props.Image.url;\n\n    imageObj1.onload = () => {\n      const ctx = this.canvas.getContext('2d');\n      ctx.drawImage(imageObj1, 0, 0); //ctx.fillStyle = 'rgba(21,235,21,0.5)';\n      //ctx.fillRect(25,72,32,32);\n\n      this.props.props.Image.info.bboxes.forEach(bbox => {\n        bboxes.push(bbox.box);\n        descriptions.push(bbox.category);\n        ctx.fillStyle = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.3`;\n        ctx.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\n      });\n    };\n\n    this.setState({\n      bboxes: bboxes,\n      descriptions: descriptions\n    });\n  }\n\n  componentDidUpdate(prevProps, Props) {\n    if (this.props !== prevProps) {\n      this.updateImage();\n    }\n  }\n\n  handleMouse(e) {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseMove: this.handleMouse,\n        ref: canvas => this.canvas = canvas,\n        width: this.props.props.Image.width,\n        height: this.props.props.Image.height,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/drawCOCOimage.tsx"],"names":["React","randomColor","DrawCOCOimage","Component","constructor","props","canvasRef","createRef","canvas","state","bboxes","descriptions","componentDidMount","updateImage","imageObj1","Image","src","url","onload","ctx","getContext","drawImage","info","forEach","bbox","push","box","category","fillStyle","fillRect","setState","componentDidUpdate","prevProps","Props","handleMouse","e","render","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,8BAA1B;;AA4BA,OAAO,MAAMC,aAAN,SAA4BF,KAAK,CAACG,SAAlC,CAAqD;AAG3DC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACvB,UAAMA,KAAN;AADuB,SAFjBC,SAEiB,gBAFLN,KAAK,CAACO,SAAN,EAEK;AAAA,SADjBC,MACiB;AAEvB,SAAKC,KAAL,GAAa;AAAEC,MAAAA,MAAM,EAAC,EAAT;AAAaC,MAAAA,YAAY,EAAC;AAA1B,KAAb;AAEA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB;AACA,SAAKC,WAAL;AACA;;AACDA,EAAAA,WAAW,GAAE;AACZ,UAAMH,MAAe,GAAC,EAAtB;AACA,UAAMC,YAAqB,GAAG,EAA9B;AACA,UAAMG,SAAS,GAAG,IAAIC,KAAJ,EAAlB;AACAD,IAAAA,SAAS,CAACE,GAAV,GAAgB,KAAKX,KAAL,CAAWA,KAAX,CAAiBU,KAAjB,CAAuBE,GAAvC;;AACAH,IAAAA,SAAS,CAACI,MAAV,GAAmB,MAAK;AACvB,YAAMC,GAAG,GAAG,KAAKX,MAAL,CAAYY,UAAZ,CAAuB,IAAvB,CAAZ;AACAD,MAAAA,GAAG,CAACE,SAAJ,CAAcP,SAAd,EAAwB,CAAxB,EAA0B,CAA1B,EAFuB,CAGvB;AACA;;AACA,WAAKT,KAAL,CAAWA,KAAX,CAAiBU,KAAjB,CAAuBO,IAAvB,CAA4BZ,MAA5B,CAAmCa,OAAnC,CAA6CC,IAAD,IAAa;AACxDd,QAAAA,MAAM,CAACe,IAAP,CAAYD,IAAI,CAACE,GAAjB;AACAf,QAAAA,YAAY,CAACc,IAAb,CAAkBD,IAAI,CAACG,QAAvB;AACAR,QAAAA,GAAG,CAACS,SAAJ,GAAiB,QAAO3B,WAAW,EAAG,KAAIA,WAAW,EAAG,KAAIA,WAAW,EAAG,OAA1E;AACAkB,QAAAA,GAAG,CAACU,QAAJ,CAAaL,IAAI,CAACE,GAAL,CAAS,CAAT,CAAb,EAAyBF,IAAI,CAACE,GAAL,CAAS,CAAT,CAAzB,EAAqCF,IAAI,CAACE,GAAL,CAAS,CAAT,CAArC,EAAiDF,IAAI,CAACE,GAAL,CAAS,CAAT,CAAjD;AAEA,OAND;AAQA,KAbD;;AAcA,SAAKI,QAAL,CAAc;AAACpB,MAAAA,MAAM,EAAEA,MAAT;AAA6BC,MAAAA,YAAY,EAAEA;AAA3C,KAAd;AACA;;AAEDoB,EAAAA,kBAAkB,CAACC,SAAD,EAA2BC,KAA3B,EAAiD;AAClE,QAAG,KAAK5B,KAAL,KAAa2B,SAAhB,EAA0B;AACzB,WAAKnB,WAAL;AAGA;AACD;;AAGDqB,EAAAA,WAAW,CAACC,CAAD,EAA8C,CAExD;;AAGDC,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,6BACC;AAAQ,QAAA,WAAW,EAAE,KAAKF,WAA1B;AAAwC,QAAA,GAAG,EAAG1B,MAAD,IAAU,KAAKA,MAAL,GAAYA,MAAnE;AAA2E,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWA,KAAX,CAAiBU,KAAjB,CAAuBsB,KAAzG;AAAgH,QAAA,MAAM,EAAE,KAAKhC,KAAL,CAAWA,KAAX,CAAiBU,KAAjB,CAAuBuB,MAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAMA;;AAxD0D","sourcesContent":["import React from 'react';\r\nimport {randomColor} from '../interfaces/SortInterfaces';\r\ninterface bbox{\r\n\tbbox: number[],\r\n\tcategory:string\r\n}\r\ninterface segment{\r\n\tsegments: number[][]\r\n}\r\ninterface segments{\r\n\tarea: number,\r\n\tsegments:segment,\r\n\tcategory:string\r\n}\r\n\r\n\r\n\r\ninterface props{\r\n\tfilename: string,\r\n\turl: string,\r\n\theight: number,\r\n\twidth: number,\r\n\tinfo: {\r\n\t\tbboxes: bbox[],\r\n\t\tsegments: segments\r\n\r\n\t}\r\n}\r\n\r\nexport class DrawCOCOimage extends React.Component<any, any>{\r\n\tpublic canvasRef = React.createRef<any>();\r\n\tpublic canvas:any;\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { bboxes:[], descriptions:[]};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//console.log('qweqwe     ', this.props.props.Image.width);\r\n\t\tthis.updateImage();\r\n\t}\r\n\tupdateImage(){\r\n\t\tconst bboxes:number[]=[];\r\n\t\tconst descriptions:string[] = [];\r\n\t\tconst imageObj1 = new Image();\r\n\t\timageObj1.src = this.props.props.Image.url;\r\n\t\timageObj1.onload = ()=> {\r\n\t\t\tconst ctx = this.canvas.getContext('2d');\r\n\t\t\tctx.drawImage(imageObj1,0,0);\r\n\t\t\t//ctx.fillStyle = 'rgba(21,235,21,0.5)';\r\n\t\t\t//ctx.fillRect(25,72,32,32);\r\n\t\t\tthis.props.props.Image.info.bboxes.forEach( (bbox: any)=>{\r\n\t\t\t\tbboxes.push(bbox.box);\r\n\t\t\t\tdescriptions.push(bbox.category);\r\n\t\t\t\tctx.fillStyle = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.3`;\r\n\t\t\t\tctx.fillRect(bbox.box[0],bbox.box[1],bbox.box[2],bbox.box[3]);\r\n\r\n\t\t\t});\r\n\r\n\t\t};\r\n\t\tthis.setState({bboxes: bboxes as number[], descriptions: descriptions});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<any>, Props: Readonly<any>) {\r\n\t\tif(this.props!==prevProps){\r\n\t\t\tthis.updateImage();\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\thandleMouse(e:React.MouseEventHandler<HTMLCanvasElement>){\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<canvas onMouseMove={this.handleMouse}  ref={(canvas)=>this.canvas=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}> </canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}