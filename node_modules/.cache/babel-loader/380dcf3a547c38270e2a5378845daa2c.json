{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\drawCOCOimage.tsx\";\nimport React from 'react';\nimport { randomColor } from '../interfaces/SortInterfaces';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DrawCOCOimage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.canvas = void 0;\n    this.tooltip = '';\n    this.canvasForeground = void 0;\n    this.state = void 0;\n    this.state = {\n      bboxes: [],\n      descriptions: [],\n      colors: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateImage();\n  }\n\n  handleMouse(e) {\n    const ctx = this.canvasForeground.getContext('2d');\n    const rect = this.canvasForeground.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    let i = 0;\n    let r;\n\n    if (this.props.props.Image.showBboxes) {\n      ctx.clearRect(0, 0, e.target.width, e.target.height);\n\n      while (i < this.state.bboxes.length) {\n        r = this.state.bboxes[i];\n        ctx.beginPath();\n        ctx.rect(r[0], r[1], r[2], r[3]);\n        const [R, G, B, A] = this.state.colors[i].slice(5, this.state.colors[i].length).split(',');\n        ctx.fillStyle = ctx.isPointInPath(x, y) ? `rgba(${R},${G},${B},0.6)` : this.state.colors[i];\n\n        if (ctx.isPointInPath(x, y)) {\n          ctx.font = '30px Arial serif';\n          ctx.fillText(this.props.props.Image.info.bboxes[i].category, r[0], r[1] - 30, 100);\n        }\n\n        ctx.fill();\n        i++;\n      }\n    }\n  }\n\n  updateImage() {\n    const bboxes = [];\n    const descriptions = [];\n    const colors = [];\n    const imageObj1 = new Image(); //console.log(this.props.props.Image.url);\n\n    imageObj1.src = this.props.props.Image.url;\n\n    imageObj1.onload = () => {\n      const ctx = this.canvas.getContext('2d');\n      const ctxForeground = this.canvasForeground.getContext('2d');\n      ctx.drawImage(imageObj1, 0, 0);\n\n      if (this.props.props.Image.showBboxes) {\n        console.log(this.props.props.Image.showBboxes);\n        this.props.props.Image.info.bboxes.forEach(bbox => {\n          const fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`;\n          bboxes.push(bbox.box);\n          descriptions.push(bbox.category);\n          colors.push(fillColor);\n          ctxForeground.fillStyle = fillColor;\n          ctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\n        });\n      }\n\n      this.setState({\n        bboxes: bboxes,\n        descriptions: descriptions,\n        colors: colors\n      });\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    //console.log(prevProps);\n    console.log(`this.props.props.Image.showBboxes ${this.props.props.Image.showBboxes}, prevProps.props.Image.showBboxes ${prevProps.props.Image.showBboxes}`);\n\n    if (this.props.props.Image.showBboxes !== prevProps.props.Image) {\n      //console.log(`this.props.props.Image ${this.props.props.Image}, prevProps.props.Image ${prevProps.props.Image}`);\n      this.updateImage();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: 'bottom',\n        overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n          id: \"tooltip-disabled\",\n          children: \"Click to change image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 51\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            style: {\n              zIndex: 1\n            },\n            ref: canvas => this.canvas = canvas,\n            width: this.props.props.Image.width,\n            height: this.props.props.Image.height,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            style: {\n              top: 0,\n              zIndex: 2,\n              marginLeft: `-${this.props.props.Image.width}px`\n            },\n            onMouseMove: this.handleMouse.bind(this),\n            ref: canvas => this.canvasForeground = canvas,\n            width: this.props.props.Image.width,\n            height: this.props.props.Image.height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/drawCOCOimage.tsx"],"names":["React","randomColor","OverlayTrigger","Tooltip","DrawCOCOimage","Component","constructor","props","canvasRef","createRef","canvas","tooltip","canvasForeground","state","bboxes","descriptions","colors","componentDidMount","updateImage","handleMouse","e","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","i","r","Image","showBboxes","clearRect","target","width","height","length","beginPath","R","G","B","A","slice","split","fillStyle","isPointInPath","font","fillText","info","category","fill","imageObj1","src","url","onload","ctxForeground","drawImage","console","log","forEach","bbox","fillColor","push","box","fillRect","setState","componentDidUpdate","prevProps","render","display","zIndex","marginLeft","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {CommandsInterface, randomColor} from '../interfaces/SortInterfaces';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\r\n\r\ninterface bbox{\r\n\tbbox: number[],\r\n\tcategory:string\r\n}\r\ninterface segment{\r\n\tsegments: number[][]\r\n}\r\ninterface segments{\r\n\tarea: number,\r\n\tsegments:segment,\r\n\tcategory:string\r\n}\r\n\r\n\r\n\r\ninterface props{\r\n\tprops: {\r\n\t\tImage:{\r\n\t\tfilename: string,\r\n\t\turl: string,\r\n\t\theight: number,\r\n\t\twidth: number,\r\n\t\tinfo: {\r\n\t\t\tbboxes: bbox[],\r\n\t\t\tsegments: segments\r\n\t\t},\r\n\t\tshowBboxes: boolean,\r\n\t\tshowKeypoints: boolean\r\n\t}\r\n\t}\r\n}\r\ninterface stateInterface{\r\n\tbboxes:number[][], descriptions:string[], colors:string[]\r\n}\r\n\r\n\r\n\r\nexport class DrawCOCOimage extends React.Component<any, any>{\r\n\tpublic canvasRef = React.createRef<any>();\r\n\tpublic canvas:any;\r\n\tpublic tooltip = '';\r\n\tpublic canvasForeground:any;\r\n\treadonly state:stateInterface;\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { bboxes:[], descriptions:[], colors:[]};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateImage();\r\n\t}\r\n\r\n\r\n\thandleMouse(e:any){\r\n\r\n\t\tconst ctx = this.canvasForeground.getContext('2d');\r\n\t\tconst rect = this.canvasForeground.getBoundingClientRect();\r\n\t\tconst x = e.clientX - rect.left;\r\n\t\tconst y = e.clientY - rect.top;\r\n\t\tlet i = 0;\r\n\t\tlet r:number[];\r\n\t\tif(this.props.props.Image.showBboxes) {\r\n\t\t\tctx.clearRect(0, 0, e.target.width, e.target.height);\r\n\r\n\t\t\twhile (i < this.state.bboxes.length) {\r\n\t\t\t\tr = this.state.bboxes[i];\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(r[0], r[1], r[2], r[3]);\r\n\t\t\t\tconst [R, G, B, A] = this.state.colors[i].slice(5, this.state.colors[i].length).split(',');\r\n\t\t\t\tctx.fillStyle = ctx.isPointInPath(x, y) ? `rgba(${R},${G},${B},0.6)` : this.state.colors[i];\r\n\r\n\t\t\t\tif (ctx.isPointInPath(x, y)) {\r\n\t\t\t\t\tctx.font = '30px Arial serif';\r\n\t\t\t\t\tctx.fillText(this.props.props.Image.info.bboxes[i].category, r[0], r[1] - 30, 100);\r\n\t\t\t\t}\r\n\t\t\t\tctx.fill();\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tupdateImage(){\r\n\t\tconst bboxes:number[]=[];\r\n\t\tconst descriptions:string[] = [];\r\n\t\tconst colors:string[] = [];\r\n\t\tconst imageObj1 = new Image();\r\n\t\t//console.log(this.props.props.Image.url);\r\n\t\timageObj1.src = this.props.props.Image.url;\r\n\t\timageObj1.onload = ()=> {\r\n\t\t\tconst ctx = this.canvas.getContext('2d');\r\n\t\t\tconst ctxForeground = this.canvasForeground.getContext('2d');\r\n\t\t\tctx.drawImage(imageObj1,0,0);\r\n\t\t\tif(this.props.props.Image.showBboxes) {\r\n\t\t\t\tconsole.log(this.props.props.Image.showBboxes);\r\n\t\t\t\tthis.props.props.Image.info.bboxes.forEach((bbox: any) => {\r\n\t\t\t\t\tconst fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`;\r\n\t\t\t\t\tbboxes.push(bbox.box);\r\n\t\t\t\t\tdescriptions.push(bbox.category);\r\n\t\t\t\t\tcolors.push(fillColor);\r\n\t\t\t\t\tctxForeground.fillStyle = fillColor;\r\n\t\t\t\t\tctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\r\n\r\n\t\t\t\t});\r\n\r\n\t\t\t}\r\n\t\t\tthis.setState({bboxes: bboxes as number[], descriptions: descriptions, colors: colors });\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:props) {\r\n\t\t//console.log(prevProps);\r\n\t\tconsole.log(`this.props.props.Image.showBboxes ${this.props.props.Image.showBboxes}, prevProps.props.Image.showBboxes ${prevProps.props.Image.showBboxes}`);\r\n\t\tif(this.props.props.Image.showBboxes!== prevProps.props.Image){\r\n\t\t\t//console.log(`this.props.props.Image ${this.props.props.Image}, prevProps.props.Image ${prevProps.props.Image}`);\r\n\r\n\t\t\tthis.updateImage();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<OverlayTrigger placement={'bottom'} overlay={<Tooltip id=\"tooltip-disabled\">Click to change image</Tooltip>}>\r\n\t\t\t\t\t<div style={{ display: 'flex'}}>\r\n\t\t\t\t\t\t<canvas style={{zIndex:1}}   ref={(canvas)=>this.canvas=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}> </canvas>\r\n\t\t\t\t\t\t<canvas style={{top: 0,zIndex:2, marginLeft:`-${this.props.props.Image.width}px`}} onMouseMove={this.handleMouse.bind(this)} ref={(canvas)=>this.canvasForeground=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}></canvas>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</OverlayTrigger>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}