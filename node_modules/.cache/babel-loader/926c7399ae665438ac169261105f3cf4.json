{"ast":null,"code":"import * as instancesVal from '../instances_val2017.json';\n\nconst proceedRandomTextCOCO = () => {};\n\nconst parseCategories = () => {\n  const classesTemp = [];\n  instancesVal.categories.forEach(item => {\n    if (!(item.supercategory in classesTemp)) {\n      classesTemp[item.supercategory] = [];\n    }\n\n    if (!(item.name in classesTemp[item.supercategory])) {\n      classesTemp[item.supercategory].push(item.name);\n    }\n  });\n  return classesTemp;\n};\n\nexport const classes = parseCategories();\nexport const parseSubCategories = supercategory => {\n  const categories = supercategory === 'all' ? Object.values(classes).flat() : classes[supercategory];\n  return categories;\n};\n\nfunction fetchBboxesAndSegments(imageID) {\n  const bboxes = [];\n  const segments = [];\n  const annotationForImage = instancesVal.annotations.filter(annotation => annotation.image_id === imageID);\n  annotationForImage.forEach(annotation => {\n    bboxes.push({\n      box: annotation.bbox,\n      category: instancesVal.categories.find(item => item.id === annotation.category_id).name\n    });\n    segments.push({\n      area: annotation.area,\n      segments: annotation.segmentation,\n      category: instancesVal.categories.find(item => item.id === annotation.category_id).name\n    });\n  });\n  return {\n    bboxes: bboxes,\n    segments: segments\n  };\n}\n\nexport const getRandomCocoExample = () => {\n  const random = Math.round(Math.random() * instancesVal.images.length);\n  const image = instancesVal.images[random];\n  return {\n    filename: image.file_name,\n    path: 'C:\\\\',\n    url: image.coco_url,\n    height: image.height,\n    width: image.width,\n    info: fetchBboxesAndSegments(image.id),\n    showBboxes: false,\n    showKeypoints: false\n  };\n};\nexport const getFilteredCocoExample = filter => {\n  let classesToSearch;\n\n  if (filter.subclasses.length > 0) {\n    classesToSearch = instancesVal.categories.filter(category => filter.subclasses.includes(category.name)).map(classes => classes.id);\n  } else {\n    classesToSearch = filter.superclass === 'all' ? instancesVal.categories.map(classes => classes.id) : instancesVal.categories.filter(category => category.supercategory === filter.superclass).map(item => item.id);\n  }\n\n  const images_filtered_by_size = filter.image.width > 0 && filter.image.height > 0 ? instancesVal.images.filter(image => image.height <= filter.image.height && image.width <= filter.image.width).map(image => ({\n    url: image.coco_url,\n    id: image.id,\n    width: image.width,\n    height: image.height,\n    license: image.license\n  })) : instancesVal.images.map(image => ({\n    url: image.coco_url,\n    id: image.id,\n    width: image.width,\n    height: image.height,\n    license: image.license\n  }));\n  const annos_filtered_by_ClHs = instancesVal.annotations.filter(annotation => classesToSearch.includes(annotation.category_id) && images_filtered_by_size.map(image => image.id).includes(annotation.image_id));\n  let annos_filtered_by_bbox_shape;\n\n  if (filter.only === 1 || filter.only === 3) {\n    annos_filtered_by_bbox_shape = filter.bboxes.maxWidth > 0 && filter.bboxes.maxHeight > 0 ? annos_filtered_by_ClHs.filter(anno => Math.abs(anno.bbox[2] - anno.bbox[0]) <= filter.bboxes.maxWidth && Math.abs(anno.bbox[3] - anno.bbox[1]) <= filter.bboxes.maxHeight) : annos_filtered_by_ClHs;\n    annos_filtered_by_bbox_shape = filter.bboxes.minWidth > 0 && filter.bboxes.minHeight > 0 ? annos_filtered_by_bbox_shape.filter(anno => Math.abs(anno.bbox[0] - anno.bbox[2]) >= filter.bboxes.minWidth && filter.bboxes.minHeight <= Math.abs(anno.bbox[1] - anno.bbox[3])) : annos_filtered_by_bbox_shape;\n  } else annos_filtered_by_bbox_shape = annos_filtered_by_ClHs;\n\n  let resultImages = images_filtered_by_size.filter(image => annos_filtered_by_bbox_shape.map(anno => anno.image_id).includes(image.id));\n  resultImages = resultImages.map(image => ({\n    url: image.url,\n    id: image.id,\n    width: image.width,\n    height: image.height,\n    license: instancesVal.licenses.find(license => license.id === image.license).name\n  }));\n  resultImages = resultImages.map(image => ({\n    filename: image.url.split('/')[4],\n    path: filter.path + image.url.split('/')[4],\n    url: image.url,\n    width: image.width,\n    height: image.height,\n    license: image.license,\n    info: {\n      bboxes: filter.only === 1 || filter.only === 3 ? annos_filtered_by_bbox_shape.filter(anno => anno.image_id === image.id).map(item => ({\n        box: item.bbox,\n        category: instancesVal.categories.find(category => category.id === item.category_id).name\n      })) : [],\n      segments: filter.only === 2 || filter.only === 3 ? annos_filtered_by_bbox_shape.filter(anno => anno.image_id === image.id).map(item => ({\n        area: item.area,\n        segments: item.segmentation,\n        category: instancesVal.categories.find(category => category.id === item.category_id).name\n      })) : []\n    },\n    showBboxes: filter.only === 1 || filter.only === 3,\n    showKeypoints: filter.only === 2 || filter.only === 3\n  }));\n  const random = Math.round(Math.random() * resultImages.length);\n  return resultImages[random];\n};","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/cocoParser.ts"],"names":["instancesVal","proceedRandomTextCOCO","parseCategories","classesTemp","categories","forEach","item","supercategory","name","push","classes","parseSubCategories","Object","values","flat","fetchBboxesAndSegments","imageID","bboxes","segments","annotationForImage","annotations","filter","annotation","image_id","box","bbox","category","find","id","category_id","area","segmentation","getRandomCocoExample","random","Math","round","images","length","image","filename","file_name","path","url","coco_url","height","width","info","showBboxes","showKeypoints","getFilteredCocoExample","classesToSearch","subclasses","includes","map","superclass","images_filtered_by_size","license","annos_filtered_by_ClHs","annos_filtered_by_bbox_shape","only","maxWidth","maxHeight","anno","abs","minWidth","minHeight","resultImages","licenses","split"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as instancesVal from '../instances_val2017.json';\r\nimport {randomColor} from '../interfaces/SortInterfaces';\r\nimport {filterData} from '../interfaces/cocoData';\r\nimport * as cocoText from '../cocotext.v2.json';\r\n\r\n\r\nconst proceedRandomTextCOCO = () =>{\r\n\r\n};\r\n\r\n\r\nconst parseCategories=()=> {\r\n\tconst classesTemp:any = [];\r\n\t(<any>instancesVal).categories.forEach((item: any) => {\r\n\r\n\t\tif (!(item.supercategory in classesTemp)) {\r\n\t\t\tclassesTemp[item.supercategory] = [];\r\n\t\t}\r\n\t\tif (!(item.name in classesTemp[item.supercategory])) {\r\n\t\t\tclassesTemp[item.supercategory].push(item.name);\r\n\t\t}\r\n\t});\r\n\treturn classesTemp;\r\n};\r\n\r\nexport const classes = parseCategories();\r\n\r\nexport const parseSubCategories = (supercategory: string)=>{\r\n\tconst categories = (supercategory==='all')? Object.values(classes).flat(): classes[supercategory];\r\n\treturn categories;\r\n};\r\n\r\n\r\nfunction fetchBboxesAndSegments(imageID:number){\r\n\tconst bboxes:any = [];\r\n\tconst segments:any = [];\r\n\r\n\tconst annotationForImage = (<any>instancesVal).annotations.filter((annotation: any) => annotation.image_id === imageID);\r\n\tannotationForImage.forEach((annotation:any)=>{\r\n\t\tbboxes.push({box: annotation.bbox, category: (<any>instancesVal).categories.find((item: any)=> item.id ===annotation.category_id).name});\r\n\t\tsegments.push({area: annotation.area, segments: annotation.segmentation, category: (<any>instancesVal).categories.find((item: any)=> item.id ===annotation.category_id).name   });\r\n\t});\r\n\treturn {bboxes: bboxes, segments: segments};\r\n\r\n}\r\n\r\n\r\nexport const getRandomCocoExample = ()=>{\r\n\r\n\tconst random = Math.round(Math.random() * ((<any>instancesVal).images.length));\r\n\tconst image = (<any>instancesVal).images[random];\r\n\r\n\treturn {\r\n\t\tfilename: image.file_name,\r\n\t\tpath: 'C:\\\\',\r\n\t\turl: image.coco_url,\r\n\t\theight: image.height,\r\n\t\twidth: image.width,\r\n\t\tinfo: fetchBboxesAndSegments(image.id),\r\n\t\tshowBboxes: false,\r\n\t\tshowKeypoints: false\r\n\t};\r\n\r\n\r\n};\r\n\r\nexport const getFilteredCocoExample = (filter: filterData) =>{\r\n\tlet classesToSearch: any;\r\n\r\n\tif(filter.subclasses.length>0 ){\r\n\t\tclassesToSearch = (<any>instancesVal).categories.filter((category: any)=> filter.subclasses.includes(category.name) ).map((classes:any)=>classes.id);\r\n\t}else {\r\n\t\tclassesToSearch = (filter.superclass === 'all') ? (<any>instancesVal).categories.map((classes: any) => classes.id)\r\n\t\t\t:\r\n\t\t\t(<any>instancesVal).categories.filter((category: any) => category.supercategory === filter.superclass).map((item: any) => item.id);\r\n\t}\r\n\r\n\tconst images_filtered_by_size = (filter.image.width>0 && filter.image.height>0) ?\r\n\t\t(<any>instancesVal).images.filter((image:any)=> image.height<=filter.image.height && image.width<= filter.image.width).map((image:any)=> ({url:image.coco_url, id: image.id, width: image.width, height: image.height, license: image.license}))\r\n\t\t:\r\n\t\t(<any>instancesVal).images.map((image:any)=> ({url: image.coco_url, id: image.id, width: image.width, height: image.height, license: image.license}));\r\n\r\n\tconst annos_filtered_by_ClHs = (<any>instancesVal).annotations.filter((annotation:any)=>\r\n\t\tclassesToSearch.includes(annotation.category_id) && images_filtered_by_size.map((image:any)=> image.id).includes(annotation.image_id) );\r\n\r\n\tlet annos_filtered_by_bbox_shape:any;\r\n\tif(filter.only===1 || filter.only===3) {\r\n\t\tannos_filtered_by_bbox_shape = (filter.bboxes.maxWidth > 0 && filter.bboxes.maxHeight > 0) ?\r\n\t\t\tannos_filtered_by_ClHs.filter((anno:any) => Math.abs(anno.bbox[2] - anno.bbox[0]) <= filter.bboxes.maxWidth && Math.abs(anno.bbox[3] - anno.bbox[1]) <= filter.bboxes.maxHeight )\r\n\t\t\t:\r\n\t\t\tannos_filtered_by_ClHs;\r\n\r\n\t\tannos_filtered_by_bbox_shape = (filter.bboxes.minWidth > 0 && filter.bboxes.minHeight > 0) ?\r\n\t\t\tannos_filtered_by_bbox_shape.filter((anno:any) => Math.abs(anno.bbox[0] - anno.bbox[2]) >= filter.bboxes.minWidth && filter.bboxes.minHeight <= Math.abs(anno.bbox[1] - anno.bbox[3]))\r\n\t\t\t:\r\n\t\t\tannos_filtered_by_bbox_shape;\r\n\t}else annos_filtered_by_bbox_shape = annos_filtered_by_ClHs;\r\n\r\n\tlet resultImages = images_filtered_by_size.filter((image:any)=>  annos_filtered_by_bbox_shape.map((anno:any)=> anno.image_id).includes(image.id) );\r\n\r\n\tresultImages = resultImages.map((image:any)=> ({ url:image.url, id: image.id, width: image.width, height: image.height, license: (<any>instancesVal).licenses.find((license:any) => license.id === image.license).name }));\r\n\r\n\tresultImages = resultImages.map((image:any) => ({\r\n\t\tfilename: image.url.split('/')[4],\r\n\t\tpath: filter.path+image.url.split('/')[4],\r\n\t\turl: image.url,\r\n\t\twidth: image.width,\r\n\t\theight: image.height,\r\n\t\tlicense: image.license,\r\n\t\tinfo:{\r\n\t\t\tbboxes: (filter.only===1 || filter.only===3)? annos_filtered_by_bbox_shape.filter((anno:any) => anno.image_id === image.id).map((item:any)=>({box:item.bbox, category: (<any>instancesVal).categories.find((category:any)=> category.id === item.category_id).name})) : [],\r\n\t\t\tsegments: (filter.only===2 || filter.only===3)? annos_filtered_by_bbox_shape.filter((anno:any) => anno.image_id === image.id).map((item:any)=>({area: item.area, segments:item.segmentation, category: (<any>instancesVal).categories.find((category:any)=> category.id === item.category_id).name})) : []\r\n\t\t},\r\n\t\tshowBboxes: filter.only===1 || filter.only===3,\r\n\t\tshowKeypoints: filter.only===2 || filter.only===3\r\n\t}) );\r\n\tconst random = Math.round(Math.random() * resultImages.length);\r\n\treturn resultImages[random];\r\n\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}