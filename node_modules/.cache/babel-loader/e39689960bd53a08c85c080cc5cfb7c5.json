{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BackGroundParticles.tsx\";\nimport React from 'react';\nimport { DAY } from '../interfaces/stateInterfaces';\nimport { tsParticles } from 'tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// class BackGroundParticles extends React.Component<properties>{\n//\n// \tpublic particlesContainer: Container | undefined;\n// \tprivate theme:string;\n// \tpublic options:any;\n// \tconstructor(properties:properties) {\n// \t\tsuper(properties);\n// \t\tthis.particlesInit = this.particlesInit.bind(this);\n// \t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\n// \t\tthis.theme = properties.theme;\n// \t\tthis.particlesContainer;\n// \t\tthis.options = backgroundParticlesConfig;\n// \t}\n//\n// \tcomponentDidMount() {\n// \t\t//\n// \t}\n// \tparticlesInit(main:any) {\n// \t\tconsole.log(main);\n// \t}\n//\n// \tparticlesLoaded(container:any) {\n// \t\tthis.particlesContainer = container;\n// \t\t//console.log(this.particlesContainer);\n// \t}\n//\n//\n// \tpause(){\n//\n// \t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\n//\n// \t}\n// \tresume(){\n//\n// \t\tthis.particlesContainer?.play();\n// \t}\n//\n// \tchangeTheme(theme: string){\n// \t\t// console.log(theme);\n// \t\t// this.options = this.particlesContainer?.options;\n// \t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\n// \t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\n//\n// \t\tthis.forceUpdate();\n//\n// \t}\n//\n// \tcomponentDidUpdate(prevProps: Readonly<properties>) {\n//\n// \t\tif(prevProps.theme!==this.props.theme) {\n// \t\t\tthis.changeTheme(this.props.theme);\n// \t\t\tconsole.log('change theme');\n// \t\t}\n// \t\tObject.values(this.props.properties).includes(true)? this.pause(): this.resume();\n// \t}\n//\n//\n//\n// \trender(){\n// \t\treturn(\n// \t\t\t<Particles init={this.particlesInit} loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\n// \t\t);\n// \t}\n// }\n//\n// export const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\nfunction BackGroundParticles(properties) {\n  //const containerP = tsParticles;\n  tsParticles.load('tsparticles', {\n    particles: {\n      number: {\n        value: 90,\n        density: {\n          enable: true,\n          value_area: 800\n        }\n      },\n      color: {\n        value: '#ffffff'\n      },\n      shape: {\n        type: 'circle',\n        stroke: {\n          width: 0,\n          color: '#000000'\n        },\n        polygon: {\n          nb_sides: 3\n        },\n        image: {\n          src: 'img/github.svg',\n          width: 100,\n          height: 100\n        }\n      },\n      opacity: {\n        value: 0.0,\n        random: false,\n        anim: {\n          enable: false,\n          speed: 1,\n          opacity_min: 0.7,\n          sync: false\n        }\n      },\n      size: {\n        value: 1,\n        random: true,\n        anim: {\n          enable: false,\n          speed: 40,\n          size_min: 0.1,\n          sync: false\n        }\n      },\n      line_linked: {\n        enable: true,\n        distance: 250,\n        color: '#ffffff',\n        opacity: 0.3,\n        width: 1.5\n      },\n      move: {\n        enable: true,\n        speed: 0.5,\n        direction: 'left',\n        random: false,\n        straight: false,\n        out_mode: 'out',\n        bounce: false,\n        attract: {\n          enable: false,\n          rotateX: 600,\n          rotateY: 1200\n        }\n      }\n    },\n    interactivity: {\n      detect_on: 'canvas',\n      events: {\n        onhover: {\n          enable: false,\n          mode: 'grab'\n        },\n        onclick: {\n          enable: false,\n          mode: 'push'\n        },\n        resize: true\n      },\n      modes: {\n        grab: {\n          distance: 140,\n          line_linked: {\n            opacity: 1\n          }\n        },\n        bubble: {\n          distance: 400,\n          size: 40,\n          duration: 2,\n          opacity: 8\n        },\n        repulse: {\n          distance: 200,\n          duration: 0.4\n        },\n        push: {\n          particles_nb: 4\n        },\n        remove: {\n          particles_nb: 2\n        }\n      }\n    }\n  }).then(container => container === null || container === void 0 ? void 0 : container.play()); // const test = tsParticles.domItem(0);\n  //\n  // test?.play();\n\n  if (properties.theme === DAY) {//\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tsparticles\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 3\n  }, this);\n}\n\n_c = BackGroundParticles;\nexport const MemorizedBackgroundParticles = /*#__PURE__*/React.memo(BackGroundParticles);\n_c2 = MemorizedBackgroundParticles;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BackGroundParticles\");\n$RefreshReg$(_c2, \"MemorizedBackgroundParticles\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BackGroundParticles.tsx"],"names":["React","DAY","tsParticles","BackGroundParticles","properties","load","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","image","src","height","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","then","container","play","theme","MemorizedBackgroundParticles","memo"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport {backgroundParticlesConfig} from './configs/particlesConfig';\r\nimport {Container} from 'tsparticles/dist/Core/Container';\r\nimport {modalStateInterface, NIGHT, DAY} from '../interfaces/stateInterfaces';\r\nimport Particles from 'react-tsparticles';\r\n\r\nimport { tsParticles } from 'tsparticles';\r\n\r\ninterface properties {\r\n\tproperties: modalStateInterface,\r\n\ttheme: string\r\n}\r\n\r\n\r\n// class BackGroundParticles extends React.Component<properties>{\r\n//\r\n// \tpublic particlesContainer: Container | undefined;\r\n// \tprivate theme:string;\r\n// \tpublic options:any;\r\n// \tconstructor(properties:properties) {\r\n// \t\tsuper(properties);\r\n// \t\tthis.particlesInit = this.particlesInit.bind(this);\r\n// \t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\r\n// \t\tthis.theme = properties.theme;\r\n// \t\tthis.particlesContainer;\r\n// \t\tthis.options = backgroundParticlesConfig;\r\n// \t}\r\n//\r\n// \tcomponentDidMount() {\r\n// \t\t//\r\n// \t}\r\n// \tparticlesInit(main:any) {\r\n// \t\tconsole.log(main);\r\n// \t}\r\n//\r\n// \tparticlesLoaded(container:any) {\r\n// \t\tthis.particlesContainer = container;\r\n// \t\t//console.log(this.particlesContainer);\r\n// \t}\r\n//\r\n//\r\n// \tpause(){\r\n//\r\n// \t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\r\n//\r\n// \t}\r\n// \tresume(){\r\n//\r\n// \t\tthis.particlesContainer?.play();\r\n// \t}\r\n//\r\n// \tchangeTheme(theme: string){\r\n// \t\t// console.log(theme);\r\n// \t\t// this.options = this.particlesContainer?.options;\r\n// \t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n// \t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n//\r\n// \t\tthis.forceUpdate();\r\n//\r\n// \t}\r\n//\r\n// \tcomponentDidUpdate(prevProps: Readonly<properties>) {\r\n//\r\n// \t\tif(prevProps.theme!==this.props.theme) {\r\n// \t\t\tthis.changeTheme(this.props.theme);\r\n// \t\t\tconsole.log('change theme');\r\n// \t\t}\r\n// \t\tObject.values(this.props.properties).includes(true)? this.pause(): this.resume();\r\n// \t}\r\n//\r\n//\r\n//\r\n// \trender(){\r\n// \t\treturn(\r\n// \t\t\t<Particles init={this.particlesInit} loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\r\n// \t\t);\r\n// \t}\r\n// }\r\n//\r\n// export const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n\r\n\r\nfunction BackGroundParticles(properties: properties){\r\n\r\n\t//const containerP = tsParticles;\r\n\r\n\r\n\r\n\ttsParticles.load('tsparticles', {\r\n\t\tparticles: {\r\n\t\t\tnumber: {\r\n\t\t\t\tvalue: 90,\r\n\t\t\t\tdensity: {\r\n\t\t\t\t\tenable: true,\r\n\t\t\t\t\tvalue_area: 800\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcolor: {\r\n\t\t\t\tvalue:'#ffffff',\r\n\t\t\t},\r\n\t\t\tshape: {\r\n\t\t\t\ttype: 'circle',\r\n\t\t\t\tstroke: {\r\n\t\t\t\t\twidth: 0,\r\n\t\t\t\t\tcolor: '#000000'\r\n\t\t\t\t},\r\n\t\t\t\tpolygon: {\r\n\t\t\t\t\tnb_sides: 3\r\n\t\t\t\t},\r\n\t\t\t\timage: {\r\n\t\t\t\t\tsrc: 'img/github.svg',\r\n\t\t\t\t\twidth: 100,\r\n\t\t\t\t\theight: 100\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\topacity: {\r\n\t\t\t\tvalue: 0.0,\r\n\t\t\t\trandom: false,\r\n\t\t\t\tanim: {\r\n\t\t\t\t\tenable: false,\r\n\t\t\t\t\tspeed: 1,\r\n\t\t\t\t\topacity_min: 0.7,\r\n\t\t\t\t\tsync: false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsize: {\r\n\t\t\t\tvalue: 1,\r\n\t\t\t\trandom: true,\r\n\t\t\t\tanim: {\r\n\t\t\t\t\tenable: false,\r\n\t\t\t\t\tspeed: 40,\r\n\t\t\t\t\tsize_min: 0.1,\r\n\t\t\t\t\tsync: false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tline_linked: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tdistance: 250,\r\n\t\t\t\tcolor: '#ffffff',\r\n\t\t\t\topacity: 0.3,\r\n\t\t\t\twidth: 1.5\r\n\t\t\t},\r\n\t\t\tmove: {\r\n\t\t\t\tenable: true,\r\n\t\t\t\tspeed: 0.5,\r\n\t\t\t\tdirection: 'left',\r\n\t\t\t\trandom: false,\r\n\t\t\t\tstraight: false,\r\n\t\t\t\tout_mode: 'out',\r\n\t\t\t\tbounce: false,\r\n\t\t\t\tattract: {\r\n\t\t\t\t\tenable: false,\r\n\t\t\t\t\trotateX: 600,\r\n\t\t\t\t\trotateY: 1200\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinteractivity: {\r\n\t\t\tdetect_on: 'canvas',\r\n\t\t\tevents: {\r\n\t\t\t\tonhover: {\r\n\t\t\t\t\tenable: false,\r\n\t\t\t\t\tmode: 'grab'\r\n\t\t\t\t},\r\n\t\t\t\tonclick: {\r\n\t\t\t\t\tenable: false,\r\n\t\t\t\t\tmode: 'push'\r\n\t\t\t\t},\r\n\t\t\t\tresize: true\r\n\t\t\t},\r\n\t\t\tmodes: {\r\n\t\t\t\tgrab: {\r\n\t\t\t\t\tdistance: 140,\r\n\t\t\t\t\tline_linked: {\r\n\t\t\t\t\t\topacity: 1\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\tbubble: {\r\n\t\t\t\t\tdistance: 400,\r\n\t\t\t\t\tsize: 40,\r\n\t\t\t\t\tduration: 2,\r\n\t\t\t\t\topacity: 8,\r\n\t\t\t\t},\r\n\t\t\t\trepulse: {\r\n\t\t\t\t\tdistance: 200,\r\n\t\t\t\t\tduration: 0.4\r\n\t\t\t\t},\r\n\t\t\t\tpush: {\r\n\t\t\t\t\tparticles_nb: 4\r\n\t\t\t\t},\r\n\t\t\t\tremove: {\r\n\t\t\t\t\tparticles_nb: 2\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}).then(container => container?.play());\r\n\r\n\t// const test = tsParticles.domItem(0);\r\n\t//\r\n\t// test?.play();\r\n\tif(properties.theme===DAY){\r\n\t//\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div id='tsparticles'></div>\r\n\t);\r\n\r\n}\r\n\r\nexport const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n"]},"metadata":{},"sourceType":"module"}