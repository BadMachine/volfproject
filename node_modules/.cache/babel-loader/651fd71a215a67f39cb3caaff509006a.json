{"ast":null,"code":"// export interface callbackBtnSort{\n// \tcallback: ()=>void;\n// }\nexport const initialCommandsState = {\n  commands: {\n    name: '',\n    arrayLength: 10,\n    startSorting: false,\n    StopSort: false\n  }\n};\n\nfunction randomColor() {\n  return Math.floor(Math.random() * 255);\n}\n\nexport function generateColorsForChart(size, opacity) {\n  const colors = Array(size);\n  const borders = Array(size);\n\n  for (let iteration = 0; iteration < size; iteration++) {\n    const randomRGB = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}`;\n    colors[iteration] = `${randomRGB}, ${opacity})`;\n    borders[iteration] = `${randomRGB}, 1)`;\n  }\n\n  return [colors, borders];\n}\nexport const chartjsDataTemplate = {\n  labels: ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10'],\n  datasets: [{\n    label: '0s 0ms',\n    data: Array.from({\n      length: 10\n    }, () => Math.floor(Math.random() * 100)),\n    backgroundColor: ['rgba(255, 99, 132, 0.4)', 'rgba(54, 162, 235, 0.4)', 'rgba(255, 206, 86, 0.4)', 'rgba(75, 192, 192, 0.4)', 'rgba(153, 102, 255, 0.4)', 'rgba(255, 159, 64, 0.4)', 'rgba(54, 162, 235, 0.4)', 'rgba(255, 206, 86, 0.4)', 'rgba(75, 192, 192, 0.4)', 'rgba(153, 102, 255, 0.4)'],\n    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n    borderWidth: 1\n  }]\n};","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/interfaces/SortInterfaces.tsx"],"names":["initialCommandsState","commands","name","arrayLength","startSorting","StopSort","randomColor","Math","floor","random","generateColorsForChart","size","opacity","colors","Array","borders","iteration","randomRGB","chartjsDataTemplate","labels","datasets","label","data","from","length","backgroundColor","borderColor","borderWidth"],"mappings":"AAGA;AACA;AACA;AAgBA,OAAO,MAAMA,oBAAoB,GAAG;AACnCC,EAAAA,QAAQ,EAAC;AACRC,IAAAA,IAAI,EAAE,EADE;AAERC,IAAAA,WAAW,EAAE,EAFL;AAGRC,IAAAA,YAAY,EAAE,KAHN;AAIRC,IAAAA,QAAQ,EAAE;AAJF;AAD0B,CAA7B;;AAqBP,SAASC,WAAT,GAAsB;AACrB,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAP;AACA;;AAED,OAAO,SAASC,sBAAT,CAAgCC,IAAhC,EAA8CC,OAA9C,EAAyE;AAC/E,QAAMC,MAAM,GAAGC,KAAK,CAACH,IAAD,CAApB;AACA,QAAMI,OAAO,GAAGD,KAAK,CAACH,IAAD,CAArB;;AAEA,OAAI,IAAIK,SAAS,GAAG,CAApB,EAAuBA,SAAS,GAAGL,IAAnC,EAAyCK,SAAS,EAAlD,EAAqD;AACpD,UAAMC,SAAS,GAAI,QAAOX,WAAW,EAAG,KAAIA,WAAW,EAAG,KAAIA,WAAW,EAAG,EAA5E;AACAO,IAAAA,MAAM,CAACG,SAAD,CAAN,GAAqB,GAAEC,SAAU,KAAIL,OAAQ,GAA7C;AACAG,IAAAA,OAAO,CAACC,SAAD,CAAP,GAAsB,GAAEC,SAAU,MAAlC;AACA;;AAED,SAAO,CAACJ,MAAD,EAASE,OAAT,CAAP;AACA;AAED,OAAO,MAAMG,mBAAmB,GAAG;AAClCC,EAAAA,MAAM,EAAC,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,EAA8B,GAA9B,EAAkC,GAAlC,EAAsC,GAAtC,EAA0C,IAA1C,CAD2B;AAElCC,EAAAA,QAAQ,EAAE,CAAC;AACVC,IAAAA,KAAK,EAAE,QADG;AAEVC,IAAAA,IAAI,EAAER,KAAK,CAACS,IAAN,CAAW;AAACC,MAAAA,MAAM,EAAE;AAAT,KAAX,EAAyB,MAAMjB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAA/B,CAFI;AAGVgB,IAAAA,eAAe,EAAE,CAChB,yBADgB,EAEhB,yBAFgB,EAGhB,yBAHgB,EAIhB,yBAJgB,EAKhB,0BALgB,EAMhB,yBANgB,EAOhB,yBAPgB,EAQhB,yBARgB,EAShB,yBATgB,EAUhB,0BAVgB,CAHP;AAgBVC,IAAAA,WAAW,EAAE,CACZ,uBADY,EAEZ,uBAFY,EAGZ,uBAHY,EAIZ,uBAJY,EAKZ,wBALY,EAMZ,uBANY,EAOZ,uBAPY,EAQZ,uBARY,EASZ,uBATY,EAUZ,wBAVY,CAhBH;AA4BVC,IAAAA,WAAW,EAAE;AA5BH,GAAD;AAFwB,CAA5B","sourcesContent":["import React from 'react';\r\nimport {bubbleSort} from '../redux/SortingStateReducer';\r\n\r\n// export interface callbackBtnSort{\r\n// \tcallback: ()=>void;\r\n// }\r\n\r\nexport interface commands{\r\n\tname: string,\r\n    arrayLength: number,\r\n    startSorting: boolean,\r\n    StopSort: boolean\r\n}\r\n\r\nexport interface CommandsInterface{\r\n    commands: commands\r\n\r\n}\r\n\r\n\r\n\r\nexport const initialCommandsState = {\r\n\tcommands:{\r\n\t\tname: '',\r\n\t\tarrayLength: 10,\r\n\t\tstartSorting: false,\r\n\t\tStopSort: false\r\n\t}\r\n};\r\n\r\nexport type chartjsDataType = {\r\n    data: {\r\n        labels: string[]; datasets: {\r\n            label: string;\r\n            data: number[];\r\n            backgroundColor: string[];\r\n            borderColor: string[];\r\n            borderWidth: number; }[];\r\n    }\r\n};\r\n\r\n\r\nfunction randomColor(){\r\n\treturn Math.floor(Math.random() * 255);\r\n}\r\n\r\nexport function generateColorsForChart(size: number, opacity: number):string[][]{\r\n\tconst colors = Array(size);\r\n\tconst borders = Array(size);\r\n\r\n\tfor(let iteration = 0; iteration < size; iteration++){\r\n\t\tconst randomRGB = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}`;\r\n\t\tcolors[iteration] = `${randomRGB}, ${opacity})`;\r\n\t\tborders[iteration] = `${randomRGB}, 1)`;\r\n\t}\r\n\r\n\treturn [colors, borders];\r\n}\r\n\r\nexport const chartjsDataTemplate = {\r\n\tlabels:['1', '2', '3', '4', '5', '6','7','8','9','10'],\r\n\tdatasets: [{\r\n\t\tlabel: '0s 0ms',\r\n\t\tdata: Array.from({length: 10}, () => Math.floor(Math.random() * 100)),\r\n\t\tbackgroundColor: [\r\n\t\t\t'rgba(255, 99, 132, 0.4)',\r\n\t\t\t'rgba(54, 162, 235, 0.4)',\r\n\t\t\t'rgba(255, 206, 86, 0.4)',\r\n\t\t\t'rgba(75, 192, 192, 0.4)',\r\n\t\t\t'rgba(153, 102, 255, 0.4)',\r\n\t\t\t'rgba(255, 159, 64, 0.4)',\r\n\t\t\t'rgba(54, 162, 235, 0.4)',\r\n\t\t\t'rgba(255, 206, 86, 0.4)',\r\n\t\t\t'rgba(75, 192, 192, 0.4)',\r\n\t\t\t'rgba(153, 102, 255, 0.4)',\r\n\r\n\t\t],\r\n\t\tborderColor: [\r\n\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t'rgba(153, 102, 255, 1)'\r\n\t\t],\r\n\t\tborderWidth: 1\r\n\t}]\r\n};\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}