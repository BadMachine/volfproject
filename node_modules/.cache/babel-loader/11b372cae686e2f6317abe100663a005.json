{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\HeapSortChart.tsx\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { chartjsDataTemplate, generateColorsForChart } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass HeapSortChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = void 0;\n    this.chart = void 0;\n    this.timer = void 0;\n    this.interrupt = void 0;\n    this.uselessRefresh = void 0;\n    this.state = void 0;\n    this.props = void 0;\n    this.timeouts = void 0;\n    this.date = void 0;\n\n    this.heapify = (size, i, timeout) => {\n      let largest = i;\n      const left = i * 2 + 1;\n      const right = left + 1;\n      const labels = this.chart.data.labels;\n      const data = this.chart.data.datasets[0].data;\n      const colors = this.chart.data.datasets[0].backgroundColor; //let timeout = 0;\n\n      if (left < size && data[left] > data[largest]) {\n        largest = left;\n      }\n\n      if (right < size && data[right] > data[largest]) {\n        largest = right;\n      }\n\n      if (largest !== i) {\n        [data[i], data[largest]] = [data[largest], data[i]];\n        timeout += 100;\n        const theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\n        this.timeouts.push(theTimeout);\n        this.heapify(size, largest, timeout);\n      }\n    };\n\n    this.heapSort = () => {\n      const labels = this.chart.data.labels;\n      const data = this.chart.data.datasets[0].data;\n      const colors = this.chart.data.datasets[0].backgroundColor;\n      let timeout = 0;\n      const length = data.length;\n      let i = Math.floor(length / 2 - 1);\n      let k = length - 1;\n\n      while (i >= 0) {\n        this.heapify(length, i, timeout);\n        i--;\n        timeout += 100;\n        const theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\n        this.timeouts.push(theTimeout);\n      }\n\n      while (k >= 0) {\n        [data[0], data[k]] = [data[k], data[0]];\n        this.heapify(k, 0, timeout);\n        k--;\n        timeout += 100;\n        const theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\n        this.timeouts.push(theTimeout);\n      }\n    };\n\n    this.equals = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\n    this.state = chartjsDataTemplate;\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.timer = 0;\n    this.interrupt = false;\n    this.date = 0;\n    this.uselessRefresh = false;\n    this.timeouts = [];\n  }\n\n  componentDidMount() {\n    this.chart = this.chartReference.current.chartInstance;\n  }\n\n  updateChartDelayed(labels, data, colors, timeout) {\n    this.timer = setTimeout(() => {\n      const now = new Date().getTime();\n      const timeDifference = now - this.date;\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n      const mins = timeDifference / 60000;\n      const mils = Math.floor(timeDifference % (1000 * 60) / 1);\n      this.chart.data.datasets[0].label = `${mins.toString().substr(0, 1)}m ${seconds}s ${mils.toString().substr(-3)}ms`;\n      this.chart.data.labels = labels;\n      this.chart.data.datasets[0].data = data;\n      this.chart.data.datasets[0].backgroundColor = colors;\n      this.chart.update();\n      const eth = [...this.chart.data.datasets[0].data].sort((x, y) => x - y);\n\n      if (eth.toString() === this.chart.data.datasets[0].data.toString()) {\n        this.props.callback();\n      }\n    }, timeout);\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  clearAllTimeouts() {\n    for (const timeout in this.timeouts) {\n      clearInterval(this.timeouts[timeout]);\n    }\n\n    this.timeouts = [];\n  }\n\n  refreshChart() {\n    //console.log(this.props.commands.arrayLength);\n    const temporaryDataToSort = chartjsDataTemplate;\n    temporaryDataToSort.datasets[0].data = Array.from({\n      length: this.props.commands.arrayLength\n    }, () => Math.floor(Math.random() * 1000));\n    temporaryDataToSort.labels = Array.from({\n      length: this.props.commands.arrayLength\n    }, (_, i) => (i + 1).toString());\n    [temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\n    this.setState(temporaryDataToSort);\n  }\n\n  checkIfSorted(chart) {\n    const $chart = chart;\n    return $chart.every((v, i, a) => !i || a[i - 1] <= v);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('HEAP TRIGGERED!');\n\n    if (prevProps !== this.props) {\n      this.date = new Date(Date.now()).getTime();\n      this.clearAllTimeouts();\n\n      if (this.checkIfSorted(this.chart.data.datasets[0].data)) {\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.heapSort();\n        }, 800);\n      } else if (this.props.commands.StopSort) {\n        this.clearAllTimeouts();\n      } else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.heapSort();\n        }, 800);\n      } else if (this.props.commands.name !== prevProps.commands.name) {\n        this.heapSort();\n      } else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.heapSort();\n        }, 800);\n      } else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.heapSort();\n        }, 800);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        width: 100,\n        height: 50,\n        options: {\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              boxWidth: 0\n            }\n          }\n        },\n        ref: this.chartReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport const MemorizedHeapChart = /*#__PURE__*/React.memo(HeapSortChart);\n_c = MemorizedHeapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedHeapChart\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/HeapSortChart.tsx"],"names":["React","Component","Bar","chartjsDataTemplate","generateColorsForChart","HeapSortChart","constructor","props","chartReference","chart","timer","interrupt","uselessRefresh","state","timeouts","date","heapify","size","i","timeout","largest","left","right","labels","data","datasets","colors","backgroundColor","theTimeout","updateChartDelayed","slice","push","heapSort","length","Math","floor","k","equals","a","b","JSON","stringify","createRef","componentDidMount","current","chartInstance","setTimeout","now","Date","getTime","timeDifference","seconds","mins","mils","label","toString","substr","update","eth","sort","x","y","callback","componentWillUnmount","clearInterval","clearAllTimeouts","refreshChart","temporaryDataToSort","Array","from","commands","arrayLength","random","_","borderColor","setState","checkIfSorted","$chart","every","v","componentDidUpdate","prevProps","console","log","StopSort","name","render","legend","display","position","boxWidth","MemorizedHeapChart","memo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {CommandsInterface, chartjsDataTemplate, generateColorsForChart} from '../interfaces/SortInterfaces';\r\nimport {sortingStore} from './ModalContent';\r\nimport {heapSort} from '../redux/SortingStateReducer';\r\n\r\n\r\nclass HeapSortChart extends Component<CommandsInterface>{\r\n\tprivate chartReference: React.RefObject<any>;\r\n\tprivate chart: any;\r\n\tprivate timer: any;\r\n\tprivate interrupt: boolean;\r\n\tprivate uselessRefresh: boolean;\r\n\tpublic state;\r\n\tpublic props: any;\r\n\tprivate timeouts:number[];\r\n\tprivate date: number;\r\n\r\n\tconstructor(props: CommandsInterface) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = chartjsDataTemplate;\r\n\r\n\t\tthis.chartReference = React.createRef<any>();\r\n\r\n\t\tthis.timer = 0;\r\n\r\n\r\n\t\tthis.interrupt = false;\r\n\r\n\t\tthis.date = 0;\r\n\r\n\r\n\t\tthis.uselessRefresh = false;\r\n\t\tthis.timeouts = [];\r\n\r\n\t}\r\n\r\n\theapify = (size:number, i:number, timeout: number) => {\r\n\t\tlet largest = i;\r\n\t\tconst left = i * 2 + 1;\r\n\t\tconst right = left + 1;\r\n\r\n\t\tconst labels = this.chart.data.labels;\r\n\t\tconst data = this.chart.data.datasets[0].data;\r\n\t\tconst colors = this.chart.data.datasets[0].backgroundColor;\r\n\t\t//let timeout = 0;\r\n\r\n\t\tif (left < size && data[left] > data[largest]) {\r\n\t\t\tlargest = left;\r\n\t\t}\r\n\r\n\t\tif (right < size && data[right] > data[largest]) {\r\n\t\t\tlargest = right;\r\n\t\t}\r\n\r\n\t\tif (largest !== i) {\r\n\t\t\t[data[i], data[largest]] = [data[largest], data[i]];\r\n\t\t\ttimeout+=100;\r\n\t\t\tconst theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\r\n\t\t\tthis.timeouts.push(theTimeout);\r\n\t\t\tthis.heapify( size, largest,timeout);\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\theapSort = () => {\r\n\t\tconst labels = this.chart.data.labels;\r\n\t\tconst data = this.chart.data.datasets[0].data;\r\n\t\tconst colors = this.chart.data.datasets[0].backgroundColor;\r\n\t\tlet timeout = 0;\r\n\r\n\t\tconst length = data.length;\r\n\t\tlet i = Math.floor(length / 2 - 1);\r\n\t\tlet k = length - 1;\r\n\r\n\t\twhile (i >= 0) {\r\n\t\t\tthis.heapify( length, i, timeout);\r\n\t\t\ti--;\r\n\t\t\ttimeout += 100;\r\n\t\t\tconst theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\r\n\t\t\tthis.timeouts.push(theTimeout);\r\n\t\t}\r\n\r\n\t\twhile (k >= 0) {\r\n\t\t\t[data[0], data[k]] = [data[k], data[0]];\r\n\t\t\tthis.heapify( k, 0, timeout);\r\n\t\t\tk--;\r\n\r\n\t\t\ttimeout += 100;\r\n\t\t\tconst theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\r\n\t\t\tthis.timeouts.push(theTimeout);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\tequals = (a:number[], b:number[]) => JSON.stringify(a) === JSON.stringify(b);\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.chart = this.chartReference.current.chartInstance;\r\n\t}\r\n\r\n\r\n\tupdateChartDelayed(labels: string[], data:number[], colors:string[], timeout:number) {\r\n\r\n\r\n\t\tthis.timer = setTimeout(() => {\r\n\r\n\t\t\tconst now = new Date().getTime();\r\n\r\n\t\t\tconst timeDifference  = now - this.date;\r\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\t\t\tconst mins = timeDifference /60000;\r\n\t\t\tconst mils = Math.floor((timeDifference % (1000 * 60)) / 1);\r\n\r\n\t\t\tthis.chart.data.datasets[0].label =  `${mins.toString().substr(0,1)}m ${seconds}s ${mils.toString().substr(-3)}ms`  ;\r\n\t\t\tthis.chart.data.labels = labels;\r\n\t\t\tthis.chart.data.datasets[0].data = data;\r\n\t\t\tthis.chart.data.datasets[0].backgroundColor = colors;\r\n\t\t\tthis.chart.update();\r\n\r\n\t\t\tconst eth = [...this.chart.data.datasets[0].data].sort((x,y)=> x-y);\r\n\t\t\tif( eth.toString() === this.chart.data.datasets[0].data.toString()) {\r\n\t\t\t\tthis.props.callback();\r\n\t\t\t}\r\n\r\n\r\n\t\t}, timeout);\r\n\r\n\r\n\r\n\t\treturn this.timer;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\r\n\t}\r\n\r\n\r\n\tclearAllTimeouts(){\r\n\t\tfor(const timeout in this.timeouts){\r\n\t\t\tclearInterval(this.timeouts[timeout]);\r\n\t\t}\r\n\t\tthis.timeouts=[];\r\n\t}\r\n\r\n\trefreshChart(){\r\n\t\t//console.log(this.props.commands.arrayLength);\r\n\t\tconst temporaryDataToSort = chartjsDataTemplate;\r\n\t\ttemporaryDataToSort.datasets[0].data = Array.from({length: this.props.commands.arrayLength}, () => Math.floor(Math.random() * 1000));\r\n\t\ttemporaryDataToSort.labels = Array.from({ length: this.props.commands.arrayLength }, (_, i) => (i+1).toString());\r\n\t\t[temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\r\n\t\tthis.setState(temporaryDataToSort);\r\n\t}\r\n\r\n\tcheckIfSorted(chart:number[]){\r\n\t\tconst $chart = chart;\r\n\t\treturn $chart.every((v,i,a) => !i || a[i-1] <= v);\r\n\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:CommandsInterface) {\r\n\r\n\t\tconsole.log('HEAP TRIGGERED!');\r\n\r\n\t\tif(prevProps!==this.props) {\r\n\r\n\r\n\t\t\tthis.date = new Date(Date.now()).getTime();\r\n\r\n\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\tif(this.checkIfSorted(this.chart.data.datasets[0].data))\r\n\t\t\t{\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.heapSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t}\r\n\t\t\telse if (this.props.commands.StopSort) {\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t}else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.heapSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name) {\r\n\r\n\t\t\t\tthis.heapSort();\r\n\t\t\t} else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.heapSort();\r\n\t\t\t\t}, 800);\r\n\r\n\t\t\t} else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.heapSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div><Bar data={this.state} width={100} height={50} options={{\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\tboxWidth: 0,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}} ref={this.chartReference}/> </div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n}\r\nexport const MemorizedHeapChart = React.memo(HeapSortChart);\r\n"]},"metadata":{},"sourceType":"module"}