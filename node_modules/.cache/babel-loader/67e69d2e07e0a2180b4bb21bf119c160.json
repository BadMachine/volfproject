{"ast":null,"code":"export const bubbleSort = 'bubblesort';\nexport const bubbleSortCancelled = 'bubblesortCancelled';\nexport const heapSort = 'heapSort';\nexport const heapSortCancelled = 'heapSortCancelled';\nexport const quickSort = 'quickSort';\nexport const quickSortCancelled = 'quickSortCancelled';\nexport const arraySort = 'arraySort';\nexport const custom = 'custom';\nconst initialState = {\n  bubble: '',\n  heap: '',\n  quick: ''\n};\nexport function SortingStateReducer(state = initialState, action) {\n  // switch (action.type) {\n  //\n  // case bubbleSort:\n  // \tif(state===bubbleSort){\n  // \t\tstate = bubbleSortCanceled;\n  // \t}else{\n  // \t\tstate=bubbleSort;\n  // \t}\n  // \tbreak;\n  // case arraySort:\n  // \tstate = arraySort;\n  // \tbreak;\n  // case custom:\n  // \tstate = custom;\n  // \tbreak;\n  // default:\n  // \tstate = '';\n  // \tbreak;\n  // }\n  switch (action.type) {\n    case bubbleSort:\n      if (state.bubble === bubbleSort) {\n        state = {\n          bubble: bubbleSortCancelled,\n          heap: state.heap\n        };\n      } else state = {\n        bubble: bubbleSort,\n        heap: state.heap\n      };\n\n      break;\n\n    case heapSort:\n      if (state.heap === heapSort) {\n        state = {\n          bubble: state.bubble,\n          heap: heapSortCancelled\n        };\n      } else state = {\n        bubble: state.bubble,\n        heap: heapSort\n      };\n\n      break;\n  }\n\n  return state;\n}\n_c = SortingStateReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingStateReducer\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/redux/SortingStateReducer.ts"],"names":["bubbleSort","bubbleSortCancelled","heapSort","heapSortCancelled","quickSort","quickSortCancelled","arraySort","custom","initialState","bubble","heap","quick","SortingStateReducer","state","action","type"],"mappings":"AAEA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AAEP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,MAAM,GAAE,QAAd;AAGP,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAC,EADa;AAEpBC,EAAAA,IAAI,EAAC,EAFe;AAGpBC,EAAAA,KAAK,EAAC;AAHc,CAArB;AAcA,OAAO,SAASC,mBAAT,CAA6BC,KAAK,GAAEL,YAApC,EAAkDM,MAAlD,EAAuF;AAG7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA,UAAQA,MAAM,CAACC,IAAf;AAEA,SAAKf,UAAL;AACC,UAAGa,KAAK,CAACJ,MAAN,KAAiBT,UAApB,EAA+B;AAC9Ba,QAAAA,KAAK,GAAG;AAACJ,UAAAA,MAAM,EAAER,mBAAT;AAA8BS,UAAAA,IAAI,EAAEG,KAAK,CAACH;AAA1C,SAAR;AACA,OAFD,MAEMG,KAAK,GAAG;AAACJ,QAAAA,MAAM,EAAET,UAAT;AAAqBU,QAAAA,IAAI,EAAEG,KAAK,CAACH;AAAjC,OAAR;;AACN;;AACD,SAAKR,QAAL;AACC,UAAGW,KAAK,CAACH,IAAN,KAAeR,QAAlB,EAA2B;AAC1BW,QAAAA,KAAK,GAAG;AAACJ,UAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAf;AAAuBC,UAAAA,IAAI,EAAEP;AAA7B,SAAR;AACA,OAFD,MAEOU,KAAK,GAAG;AAACJ,QAAAA,MAAM,EAAEI,KAAK,CAACJ,MAAf;AAAuBC,QAAAA,IAAI,EAAER;AAA7B,OAAR;;AACP;AAXD;;AAgBA,SAAOW,KAAP;AACA;KA3CeD,mB","sourcesContent":["import {AnyAction} from 'redux';\r\n\r\nexport const bubbleSort = 'bubblesort';\r\nexport const bubbleSortCancelled = 'bubblesortCancelled';\r\nexport const heapSort = 'heapSort';\r\nexport const heapSortCancelled = 'heapSortCancelled';\r\nexport const quickSort = 'quickSort';\r\nexport const quickSortCancelled = 'quickSortCancelled';\r\n\r\nexport const arraySort = 'arraySort';\r\nexport const custom= 'custom';\r\n\r\n\r\nconst initialState = {\r\n\tbubble:'',\r\n\theap:'',\r\n\tquick:''\r\n};\r\n\r\nexport type storeCommands = {\r\n\tbubble:string,\r\n\theap:string,\r\n\tquick:string\r\n}\r\n\r\n\r\n\r\nexport function SortingStateReducer(state= initialState, action :{type: string}):storeCommands{\r\n\r\n\r\n\t// switch (action.type) {\r\n\t//\r\n\t// case bubbleSort:\r\n\t// \tif(state===bubbleSort){\r\n\t// \t\tstate = bubbleSortCanceled;\r\n\t// \t}else{\r\n\t// \t\tstate=bubbleSort;\r\n\t// \t}\r\n\t// \tbreak;\r\n\t// case arraySort:\r\n\t// \tstate = arraySort;\r\n\t// \tbreak;\r\n\t// case custom:\r\n\t// \tstate = custom;\r\n\t// \tbreak;\r\n\t// default:\r\n\t// \tstate = '';\r\n\t// \tbreak;\r\n\t// }\r\n\r\n\r\n\r\n\r\n\tswitch (action.type){\r\n\r\n\tcase bubbleSort:\r\n\t\tif(state.bubble === bubbleSort){\r\n\t\t\tstate = {bubble: bubbleSortCancelled, heap: state.heap};\r\n\t\t}else state = {bubble: bubbleSort, heap: state.heap};\r\n\t\tbreak;\r\n\tcase heapSort:\r\n\t\tif(state.heap === heapSort){\r\n\t\t\tstate = {bubble: state.bubble, heap: heapSortCancelled};\r\n\t\t} else state = {bubble: state.bubble, heap: heapSort};\r\n\t\tbreak;\r\n\t}\r\n\r\n\r\n\r\n\treturn state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}