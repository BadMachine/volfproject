{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMencloseMixin = void 0;\n\nvar Notation = require(\"../Notation.js\");\n\nvar string_js_1 = require(\"../../../util/string.js\");\n\nfunction CommonMencloseMixin(Base) {\n  return function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spread(args)) || this;\n\n      _this.notations = {};\n      _this.renderChild = null;\n      _this.msqrt = null;\n      _this.padding = Notation.PADDING;\n      _this.thickness = Notation.THICKNESS;\n      _this.arrowhead = {\n        x: Notation.ARROWX,\n        y: Notation.ARROWY,\n        dx: Notation.ARROWDX\n      };\n\n      _this.getParameters();\n\n      _this.getNotations();\n\n      _this.removeRedundantNotations();\n\n      _this.initializeNotations();\n\n      return _this;\n    }\n\n    class_1.prototype.getParameters = function () {\n      var attributes = this.node.attributes;\n      var padding = attributes.get('data-padding');\n\n      if (padding !== undefined) {\n        this.padding = this.length2em(padding, Notation.PADDING);\n      }\n\n      var thickness = attributes.get('data-thickness');\n\n      if (thickness !== undefined) {\n        this.thickness = this.length2em(thickness, Notation.THICKNESS);\n      }\n\n      var arrowhead = attributes.get('data-arrowhead');\n\n      if (arrowhead !== undefined) {\n        var _b = __read(string_js_1.split(arrowhead), 3),\n            x = _b[0],\n            y = _b[1],\n            dx = _b[2];\n\n        this.arrowhead = {\n          x: x ? parseFloat(x) : Notation.ARROWX,\n          y: y ? parseFloat(y) : Notation.ARROWY,\n          dx: dx ? parseFloat(dx) : Notation.ARROWDX\n        };\n      }\n    };\n\n    class_1.prototype.getNotations = function () {\n      var e_1, _b;\n\n      var Notations = this.constructor.notations;\n\n      try {\n        for (var _c = __values(string_js_1.split(this.node.attributes.get('notation'))), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var name_1 = _d.value;\n          var notation = Notations.get(name_1);\n\n          if (notation) {\n            this.notations[name_1] = notation;\n\n            if (notation.renderChild) {\n              this.renderChild = notation.renderer;\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    };\n\n    class_1.prototype.removeRedundantNotations = function () {\n      var e_2, _b, e_3, _c;\n\n      try {\n        for (var _d = __values(Object.keys(this.notations)), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var name_2 = _e.value;\n\n          if (this.notations[name_2]) {\n            var remove = this.notations[name_2].remove || '';\n\n            try {\n              for (var _f = (e_3 = void 0, __values(remove.split(/ /))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var notation = _g.value;\n                delete this.notations[notation];\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    };\n\n    class_1.prototype.initializeNotations = function () {\n      var e_4, _b;\n\n      try {\n        for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var name_3 = _d.value;\n          var init = this.notations[name_3].init;\n          init && init(this);\n        }\n      } catch (e_4_1) {\n        e_4 = {\n          error: e_4_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        } finally {\n          if (e_4) throw e_4.error;\n        }\n      }\n    };\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      var _b = __read(this.getBBoxExtenders(), 4),\n          T = _b[0],\n          R = _b[1],\n          B = _b[2],\n          L = _b[3];\n\n      var child = this.childNodes[0].getBBox();\n      bbox.combine(child, L, 0);\n      bbox.h += T;\n      bbox.d += B;\n      bbox.w += R;\n      this.setChildPWidths(recompute);\n    };\n\n    class_1.prototype.getBBoxExtenders = function () {\n      var e_5, _b;\n\n      var TRBL = [0, 0, 0, 0];\n\n      try {\n        for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var name_4 = _d.value;\n          this.maximizeEntries(TRBL, this.notations[name_4].bbox(this));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      return TRBL;\n    };\n\n    class_1.prototype.getPadding = function () {\n      var e_6, _b;\n\n      var TRBL = [0, 0, 0, 0];\n      var BTRBL = [0, 0, 0, 0];\n\n      try {\n        for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var name_5 = _d.value;\n          this.maximizeEntries(TRBL, this.notations[name_5].bbox(this));\n          var border = this.notations[name_5].border;\n\n          if (border) {\n            this.maximizeEntries(BTRBL, border(this));\n          }\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n\n      return [0, 1, 2, 3].map(function (i) {\n        return TRBL[i] - BTRBL[i];\n      });\n    };\n\n    class_1.prototype.maximizeEntries = function (X, Y) {\n      for (var i = 0; i < X.length; i++) {\n        if (X[i] < Y[i]) {\n          X[i] = Y[i];\n        }\n      }\n    };\n\n    class_1.prototype.getArgMod = function (w, h) {\n      return [Math.atan2(h, w), Math.sqrt(w * w + h * h)];\n    };\n\n    class_1.prototype.arrow = function (_w, _a, _double) {\n      if (_double === void 0) {\n        _double = false;\n      }\n\n      return null;\n    };\n\n    class_1.prototype.arrowData = function () {\n      var _b = __read([this.padding, this.thickness], 2),\n          p = _b[0],\n          t = _b[1];\n\n      var r = t * (this.arrowhead.x + Math.max(1, this.arrowhead.dx));\n\n      var _c = this.childNodes[0].getBBox(),\n          h = _c.h,\n          d = _c.d,\n          w = _c.w;\n\n      var H = h + d;\n      var R = Math.sqrt(H * H + w * w);\n      var x = Math.max(p, r * w / R);\n      var y = Math.max(p, r * H / R);\n\n      var _d = __read(this.getArgMod(w + 2 * x, H + 2 * y), 2),\n          a = _d[0],\n          W = _d[1];\n\n      return {\n        a: a,\n        W: W,\n        x: x,\n        y: y\n      };\n    };\n\n    class_1.prototype.createMsqrt = function (child) {\n      var mmlFactory = this.node.factory;\n      var mml = mmlFactory.create('msqrt');\n      mml.inheritAttributesFrom(this.node);\n      mml.childNodes[0] = child.node;\n      var node = this.wrap(mml);\n      node.parent = this;\n      return node;\n    };\n\n    class_1.prototype.sqrtTRBL = function () {\n      var bbox = this.msqrt.getBBox();\n      var cbox = this.msqrt.childNodes[0].getBBox();\n      return [bbox.h - cbox.h, 0, bbox.d - cbox.d, bbox.w - cbox.w];\n    };\n\n    return class_1;\n  }(Base);\n}\n\nexports.CommonMencloseMixin = CommonMencloseMixin;","map":{"version":3,"sources":["../../../../ts/output/common/Wrappers/menclose.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommonMencloseMixin = void 0;\nvar Notation = require(\"../Notation.js\");\nvar string_js_1 = require(\"../../../util/string.js\");\nfunction CommonMencloseMixin(Base) {\n    return (function (_super) {\n        __extends(class_1, _super);\n        function class_1() {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            var _this = _super.apply(this, __spread(args)) || this;\n            _this.notations = {};\n            _this.renderChild = null;\n            _this.msqrt = null;\n            _this.padding = Notation.PADDING;\n            _this.thickness = Notation.THICKNESS;\n            _this.arrowhead = { x: Notation.ARROWX, y: Notation.ARROWY, dx: Notation.ARROWDX };\n            _this.getParameters();\n            _this.getNotations();\n            _this.removeRedundantNotations();\n            _this.initializeNotations();\n            return _this;\n        }\n        class_1.prototype.getParameters = function () {\n            var attributes = this.node.attributes;\n            var padding = attributes.get('data-padding');\n            if (padding !== undefined) {\n                this.padding = this.length2em(padding, Notation.PADDING);\n            }\n            var thickness = attributes.get('data-thickness');\n            if (thickness !== undefined) {\n                this.thickness = this.length2em(thickness, Notation.THICKNESS);\n            }\n            var arrowhead = attributes.get('data-arrowhead');\n            if (arrowhead !== undefined) {\n                var _b = __read(string_js_1.split(arrowhead), 3), x = _b[0], y = _b[1], dx = _b[2];\n                this.arrowhead = {\n                    x: (x ? parseFloat(x) : Notation.ARROWX),\n                    y: (y ? parseFloat(y) : Notation.ARROWY),\n                    dx: (dx ? parseFloat(dx) : Notation.ARROWDX)\n                };\n            }\n        };\n        class_1.prototype.getNotations = function () {\n            var e_1, _b;\n            var Notations = this.constructor.notations;\n            try {\n                for (var _c = __values(string_js_1.split(this.node.attributes.get('notation'))), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_1 = _d.value;\n                    var notation = Notations.get(name_1);\n                    if (notation) {\n                        this.notations[name_1] = notation;\n                        if (notation.renderChild) {\n                            this.renderChild = notation.renderer;\n                        }\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        };\n        class_1.prototype.removeRedundantNotations = function () {\n            var e_2, _b, e_3, _c;\n            try {\n                for (var _d = __values(Object.keys(this.notations)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                    var name_2 = _e.value;\n                    if (this.notations[name_2]) {\n                        var remove = this.notations[name_2].remove || '';\n                        try {\n                            for (var _f = (e_3 = void 0, __values(remove.split(/ /))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                                var notation = _g.value;\n                                delete this.notations[notation];\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (_g && !_g.done && (_c = _f.return)) _c.call(_f);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_e && !_e.done && (_b = _d.return)) _b.call(_d);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        };\n        class_1.prototype.initializeNotations = function () {\n            var e_4, _b;\n            try {\n                for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_3 = _d.value;\n                    var init = this.notations[name_3].init;\n                    init && init(this);\n                }\n            }\n            catch (e_4_1) { e_4 = { error: e_4_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                }\n                finally { if (e_4) throw e_4.error; }\n            }\n        };\n        class_1.prototype.computeBBox = function (bbox, recompute) {\n            if (recompute === void 0) { recompute = false; }\n            var _b = __read(this.getBBoxExtenders(), 4), T = _b[0], R = _b[1], B = _b[2], L = _b[3];\n            var child = this.childNodes[0].getBBox();\n            bbox.combine(child, L, 0);\n            bbox.h += T;\n            bbox.d += B;\n            bbox.w += R;\n            this.setChildPWidths(recompute);\n        };\n        class_1.prototype.getBBoxExtenders = function () {\n            var e_5, _b;\n            var TRBL = [0, 0, 0, 0];\n            try {\n                for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_4 = _d.value;\n                    this.maximizeEntries(TRBL, this.notations[name_4].bbox(this));\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n            return TRBL;\n        };\n        class_1.prototype.getPadding = function () {\n            var e_6, _b;\n            var TRBL = [0, 0, 0, 0];\n            var BTRBL = [0, 0, 0, 0];\n            try {\n                for (var _c = __values(Object.keys(this.notations)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var name_5 = _d.value;\n                    this.maximizeEntries(TRBL, this.notations[name_5].bbox(this));\n                    var border = this.notations[name_5].border;\n                    if (border) {\n                        this.maximizeEntries(BTRBL, border(this));\n                    }\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_b = _c.return)) _b.call(_c);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n            return [0, 1, 2, 3].map(function (i) { return TRBL[i] - BTRBL[i]; });\n        };\n        class_1.prototype.maximizeEntries = function (X, Y) {\n            for (var i = 0; i < X.length; i++) {\n                if (X[i] < Y[i]) {\n                    X[i] = Y[i];\n                }\n            }\n        };\n        class_1.prototype.getArgMod = function (w, h) {\n            return [Math.atan2(h, w), Math.sqrt(w * w + h * h)];\n        };\n        class_1.prototype.arrow = function (_w, _a, _double) {\n            if (_double === void 0) { _double = false; }\n            return null;\n        };\n        class_1.prototype.arrowData = function () {\n            var _b = __read([this.padding, this.thickness], 2), p = _b[0], t = _b[1];\n            var r = t * (this.arrowhead.x + Math.max(1, this.arrowhead.dx));\n            var _c = this.childNodes[0].getBBox(), h = _c.h, d = _c.d, w = _c.w;\n            var H = h + d;\n            var R = Math.sqrt(H * H + w * w);\n            var x = Math.max(p, r * w / R);\n            var y = Math.max(p, r * H / R);\n            var _d = __read(this.getArgMod(w + 2 * x, H + 2 * y), 2), a = _d[0], W = _d[1];\n            return { a: a, W: W, x: x, y: y };\n        };\n        class_1.prototype.createMsqrt = function (child) {\n            var mmlFactory = this.node.factory;\n            var mml = mmlFactory.create('msqrt');\n            mml.inheritAttributesFrom(this.node);\n            mml.childNodes[0] = child.node;\n            var node = this.wrap(mml);\n            node.parent = this;\n            return node;\n        };\n        class_1.prototype.sqrtTRBL = function () {\n            var bbox = this.msqrt.getBBox();\n            var cbox = this.msqrt.childNodes[0].getBBox();\n            return [bbox.h - cbox.h, 0, bbox.d - cbox.d, bbox.w - cbox.w];\n        };\n        return class_1;\n    }(Base));\n}\nexports.CommonMencloseMixin = CommonMencloseMixin;\n//# sourceMappingURL=menclose.js.map"]},"metadata":{},"sourceType":"script"}