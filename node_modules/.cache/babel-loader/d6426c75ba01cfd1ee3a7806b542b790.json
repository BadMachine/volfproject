{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BackGroundParticles.tsx\";\nimport React from 'react';\nimport { backgroundParticlesConfig } from './configs/particlesConfig';\nimport { NIGHT } from '../interfaces/stateInterfaces';\nimport { tsParticles } from 'tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BackGroundParticles extends React.Component {\n  constructor(properties) {\n    super(properties); // this.particlesInit = this.particlesInit.bind(this);\n    // this.particlesLoaded = this.particlesLoaded.bind(this);\n\n    this.particlesContainer = void 0;\n    this.theme = void 0;\n    this.options = void 0;\n    this.theme = properties.theme; // this.particlesContainer;\n\n    this.options = backgroundParticlesConfig;\n  }\n\n  componentDidMount() {\n    //\n    tsParticles.load('tsparticles', this.options);\n  } // particlesInit(main:any) {\n  // \tconsole.log(main);\n  // }\n\n\n  particlesLoaded(container) {// this.particlesContainer = container;\n    //console.log(this.particlesContainer);\n  }\n\n  pause(theme) {\n    const particles = tsParticles.domItem(0);\n    particles === null || particles === void 0 ? void 0 : particles.pause(); // setTimeout(()=>this.particlesContainer?.pause(), 300);\n    // this.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\n    // this.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\n    //setTimeout(()=>this.particlesContainer?.pause(), 300);\n    // this.particlesContainer?.pause();\n  }\n\n  resume() {\n    const particles = tsParticles.domItem(0);\n    particles === null || particles === void 0 ? void 0 : particles.play(); // this.particlesContainer?.play();\n  }\n\n  changeTheme(theme) {\n    console.log(111);\n    const particles = tsParticles.domItem(0);\n    const options = particles === null || particles === void 0 ? void 0 : particles.options; // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n\n    options.particles.color.value = theme === NIGHT ? '#ffffff' : '#141414';\n    particles === null || particles === void 0 ? void 0 : particles.particles.array.forEach(particle => {\n      particle;\n    });\n    particles === null || particles === void 0 ? void 0 : particles.refresh(); // console.log(theme);\n    // this.options = this.particlesContainer?.options;\n    // this.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\n    // this.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\n    //\n    // this.forceUpdate();\n    // this.particlesContainer?.refresh();\n    // this.options.particles.color.value = (theme === NIGHT)? '#141414': '#ffffff';\n    // this.options.particles.line_linked.color = (theme === NIGHT)? '#141414': '#ffffff';\n    //this.forceUpdate();\n    // this.particlesContainer?.options.load(JSON.parse(JSON.stringify(this.options)));\n    //\n    // this.particlesContainer?.refresh();\n    // this.particlesContainer?.destroy();\n    // this.particlesContainer?.start();\n    //console.log(this.particlesContainer);\n  }\n\n  componentDidUpdate(prevProps) {\n    // console.log(this.particlesContainer);\n    // this.props.theme==='day'? this.changeTheme(): this.changeTheme();\n    if (prevProps.theme !== this.props.theme) this.changeTheme(this.props.theme);\n    Object.values(this.props.properties).includes(true) ? this.pause(this.props.theme) : this.resume();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <Particles loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\n      _jsxDEV(\"div\", {\n        id: \"tsparticles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }, this)\n    );\n  }\n\n}\n\nexport const MemorizedBackgroundParticles = /*#__PURE__*/React.memo(BackGroundParticles);\n_c = MemorizedBackgroundParticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedBackgroundParticles\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BackGroundParticles.tsx"],"names":["React","backgroundParticlesConfig","NIGHT","tsParticles","BackGroundParticles","Component","constructor","properties","particlesContainer","theme","options","componentDidMount","load","particlesLoaded","container","pause","particles","domItem","resume","play","changeTheme","console","log","color","value","array","forEach","particle","refresh","componentDidUpdate","prevProps","props","Object","values","includes","render","MemorizedBackgroundParticles","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AACA,SAAQC,yBAAR,QAAwC,2BAAxC;AAEA,SAA6BC,KAA7B,QAA8C,+BAA9C;AAEA,SAASC,WAAT,QAA4B,aAA5B;;;AAUA,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAA6D;AAK5DC,EAAAA,WAAW,CAACC,UAAD,EAAwB;AAClC,UAAMA,UAAN,EADkC,CAElC;AACA;;AAHkC,SAH5BC,kBAG4B;AAAA,SAF3BC,KAE2B;AAAA,SAD5BC,OAC4B;AAIlC,SAAKD,KAAL,GAAaF,UAAU,CAACE,KAAxB,CAJkC,CAKlC;;AACA,SAAKC,OAAL,GAAeT,yBAAf;AACA;;AAEDU,EAAAA,iBAAiB,GAAG;AACnB;AACAR,IAAAA,WAAW,CAACS,IAAZ,CAAiB,aAAjB,EAAgC,KAAKF,OAArC;AACA,GAjB2D,CAmB5D;AACA;AACA;;;AAEAG,EAAAA,eAAe,CAACC,SAAD,EAAgB,CAC9B;AACA;AACA;;AAGDC,EAAAA,KAAK,CAACN,KAAD,EAAe;AACnB,UAAMO,SAAS,GAAGb,WAAW,CAACc,OAAZ,CAAoB,CAApB,CAAlB;AACAD,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAED,KAAX,GAFmB,CAInB;AACA;AACA;AACA;AACA;AACA;;AACDG,EAAAA,MAAM,GAAE;AACP,UAAMF,SAAS,GAAGb,WAAW,CAACc,OAAZ,CAAoB,CAApB,CAAlB;AACAD,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEG,IAAX,GAFO,CAGP;AACA;;AAEDC,EAAAA,WAAW,CAACX,KAAD,EAAe;AAEzBY,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACA,UAAMN,SAAS,GAAGb,WAAW,CAACc,OAAZ,CAAoB,CAApB,CAAlB;AACA,UAAMP,OAAO,GAAGM,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEN,OAA3B,CAJyB,CAKzB;AACA;;AACAA,IAAAA,OAAO,CAACM,SAAR,CAAkBO,KAAlB,CAAwBC,KAAxB,GAAiCf,KAAK,KAAKP,KAAX,GAAmB,SAAnB,GAA8B,SAA9D;AAEAc,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEA,SAAX,CAAqBS,KAArB,CAA2BC,OAA3B,CAAoCC,QAAD,IAAY;AAC9CA,MAAAA,QAAQ;AACR,KAFD;AAGAX,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEY,OAAX,GAZyB,CAczB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAkC;AACnD;AACA;AACA,QAAGA,SAAS,CAACrB,KAAV,KAAkB,KAAKsB,KAAL,CAAWtB,KAAhC,EAAuC,KAAKW,WAAL,CAAiB,KAAKW,KAAL,CAAWtB,KAA5B;AACvCuB,IAAAA,MAAM,CAACC,MAAP,CAAc,KAAKF,KAAL,CAAWxB,UAAzB,EAAqC2B,QAArC,CAA8C,IAA9C,IAAqD,KAAKnB,KAAL,CAAW,KAAKgB,KAAL,CAAWtB,KAAtB,CAArD,GAAmF,KAAKS,MAAL,EAAnF;AACA;;AAIDiB,EAAAA,MAAM,GAAE;AACP;AAAA;AACC;AACA;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA;AAFD;AAIA;;AA3F2D;;AA8F7D,OAAO,MAAMC,4BAA4B,gBAAGpC,KAAK,CAACqC,IAAN,CAAWjC,mBAAX,CAArC;KAAMgC,4B","sourcesContent":["import React, {useContext} from 'react';\r\nimport {backgroundParticlesConfig} from './configs/particlesConfig';\r\nimport {Container} from 'tsparticles/dist/Core/Container';\r\nimport {modalStateInterface, NIGHT, DAY} from '../interfaces/stateInterfaces';\r\nimport Particles from 'react-tsparticles';\r\nimport { tsParticles } from 'tsparticles';\r\nimport {stringify} from 'querystring';\r\nimport {parse} from '@typescript-eslint/parser';\r\n\r\ninterface properties {\r\n\tproperties: modalStateInterface,\r\n\ttheme: string\r\n}\r\n\r\n\r\nclass BackGroundParticles extends React.Component<properties>{\r\n\r\n\tpublic particlesContainer: Container | undefined;\r\n\tprivate theme:string;\r\n\tpublic options:any;\r\n\tconstructor(properties:properties) {\r\n\t\tsuper(properties);\r\n\t\t// this.particlesInit = this.particlesInit.bind(this);\r\n\t\t// this.particlesLoaded = this.particlesLoaded.bind(this);\r\n\t\tthis.theme = properties.theme;\r\n\t\t// this.particlesContainer;\r\n\t\tthis.options = backgroundParticlesConfig;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//\r\n\t\ttsParticles.load('tsparticles', this.options);\r\n\t}\r\n\r\n\t// particlesInit(main:any) {\r\n\t// \tconsole.log(main);\r\n\t// }\r\n\r\n\tparticlesLoaded(container:any) {\r\n\t\t// this.particlesContainer = container;\r\n\t\t//console.log(this.particlesContainer);\r\n\t}\r\n\r\n\r\n\tpause(theme: string){\r\n\t\tconst particles = tsParticles.domItem(0);\r\n\t\tparticles?.pause();\r\n\r\n\t\t// setTimeout(()=>this.particlesContainer?.pause(), 300);\r\n\t\t// this.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\t// this.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\t//setTimeout(()=>this.particlesContainer?.pause(), 300);\r\n\t\t// this.particlesContainer?.pause();\r\n\t}\r\n\tresume(){\r\n\t\tconst particles = tsParticles.domItem(0);\r\n\t\tparticles?.play();\r\n\t\t// this.particlesContainer?.play();\r\n\t}\r\n\r\n\tchangeTheme(theme: string){\r\n\r\n\t\tconsole.log(111);\r\n\t\tconst particles = tsParticles.domItem(0);\r\n\t\tconst options = particles?.options;\r\n\t\t// eslint-disable-next-line @typescript-eslint/ban-ts-comment\r\n\t\t// @ts-ignore\r\n\t\toptions.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n\r\n\t\tparticles?.particles.array.forEach((particle)=>{\r\n\t\t\tparticle\r\n\t\t});\r\n\t\tparticles?.refresh();\r\n\r\n\t\t// console.log(theme);\r\n\t\t// this.options = this.particlesContainer?.options;\r\n\t\t// this.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\t// this.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\t//\r\n\t\t// this.forceUpdate();\r\n\t\t// this.particlesContainer?.refresh();\r\n\t\t// this.options.particles.color.value = (theme === NIGHT)? '#141414': '#ffffff';\r\n\t\t// this.options.particles.line_linked.color = (theme === NIGHT)? '#141414': '#ffffff';\r\n\t\t//this.forceUpdate();\r\n\t\t// this.particlesContainer?.options.load(JSON.parse(JSON.stringify(this.options)));\r\n\t\t//\r\n\t\t// this.particlesContainer?.refresh();\r\n\t\t// this.particlesContainer?.destroy();\r\n\t\t// this.particlesContainer?.start();\r\n\t\t//console.log(this.particlesContainer);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<properties>) {\r\n\t\t// console.log(this.particlesContainer);\r\n\t\t// this.props.theme==='day'? this.changeTheme(): this.changeTheme();\r\n\t\tif(prevProps.theme!==this.props.theme) this.changeTheme(this.props.theme);\r\n\t\tObject.values(this.props.properties).includes(true)? this.pause(this.props.theme): this.resume();\r\n\t}\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t// <Particles loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\r\n\t\t\t<div id=\"tsparticles\"></div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n"]},"metadata":{},"sourceType":"module"}