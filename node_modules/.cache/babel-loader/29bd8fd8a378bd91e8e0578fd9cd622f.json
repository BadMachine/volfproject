{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMaction = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MmlMaction = function (_super) {\n  __extends(MmlMaction, _super);\n\n  function MmlMaction() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMaction.prototype, \"kind\", {\n    get: function () {\n      return 'maction';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"arity\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"selected\", {\n    get: function () {\n      var selection = this.attributes.get('selection');\n      var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;\n      return this.childNodes[i] || this.factory.create('mrow');\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"isEmbellished\", {\n    get: function () {\n      return this.selected.isEmbellished;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMaction.prototype, \"isSpacelike\", {\n    get: function () {\n      return this.selected.isSpacelike;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMaction.prototype.core = function () {\n    return this.selected.core();\n  };\n\n  MmlMaction.prototype.coreMO = function () {\n    return this.selected.coreMO();\n  };\n\n  MmlMaction.prototype.verifyAttributes = function (options) {\n    _super.prototype.verifyAttributes.call(this, options);\n\n    if (this.attributes.get('actiontype') !== 'toggle' && this.attributes.getExplicit('selection') !== undefined) {\n      var attributes = this.attributes.getAllAttributes();\n      delete attributes.selection;\n    }\n  };\n\n  MmlMaction.prototype.setTeXclass = function (prev) {\n    if (this.attributes.get('actiontype') === 'tooltip' && this.childNodes[1]) {\n      this.childNodes[1].setTeXclass(null);\n    }\n\n    var selected = this.selected;\n    prev = selected.setTeXclass(prev);\n    this.updateTeXclass(selected);\n    return prev;\n  };\n\n  MmlMaction.prototype.nextToggleSelection = function () {\n    var selection = Math.max(1, this.attributes.get('selection') + 1);\n\n    if (selection > this.childNodes.length) {\n      selection = 1;\n    }\n\n    this.attributes.set('selection', selection);\n  };\n\n  MmlMaction.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), {\n    actiontype: 'toggle',\n    selection: 1\n  });\n  return MmlMaction;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMaction = MmlMaction;","map":{"version":3,"sources":["../../../../ts/core/MmlTree/MmlNodes/maction.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MmlMaction = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar MmlMaction = (function (_super) {\n    __extends(MmlMaction, _super);\n    function MmlMaction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MmlMaction.prototype, \"kind\", {\n        get: function () {\n            return 'maction';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMaction.prototype, \"arity\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMaction.prototype, \"selected\", {\n        get: function () {\n            var selection = this.attributes.get('selection');\n            var i = Math.max(1, Math.min(this.childNodes.length, selection)) - 1;\n            return this.childNodes[i] || this.factory.create('mrow');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMaction.prototype, \"isEmbellished\", {\n        get: function () {\n            return this.selected.isEmbellished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMaction.prototype, \"isSpacelike\", {\n        get: function () {\n            return this.selected.isSpacelike;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMaction.prototype.core = function () {\n        return this.selected.core();\n    };\n    MmlMaction.prototype.coreMO = function () {\n        return this.selected.coreMO();\n    };\n    MmlMaction.prototype.verifyAttributes = function (options) {\n        _super.prototype.verifyAttributes.call(this, options);\n        if (this.attributes.get('actiontype') !== 'toggle' &&\n            this.attributes.getExplicit('selection') !== undefined) {\n            var attributes = this.attributes.getAllAttributes();\n            delete attributes.selection;\n        }\n    };\n    MmlMaction.prototype.setTeXclass = function (prev) {\n        if (this.attributes.get('actiontype') === 'tooltip' && this.childNodes[1]) {\n            this.childNodes[1].setTeXclass(null);\n        }\n        var selected = this.selected;\n        prev = selected.setTeXclass(prev);\n        this.updateTeXclass(selected);\n        return prev;\n    };\n    MmlMaction.prototype.nextToggleSelection = function () {\n        var selection = Math.max(1, this.attributes.get('selection') + 1);\n        if (selection > this.childNodes.length) {\n            selection = 1;\n        }\n        this.attributes.set('selection', selection);\n    };\n    MmlMaction.defaults = __assign(__assign({}, MmlNode_js_1.AbstractMmlNode.defaults), { actiontype: 'toggle', selection: 1 });\n    return MmlMaction;\n}(MmlNode_js_1.AbstractMmlNode));\nexports.MmlMaction = MmlMaction;\n//# sourceMappingURL=maction.js.map"]},"metadata":{},"sourceType":"script"}