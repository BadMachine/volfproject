{"ast":null,"code":"\"use strict\";\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParserConfiguration = exports.ConfigurationHandler = exports.Configuration = void 0;\n\nvar Options_js_1 = require(\"../../util/Options.js\");\n\nvar MapHandler_js_1 = require(\"./MapHandler.js\");\n\nvar FunctionList_js_1 = require(\"../../util/FunctionList.js\");\n\nvar PrioritizedList_js_1 = require(\"../../util/PrioritizedList.js\");\n\nvar Tags_js_1 = require(\"./Tags.js\");\n\nvar Configuration = function () {\n  function Configuration(name, handler, fallback, items, tags, options, nodes, preprocessors, postprocessors, initMethod, configMethod, priority) {\n    if (handler === void 0) {\n      handler = {};\n    }\n\n    if (fallback === void 0) {\n      fallback = {};\n    }\n\n    if (items === void 0) {\n      items = {};\n    }\n\n    if (tags === void 0) {\n      tags = {};\n    }\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (nodes === void 0) {\n      nodes = {};\n    }\n\n    if (preprocessors === void 0) {\n      preprocessors = [];\n    }\n\n    if (postprocessors === void 0) {\n      postprocessors = [];\n    }\n\n    if (initMethod === void 0) {\n      initMethod = null;\n    }\n\n    if (configMethod === void 0) {\n      configMethod = null;\n    }\n\n    this.name = name;\n    this.handler = handler;\n    this.fallback = fallback;\n    this.items = items;\n    this.tags = tags;\n    this.options = options;\n    this.nodes = nodes;\n    this.preprocessors = preprocessors;\n    this.postprocessors = postprocessors;\n    this.initMethod = initMethod;\n    this.configMethod = configMethod;\n    this.priority = priority;\n    this.handler = Object.assign({\n      character: [],\n      delimiter: [],\n      macro: [],\n      environment: []\n    }, handler);\n  }\n\n  Configuration.makeProcessor = function (func, priority) {\n    return Array.isArray(func) ? func : [func, priority];\n  };\n\n  Configuration._create = function (name, config) {\n    var _this = this;\n\n    if (config === void 0) {\n      config = {};\n    }\n\n    var priority = config.priority || PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;\n    var init = config.init ? this.makeProcessor(config.init, priority) : null;\n    var conf = config.config ? this.makeProcessor(config.config, priority) : null;\n    var preprocessors = (config.preprocessors || []).map(function (pre) {\n      return _this.makeProcessor(pre, priority);\n    });\n    var postprocessors = (config.postprocessors || []).map(function (post) {\n      return _this.makeProcessor(post, priority);\n    });\n    return new Configuration(name, config.handler || {}, config.fallback || {}, config.items || {}, config.tags || {}, config.options || {}, config.nodes || {}, preprocessors, postprocessors, init, conf, priority);\n  };\n\n  Configuration.create = function (name, config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var configuration = Configuration._create(name, config);\n\n    ConfigurationHandler.set(name, configuration);\n    return configuration;\n  };\n\n  Configuration.local = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    return Configuration._create('', config);\n  };\n\n  Object.defineProperty(Configuration.prototype, \"init\", {\n    get: function () {\n      return this.initMethod ? this.initMethod[0] : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Configuration.prototype, \"config\", {\n    get: function () {\n      return this.configMethod ? this.configMethod[0] : null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Configuration;\n}();\n\nexports.Configuration = Configuration;\nvar ConfigurationHandler;\n\n(function (ConfigurationHandler) {\n  var maps = new Map();\n\n  ConfigurationHandler.set = function (name, map) {\n    maps.set(name, map);\n  };\n\n  ConfigurationHandler.get = function (name) {\n    return maps.get(name);\n  };\n\n  ConfigurationHandler.keys = function () {\n    return maps.keys();\n  };\n})(ConfigurationHandler = exports.ConfigurationHandler || (exports.ConfigurationHandler = {}));\n\nvar ParserConfiguration = function () {\n  function ParserConfiguration(packages) {\n    var e_1, _a, e_2, _b;\n\n    this.initMethod = new FunctionList_js_1.FunctionList();\n    this.configMethod = new FunctionList_js_1.FunctionList();\n    this.configurations = new PrioritizedList_js_1.PrioritizedList();\n    this.handlers = new MapHandler_js_1.SubHandlers();\n    this.items = {};\n    this.tags = {};\n    this.options = {};\n    this.nodes = {};\n\n    try {\n      for (var _c = __values(packages.slice().reverse()), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var pkg = _d.value;\n        this.addPackage(pkg);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    try {\n      for (var _e = __values(this.configurations), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var _g = _f.value,\n            config = _g.item,\n            priority = _g.priority;\n        this.append(config, priority);\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  }\n\n  ParserConfiguration.prototype.init = function () {\n    this.initMethod.execute(this);\n  };\n\n  ParserConfiguration.prototype.config = function (jax) {\n    var e_3, _a;\n\n    this.configMethod.execute(this, jax);\n\n    try {\n      for (var _b = __values(this.configurations), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var config = _c.value;\n        this.addFilters(jax, config.item);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  ParserConfiguration.prototype.addPackage = function (pkg) {\n    var name = typeof pkg === 'string' ? pkg : pkg[0];\n    var conf = ConfigurationHandler.get(name);\n\n    if (conf) {\n      this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);\n    }\n  };\n\n  ParserConfiguration.prototype.add = function (config, jax, options) {\n    var e_4, _a;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.append(config);\n    this.configurations.add(config, config.priority);\n    this.init();\n    var parser = jax.parseOptions;\n    parser.nodeFactory.setCreators(config.nodes);\n\n    try {\n      for (var _b = __values(Object.keys(config.items)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var kind = _c.value;\n        parser.itemFactory.setNodeClass(kind, config.items[kind]);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    Tags_js_1.TagsFactory.addTags(config.tags);\n    Options_js_1.defaultOptions(parser.options, config.options);\n    Options_js_1.userOptions(parser.options, options);\n    this.addFilters(jax, config);\n\n    if (config.config) {\n      config.config(this, jax);\n    }\n  };\n\n  ParserConfiguration.prototype.append = function (config, priority) {\n    priority = priority || config.priority;\n\n    if (config.initMethod) {\n      this.initMethod.add(config.initMethod[0], config.initMethod[1]);\n    }\n\n    if (config.configMethod) {\n      this.configMethod.add(config.configMethod[0], config.configMethod[1]);\n    }\n\n    this.handlers.add(config.handler, config.fallback, priority);\n    Object.assign(this.items, config.items);\n    Object.assign(this.tags, config.tags);\n    Options_js_1.defaultOptions(this.options, config.options);\n    Object.assign(this.nodes, config.nodes);\n  };\n\n  ParserConfiguration.prototype.addFilters = function (jax, config) {\n    var e_5, _a, e_6, _b;\n\n    try {\n      for (var _c = __values(config.preprocessors), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var _e = __read(_d.value, 2),\n            pre = _e[0],\n            priority = _e[1];\n\n        jax.preFilters.add(pre, priority);\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    try {\n      for (var _f = __values(config.postprocessors), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var _h = __read(_g.value, 2),\n            post = _h[0],\n            priority = _h[1];\n\n        jax.postFilters.add(post, priority);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n  };\n\n  return ParserConfiguration;\n}();\n\nexports.ParserConfiguration = ParserConfiguration;","map":{"version":3,"sources":["../../../ts/input/tex/Configuration.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParserConfiguration = exports.ConfigurationHandler = exports.Configuration = void 0;\nvar Options_js_1 = require(\"../../util/Options.js\");\nvar MapHandler_js_1 = require(\"./MapHandler.js\");\nvar FunctionList_js_1 = require(\"../../util/FunctionList.js\");\nvar PrioritizedList_js_1 = require(\"../../util/PrioritizedList.js\");\nvar Tags_js_1 = require(\"./Tags.js\");\nvar Configuration = (function () {\n    function Configuration(name, handler, fallback, items, tags, options, nodes, preprocessors, postprocessors, initMethod, configMethod, priority) {\n        if (handler === void 0) { handler = {}; }\n        if (fallback === void 0) { fallback = {}; }\n        if (items === void 0) { items = {}; }\n        if (tags === void 0) { tags = {}; }\n        if (options === void 0) { options = {}; }\n        if (nodes === void 0) { nodes = {}; }\n        if (preprocessors === void 0) { preprocessors = []; }\n        if (postprocessors === void 0) { postprocessors = []; }\n        if (initMethod === void 0) { initMethod = null; }\n        if (configMethod === void 0) { configMethod = null; }\n        this.name = name;\n        this.handler = handler;\n        this.fallback = fallback;\n        this.items = items;\n        this.tags = tags;\n        this.options = options;\n        this.nodes = nodes;\n        this.preprocessors = preprocessors;\n        this.postprocessors = postprocessors;\n        this.initMethod = initMethod;\n        this.configMethod = configMethod;\n        this.priority = priority;\n        this.handler = Object.assign({ character: [], delimiter: [], macro: [], environment: [] }, handler);\n    }\n    Configuration.makeProcessor = function (func, priority) {\n        return Array.isArray(func) ? func : [func, priority];\n    };\n    Configuration._create = function (name, config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        var priority = config.priority || PrioritizedList_js_1.PrioritizedList.DEFAULTPRIORITY;\n        var init = config.init ? this.makeProcessor(config.init, priority) : null;\n        var conf = config.config ? this.makeProcessor(config.config, priority) : null;\n        var preprocessors = (config.preprocessors || []).map(function (pre) { return _this.makeProcessor(pre, priority); });\n        var postprocessors = (config.postprocessors || []).map(function (post) { return _this.makeProcessor(post, priority); });\n        return new Configuration(name, config.handler || {}, config.fallback || {}, config.items || {}, config.tags || {}, config.options || {}, config.nodes || {}, preprocessors, postprocessors, init, conf, priority);\n    };\n    Configuration.create = function (name, config) {\n        if (config === void 0) { config = {}; }\n        var configuration = Configuration._create(name, config);\n        ConfigurationHandler.set(name, configuration);\n        return configuration;\n    };\n    Configuration.local = function (config) {\n        if (config === void 0) { config = {}; }\n        return Configuration._create('', config);\n    };\n    Object.defineProperty(Configuration.prototype, \"init\", {\n        get: function () {\n            return this.initMethod ? this.initMethod[0] : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Configuration.prototype, \"config\", {\n        get: function () {\n            return this.configMethod ? this.configMethod[0] : null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Configuration;\n}());\nexports.Configuration = Configuration;\nvar ConfigurationHandler;\n(function (ConfigurationHandler) {\n    var maps = new Map();\n    ConfigurationHandler.set = function (name, map) {\n        maps.set(name, map);\n    };\n    ConfigurationHandler.get = function (name) {\n        return maps.get(name);\n    };\n    ConfigurationHandler.keys = function () {\n        return maps.keys();\n    };\n})(ConfigurationHandler = exports.ConfigurationHandler || (exports.ConfigurationHandler = {}));\nvar ParserConfiguration = (function () {\n    function ParserConfiguration(packages) {\n        var e_1, _a, e_2, _b;\n        this.initMethod = new FunctionList_js_1.FunctionList();\n        this.configMethod = new FunctionList_js_1.FunctionList();\n        this.configurations = new PrioritizedList_js_1.PrioritizedList();\n        this.handlers = new MapHandler_js_1.SubHandlers();\n        this.items = {};\n        this.tags = {};\n        this.options = {};\n        this.nodes = {};\n        try {\n            for (var _c = __values(packages.slice().reverse()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var pkg = _d.value;\n                this.addPackage(pkg);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        try {\n            for (var _e = __values(this.configurations), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var _g = _f.value, config = _g.item, priority = _g.priority;\n                this.append(config, priority);\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    }\n    ParserConfiguration.prototype.init = function () {\n        this.initMethod.execute(this);\n    };\n    ParserConfiguration.prototype.config = function (jax) {\n        var e_3, _a;\n        this.configMethod.execute(this, jax);\n        try {\n            for (var _b = __values(this.configurations), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var config = _c.value;\n                this.addFilters(jax, config.item);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    ParserConfiguration.prototype.addPackage = function (pkg) {\n        var name = typeof pkg === 'string' ? pkg : pkg[0];\n        var conf = ConfigurationHandler.get(name);\n        if (conf) {\n            this.configurations.add(conf, typeof pkg === 'string' ? conf.priority : pkg[1]);\n        }\n    };\n    ParserConfiguration.prototype.add = function (config, jax, options) {\n        var e_4, _a;\n        if (options === void 0) { options = {}; }\n        this.append(config);\n        this.configurations.add(config, config.priority);\n        this.init();\n        var parser = jax.parseOptions;\n        parser.nodeFactory.setCreators(config.nodes);\n        try {\n            for (var _b = __values(Object.keys(config.items)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var kind = _c.value;\n                parser.itemFactory.setNodeClass(kind, config.items[kind]);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        Tags_js_1.TagsFactory.addTags(config.tags);\n        Options_js_1.defaultOptions(parser.options, config.options);\n        Options_js_1.userOptions(parser.options, options);\n        this.addFilters(jax, config);\n        if (config.config) {\n            config.config(this, jax);\n        }\n    };\n    ParserConfiguration.prototype.append = function (config, priority) {\n        priority = priority || config.priority;\n        if (config.initMethod) {\n            this.initMethod.add(config.initMethod[0], config.initMethod[1]);\n        }\n        if (config.configMethod) {\n            this.configMethod.add(config.configMethod[0], config.configMethod[1]);\n        }\n        this.handlers.add(config.handler, config.fallback, priority);\n        Object.assign(this.items, config.items);\n        Object.assign(this.tags, config.tags);\n        Options_js_1.defaultOptions(this.options, config.options);\n        Object.assign(this.nodes, config.nodes);\n    };\n    ParserConfiguration.prototype.addFilters = function (jax, config) {\n        var e_5, _a, e_6, _b;\n        try {\n            for (var _c = __values(config.preprocessors), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var _e = __read(_d.value, 2), pre = _e[0], priority = _e[1];\n                jax.preFilters.add(pre, priority);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        try {\n            for (var _f = __values(config.postprocessors), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var _h = __read(_g.value, 2), post = _h[0], priority = _h[1];\n                jax.postFilters.add(post, priority);\n            }\n        }\n        catch (e_6_1) { e_6 = { error: e_6_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n            }\n            finally { if (e_6) throw e_6.error; }\n        }\n    };\n    return ParserConfiguration;\n}());\nexports.ParserConfiguration = ParserConfiguration;\n//# sourceMappingURL=Configuration.js.map"]},"metadata":{},"sourceType":"script"}