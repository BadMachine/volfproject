{"ast":null,"code":"export const bubbleSort = 'bubblesort';\nexport const bubbleSortCanceled = 'bubblesortCanceled';\nexport const arraySort = 'arraySort';\nexport const custom = 'custom';\nconst initialState = {\n  bubble: '',\n  heap: ''\n};\nexport function SortingStateReducer(state = initialState, action) {\n  // switch (action.type) {\n  //\n  // case bubbleSort:\n  // \tif(state===bubbleSort){\n  // \t\tstate = bubbleSortCanceled;\n  // \t}else{\n  // \t\tstate=bubbleSort;\n  // \t}\n  // \tbreak;\n  // case arraySort:\n  // \tstate = arraySort;\n  // \tbreak;\n  // case custom:\n  // \tstate = custom;\n  // \tbreak;\n  // default:\n  // \tstate = '';\n  // \tbreak;\n  // }\n  if (action.type === bubbleSort) {\n    if (action.type === bubbleSort && state.bubble === bubbleSort) {\n      state = {\n        bubble: bubbleSortCanceled,\n        heap: state.heap\n      };\n    } else state = {\n      bubble: bubbleSort,\n      heap: state.heap\n    };\n  }\n\n  return state;\n}\n_c = SortingStateReducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingStateReducer\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/redux/SortingStateReducer.ts"],"names":["bubbleSort","bubbleSortCanceled","arraySort","custom","initialState","bubble","heap","SortingStateReducer","state","action","type"],"mappings":"AAEA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,SAAS,GAAG,WAAlB;AACP,OAAO,MAAMC,MAAM,GAAE,QAAd;AAEP,MAAMC,YAAY,GAAG;AACpBC,EAAAA,MAAM,EAAC,EADa;AAEpBC,EAAAA,IAAI,EAAC;AAFe,CAArB;AAYA,OAAO,SAASC,mBAAT,CAA6BC,KAAK,GAAEJ,YAApC,EAAkDK,MAAlD,EAAuF;AAG7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,MAAGA,MAAM,CAACC,IAAP,KAAgBV,UAAnB,EAA8B;AAC7B,QAAGS,MAAM,CAACC,IAAP,KAAgBV,UAAhB,IAA8BQ,KAAK,CAACH,MAAN,KAAiBL,UAAlD,EAA6D;AAC5DQ,MAAAA,KAAK,GAAG;AAACH,QAAAA,MAAM,EAAEJ,kBAAT;AAA6BK,QAAAA,IAAI,EAAEE,KAAK,CAACF;AAAzC,OAAR;AACA,KAFD,MAEME,KAAK,GAAG;AAACH,MAAAA,MAAM,EAAEL,UAAT;AAAqBM,MAAAA,IAAI,EAAEE,KAAK,CAACF;AAAjC,KAAR;AACN;;AAED,SAAOE,KAAP;AACA;KA/BeD,mB","sourcesContent":["import {AnyAction} from 'redux';\r\n\r\nexport const bubbleSort = 'bubblesort';\r\nexport const bubbleSortCanceled = 'bubblesortCanceled';\r\nexport const arraySort = 'arraySort';\r\nexport const custom= 'custom';\r\n\r\nconst initialState = {\r\n\tbubble:'',\r\n\theap:'',\r\n};\r\n\r\nexport interface storeCommands{\r\n\tbubble:string,\r\n\theap:string,\r\n}\r\n\r\n\r\n\r\nexport function SortingStateReducer(state= initialState, action :{type: string}):storeCommands{\r\n\r\n\r\n\t// switch (action.type) {\r\n\t//\r\n\t// case bubbleSort:\r\n\t// \tif(state===bubbleSort){\r\n\t// \t\tstate = bubbleSortCanceled;\r\n\t// \t}else{\r\n\t// \t\tstate=bubbleSort;\r\n\t// \t}\r\n\t// \tbreak;\r\n\t// case arraySort:\r\n\t// \tstate = arraySort;\r\n\t// \tbreak;\r\n\t// case custom:\r\n\t// \tstate = custom;\r\n\t// \tbreak;\r\n\t// default:\r\n\t// \tstate = '';\r\n\t// \tbreak;\r\n\t// }\r\n\r\n\r\n\tif(action.type === bubbleSort){\r\n\t\tif(action.type === bubbleSort && state.bubble === bubbleSort){\r\n\t\t\tstate = {bubble: bubbleSortCanceled, heap: state.heap};\r\n\t\t}else state = {bubble: bubbleSort, heap: state.heap};\r\n\t}\r\n\r\n\treturn state;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}