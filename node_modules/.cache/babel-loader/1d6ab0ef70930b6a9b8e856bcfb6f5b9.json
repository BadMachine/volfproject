{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractEmptyNode = exports.AbstractNode = void 0;\n\nvar AbstractNode = function () {\n  function AbstractNode(factory, properties, children) {\n    var e_1, _a;\n\n    if (properties === void 0) {\n      properties = {};\n    }\n\n    if (children === void 0) {\n      children = [];\n    }\n\n    this.parent = null;\n    this.properties = {};\n    this._factory = null;\n    this.childNodes = [];\n    this._factory = factory;\n\n    try {\n      for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        this.setProperty(name_1, properties[name_1]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    if (children.length) {\n      this.setChildren(children);\n    }\n  }\n\n  Object.defineProperty(AbstractNode.prototype, \"factory\", {\n    get: function () {\n      return this._factory;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractNode.prototype, \"kind\", {\n    get: function () {\n      return 'unknown';\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractNode.prototype.setProperty = function (name, value) {\n    this.properties[name] = value;\n  };\n\n  AbstractNode.prototype.getProperty = function (name) {\n    return this.properties[name];\n  };\n\n  AbstractNode.prototype.getPropertyNames = function () {\n    return Object.keys(this.properties);\n  };\n\n  AbstractNode.prototype.getAllProperties = function () {\n    return this.properties;\n  };\n\n  AbstractNode.prototype.removeProperty = function () {\n    var e_2, _a;\n\n    var names = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      names[_i] = arguments[_i];\n    }\n\n    try {\n      for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n        var name_2 = names_1_1.value;\n        delete this.properties[name_2];\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  AbstractNode.prototype.isKind = function (kind) {\n    return this.factory.nodeIsKind(this, kind);\n  };\n\n  AbstractNode.prototype.setChildren = function (children) {\n    var e_3, _a;\n\n    this.childNodes = [];\n\n    try {\n      for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n        var child = children_1_1.value;\n        this.appendChild(child);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  AbstractNode.prototype.appendChild = function (child) {\n    this.childNodes.push(child);\n    child.parent = this;\n    return child;\n  };\n\n  AbstractNode.prototype.replaceChild = function (newChild, oldChild) {\n    var i = this.childIndex(oldChild);\n\n    if (i !== null) {\n      this.childNodes[i] = newChild;\n      newChild.parent = this;\n    }\n\n    return newChild;\n  };\n\n  AbstractNode.prototype.childIndex = function (node) {\n    var i = this.childNodes.indexOf(node);\n    return i === -1 ? null : i;\n  };\n\n  AbstractNode.prototype.findNodes = function (kind) {\n    var nodes = [];\n    this.walkTree(function (node) {\n      if (node.isKind(kind)) {\n        nodes.push(node);\n      }\n    });\n    return nodes;\n  };\n\n  AbstractNode.prototype.walkTree = function (func, data) {\n    var e_4, _a;\n\n    func(this, data);\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child) {\n          child.walkTree(func, data);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return data;\n  };\n\n  AbstractNode.prototype.toString = function () {\n    return this.kind + '(' + this.childNodes.join(',') + ')';\n  };\n\n  return AbstractNode;\n}();\n\nexports.AbstractNode = AbstractNode;\n\nvar AbstractEmptyNode = function (_super) {\n  __extends(AbstractEmptyNode, _super);\n\n  function AbstractEmptyNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AbstractEmptyNode.prototype.setChildren = function (_children) {};\n\n  AbstractEmptyNode.prototype.appendChild = function (child) {\n    return child;\n  };\n\n  AbstractEmptyNode.prototype.replaceChild = function (_newChild, oldChild) {\n    return oldChild;\n  };\n\n  AbstractEmptyNode.prototype.childIndex = function (_node) {\n    return null;\n  };\n\n  AbstractEmptyNode.prototype.walkTree = function (func, data) {\n    func(this, data);\n    return data;\n  };\n\n  AbstractEmptyNode.prototype.toString = function () {\n    return this.kind;\n  };\n\n  return AbstractEmptyNode;\n}(AbstractNode);\n\nexports.AbstractEmptyNode = AbstractEmptyNode;","map":{"version":3,"sources":["../../../ts/core/Tree/Node.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractEmptyNode = exports.AbstractNode = void 0;\nvar AbstractNode = (function () {\n    function AbstractNode(factory, properties, children) {\n        var e_1, _a;\n        if (properties === void 0) { properties = {}; }\n        if (children === void 0) { children = []; }\n        this.parent = null;\n        this.properties = {};\n        this._factory = null;\n        this.childNodes = [];\n        this._factory = factory;\n        try {\n            for (var _b = __values(Object.keys(properties)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                this.setProperty(name_1, properties[name_1]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        if (children.length) {\n            this.setChildren(children);\n        }\n    }\n    Object.defineProperty(AbstractNode.prototype, \"factory\", {\n        get: function () {\n            return this._factory;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractNode.prototype, \"kind\", {\n        get: function () {\n            return 'unknown';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractNode.prototype.setProperty = function (name, value) {\n        this.properties[name] = value;\n    };\n    AbstractNode.prototype.getProperty = function (name) {\n        return this.properties[name];\n    };\n    AbstractNode.prototype.getPropertyNames = function () {\n        return Object.keys(this.properties);\n    };\n    AbstractNode.prototype.getAllProperties = function () {\n        return this.properties;\n    };\n    AbstractNode.prototype.removeProperty = function () {\n        var e_2, _a;\n        var names = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            names[_i] = arguments[_i];\n        }\n        try {\n            for (var names_1 = __values(names), names_1_1 = names_1.next(); !names_1_1.done; names_1_1 = names_1.next()) {\n                var name_2 = names_1_1.value;\n                delete this.properties[name_2];\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (names_1_1 && !names_1_1.done && (_a = names_1.return)) _a.call(names_1);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    AbstractNode.prototype.isKind = function (kind) {\n        return this.factory.nodeIsKind(this, kind);\n    };\n    AbstractNode.prototype.setChildren = function (children) {\n        var e_3, _a;\n        this.childNodes = [];\n        try {\n            for (var children_1 = __values(children), children_1_1 = children_1.next(); !children_1_1.done; children_1_1 = children_1.next()) {\n                var child = children_1_1.value;\n                this.appendChild(child);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (children_1_1 && !children_1_1.done && (_a = children_1.return)) _a.call(children_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    AbstractNode.prototype.appendChild = function (child) {\n        this.childNodes.push(child);\n        child.parent = this;\n        return child;\n    };\n    AbstractNode.prototype.replaceChild = function (newChild, oldChild) {\n        var i = this.childIndex(oldChild);\n        if (i !== null) {\n            this.childNodes[i] = newChild;\n            newChild.parent = this;\n        }\n        return newChild;\n    };\n    AbstractNode.prototype.childIndex = function (node) {\n        var i = this.childNodes.indexOf(node);\n        return (i === -1 ? null : i);\n    };\n    AbstractNode.prototype.findNodes = function (kind) {\n        var nodes = [];\n        this.walkTree(function (node) {\n            if (node.isKind(kind)) {\n                nodes.push(node);\n            }\n        });\n        return nodes;\n    };\n    AbstractNode.prototype.walkTree = function (func, data) {\n        var e_4, _a;\n        func(this, data);\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child) {\n                    child.walkTree(func, data);\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return data;\n    };\n    AbstractNode.prototype.toString = function () {\n        return this.kind + '(' + this.childNodes.join(',') + ')';\n    };\n    return AbstractNode;\n}());\nexports.AbstractNode = AbstractNode;\nvar AbstractEmptyNode = (function (_super) {\n    __extends(AbstractEmptyNode, _super);\n    function AbstractEmptyNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AbstractEmptyNode.prototype.setChildren = function (_children) {\n    };\n    AbstractEmptyNode.prototype.appendChild = function (child) {\n        return child;\n    };\n    AbstractEmptyNode.prototype.replaceChild = function (_newChild, oldChild) {\n        return oldChild;\n    };\n    AbstractEmptyNode.prototype.childIndex = function (_node) {\n        return null;\n    };\n    AbstractEmptyNode.prototype.walkTree = function (func, data) {\n        func(this, data);\n        return data;\n    };\n    AbstractEmptyNode.prototype.toString = function () {\n        return this.kind;\n    };\n    return AbstractEmptyNode;\n}(AbstractNode));\nexports.AbstractEmptyNode = AbstractEmptyNode;\n//# sourceMappingURL=Node.js.map"]},"metadata":{},"sourceType":"script"}