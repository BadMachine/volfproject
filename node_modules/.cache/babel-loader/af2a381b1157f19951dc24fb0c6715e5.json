{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\QuickSortChart.tsx\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { chartjsDataTemplate, generateColorsForChart } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuickSortChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = void 0;\n    this.chart = void 0;\n    this.timer = void 0;\n    this.isSorting = void 0;\n    this.interrupt = void 0;\n    this.uselessRefresh = void 0;\n    this.state = void 0;\n    this.props = void 0;\n    this.timeouts = void 0;\n    this.date = void 0;\n    this.timeout = void 0;\n\n    this.equals = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\n    this.state = chartjsDataTemplate;\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.timer = 0;\n    this.isSorting = false;\n    this.interrupt = false;\n    this.date = 0;\n    this.timeout = 0;\n    this.uselessRefresh = false;\n    this.timeouts = [];\n  }\n\n  partition(data, start, end) {\n    const pivot = data[start];\n    let low = start + 1;\n    let high = end;\n\n    for (;;) {\n      while (low <= high && data[high] >= pivot) {\n        high -= 1;\n      }\n\n      while (low <= high && data[high] <= pivot) {\n        low += 1;\n      }\n\n      if (low <= high) {\n        [data[low], data[high]] = [data[high], data[low]];\n      } else {\n        break;\n      }\n    }\n\n    [data[start], data[high]] = [data[high], data[start]];\n    return high;\n  }\n\n  quickSort(array, fst = 0, lst = array.length - 1) {\n    if (fst >= lst) return;\n    let [i, j] = [fst, lst];\n    const labels = this.chart.data.labels;\n    const colors = this.chart.data.datasets[0].backgroundColor;\n    const pivot = array[Math.round(fst - 0.5 + Math.random() * (lst - fst + 1))];\n\n    while (i <= j) {\n      while (array[i] < pivot) i += 1;\n\n      while (array[j] > pivot) j -= 1;\n\n      if (i <= j) {\n        [array[i], array[j]] = [array[j], array[i]];\n        [labels[i], labels[j]] = [labels[j], labels[i]];\n        [colors[i], colors[j]] = [colors[j], colors[i]];\n        [i, j] = [i + 1, j - 1];\n        this.timeout += 100;\n        const theTimeout = this.updateChartDelayed(labels.slice(0), array.slice(0), colors.slice(0), this.timeout);\n        this.timeouts.push(theTimeout);\n      }\n    }\n\n    this.quickSort(array, fst, j);\n    this.quickSort(array, i, lst);\n  }\n\n  componentDidMount() {\n    this.chart = this.chartReference.current.chartInstance;\n  }\n\n  updateChartDelayed(labels, data, colors, timeout) {\n    this.timer = setTimeout(() => {\n      const now = new Date().getTime();\n      const timeDifference = now - this.date;\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n      const mils = Math.floor(timeDifference % (1000 * 60) / 1);\n      this.isSorting = true;\n      this.chart.data.datasets[0].label = `${seconds}s ${mils.toString().substr(-3)}ms`;\n      this.chart.data.labels = labels;\n      this.chart.data.datasets[0].data = data;\n      this.chart.data.datasets[0].backgroundColor = colors;\n      this.chart.update();\n      const eth = [...this.chart.data.datasets[0].data].sort((x, y) => x - y);\n\n      if (eth.toString() === this.chart.data.datasets[0].data.toString()) {\n        this.props.callback();\n      }\n    }, timeout);\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  clearAllTimeouts() {\n    for (const timeout in this.timeouts) {\n      clearInterval(this.timeouts[timeout]);\n    }\n\n    this.timeouts = [];\n  }\n\n  refreshChart() {\n    //console.log(this.props.commands.arrayLength);\n    const temporaryDataToSort = chartjsDataTemplate;\n    temporaryDataToSort.datasets[0].data = Array.from({\n      length: this.props.commands.arrayLength\n    }, () => Math.floor(Math.random() * 1000));\n    temporaryDataToSort.labels = Array.from({\n      length: this.props.commands.arrayLength\n    }, (_, i) => (i + 1).toString());\n    [temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4); //console.log(temporaryDataToSort.datasets[0].data);\n\n    this.setState(temporaryDataToSort);\n    this.timeout = 0;\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('QUICK TRIGGERED!');\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.date = new Date(Date.now()).getTime();\n      this.clearAllTimeouts();\n\n      if (this.props.commands.StopSort) {\n        this.clearAllTimeouts();\n      } else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.quickSort(this.chart.data.datasets[0].data, 0, this.chart.data.datasets[0].data.length - 1);\n        }, 800);\n      } else if (this.props.commands.name !== prevProps.commands.name) {\n        this.quickSort(this.chart.data.datasets[0].data, 0, this.chart.data.datasets[0].data.length - 1);\n      } else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.quickSort(this.chart.data.datasets[0].data, 0, this.chart.data.datasets[0].data.length - 1);\n        }, 800);\n      } else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.quickSort(this.chart.data.datasets[0].data, 0, this.chart.data.datasets[0].data.length - 1);\n        }, 800);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        width: 100,\n        height: 50,\n        options: {\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              boxWidth: 0\n            }\n          }\n        },\n        ref: this.chartReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport const MemorizedQuickChart = /*#__PURE__*/React.memo(QuickSortChart);\n_c = MemorizedQuickChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedQuickChart\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/QuickSortChart.tsx"],"names":["React","Component","Bar","chartjsDataTemplate","generateColorsForChart","QuickSortChart","constructor","props","chartReference","chart","timer","isSorting","interrupt","uselessRefresh","state","timeouts","date","timeout","equals","a","b","JSON","stringify","createRef","partition","data","start","end","pivot","low","high","quickSort","array","fst","lst","length","i","j","labels","colors","datasets","backgroundColor","Math","round","random","theTimeout","updateChartDelayed","slice","push","componentDidMount","current","chartInstance","setTimeout","now","Date","getTime","timeDifference","seconds","floor","mils","label","toString","substr","update","eth","sort","x","y","callback","componentWillUnmount","clearInterval","clearAllTimeouts","refreshChart","temporaryDataToSort","Array","from","commands","arrayLength","_","borderColor","setState","componentDidUpdate","prevProps","console","log","StopSort","name","render","legend","display","position","boxWidth","MemorizedQuickChart","memo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {CommandsInterface, chartjsDataTemplate, generateColorsForChart} from '../interfaces/SortInterfaces';\r\nimport {sortingStore} from './ModalContent';\r\nimport {quickSort} from '../redux/SortingStateReducer';\r\n\r\n\r\nclass QuickSortChart extends Component<CommandsInterface>{\r\n\tprivate chartReference: React.RefObject<any>;\r\n\tprivate chart: any;\r\n\tprivate timer: any;\r\n\tprivate isSorting: boolean;\r\n\tprivate interrupt: boolean;\r\n\tprivate uselessRefresh: boolean;\r\n\tpublic state;\r\n\tpublic props: any;\r\n\tprivate timeouts:number[];\r\n\tprivate date: number;\r\n\tprivate timeout: number;\r\n\r\n\tconstructor(props: CommandsInterface) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = chartjsDataTemplate;\r\n\r\n\t\tthis.chartReference = React.createRef<any>();\r\n\r\n\t\tthis.timer = 0;\r\n\r\n\t\tthis.isSorting = false;\r\n\r\n\t\tthis.interrupt = false;\r\n\r\n\t\tthis.date = 0;\r\n\r\n\t\tthis.timeout = 0;\r\n\r\n\t\tthis.uselessRefresh = false;\r\n\t\tthis.timeouts = [];\r\n\r\n\t}\r\n\r\n\tpartition(data:number[], start:number, end:number){\r\n\t\tconst pivot = data[start];\r\n\t\tlet low = start + 1;\r\n\t\tlet high = end;\r\n\r\n\t\tfor(;;){\r\n\r\n\t\t\twhile(low<=high && data[high]>=pivot){\r\n\t\t\t\thigh-=1;\r\n\t\t\t}\r\n\t\t\twhile(low<=high && data[high]<=pivot){\r\n\t\t\t\tlow+=1;\r\n\t\t\t}\r\n\r\n\t\t\tif(low<=high){\r\n\t\t\t\t[data[low], data[high]] = [data[high], data[low]];\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\t[data[start], data[high]] =[data[high], data[start]];\r\n\t\treturn high;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tquickSort(array:number[], fst=0, lst= array.length-1){\r\n\r\n\t\tif (fst >= lst) return;\r\n\t\tlet [i, j] = [fst, lst];\r\n\t\tconst labels = this.chart.data.labels;\r\n\t\tconst colors = this.chart.data.datasets[0].backgroundColor;\r\n\r\n\t\tconst pivot = array[Math.round(fst - 0.5 + Math.random() * (lst - fst + 1))];\r\n\r\n\t\twhile (i <= j){\r\n\t\t\twhile (array[i] < pivot) i += 1;\r\n\t\t\twhile (array[j] > pivot) j -= 1;\r\n\r\n\t\t\tif (i <= j){\r\n\t\t\t\t[array[i], array[j]] = [array[j], array[i]];\r\n\t\t\t\t[labels[i], labels[j]] = [labels[j],labels[i]];\r\n\t\t\t\t[colors[i], colors[j]] = [colors[j],colors[i]];\r\n\t\t\t\t[i, j] = [i + 1, j - 1];\r\n\t\t\t\tthis.timeout += 100;\r\n\t\t\t\tconst theTimeout = this.updateChartDelayed(labels.slice(0), array.slice(0), colors.slice(0), this.timeout);\r\n\t\t\t\tthis.timeouts.push(theTimeout);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tthis.quickSort(array, fst, j);\r\n\t\tthis.quickSort(array, i, lst);\r\n\t}\r\n\r\n\r\n\tequals = (a:number[], b:number[]) => JSON.stringify(a) === JSON.stringify(b);\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tthis.chart = this.chartReference.current.chartInstance;\r\n\t}\r\n\r\n\r\n\tupdateChartDelayed(labels: string[], data:number[], colors:string[], timeout:number) {\r\n\r\n\r\n\t\tthis.timer = setTimeout(() => {\r\n\r\n\t\t\tconst now = new Date().getTime();\r\n\r\n\t\t\tconst timeDifference  = now - this.date;\r\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\t\t\tconst mils = Math.floor((timeDifference % (1000 * 60)) / 1);\r\n\r\n\t\t\tthis.isSorting = true;\r\n\t\t\tthis.chart.data.datasets[0].label =  `${seconds}s ${mils.toString().substr(-3)}ms`  ;\r\n\t\t\tthis.chart.data.labels = labels;\r\n\t\t\tthis.chart.data.datasets[0].data = data;\r\n\t\t\tthis.chart.data.datasets[0].backgroundColor = colors;\r\n\t\t\tthis.chart.update();\r\n\r\n\t\t\tconst eth = [...this.chart.data.datasets[0].data].sort((x,y)=> x-y);\r\n\t\t\tif( eth.toString() === this.chart.data.datasets[0].data.toString()) {\r\n\t\t\t\tthis.props.callback();\r\n\t\t\t}\r\n\r\n\r\n\t\t}, timeout);\r\n\r\n\r\n\r\n\t\treturn this.timer;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\r\n\t}\r\n\r\n\r\n\tclearAllTimeouts(){\r\n\t\tfor(const timeout in this.timeouts){\r\n\t\t\tclearInterval(this.timeouts[timeout]);\r\n\t\t}\r\n\t\tthis.timeouts=[];\r\n\t}\r\n\r\n\trefreshChart(){\r\n\t\t//console.log(this.props.commands.arrayLength);\r\n\t\tconst temporaryDataToSort = chartjsDataTemplate;\r\n\t\ttemporaryDataToSort.datasets[0].data = Array.from({length: this.props.commands.arrayLength}, () => Math.floor(Math.random() * 1000));\r\n\t\ttemporaryDataToSort.labels = Array.from({ length: this.props.commands.arrayLength }, (_, i) => (i+1).toString());\r\n\t\t[temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\r\n\r\n\t\t//console.log(temporaryDataToSort.datasets[0].data);\r\n\t\tthis.setState(temporaryDataToSort);\r\n\t\tthis.timeout = 0;\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps:CommandsInterface) {\r\n\r\n\t\tconsole.log('QUICK TRIGGERED!');\r\n\r\n\t\tif(JSON.stringify(prevProps)!==JSON.stringify(this.props)) {\r\n\r\n\r\n\t\t\tthis.date = new Date(Date.now()).getTime();\r\n\r\n\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\tif (this.props.commands.StopSort) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.quickSort(this.chart.data.datasets[0].data, 0,this.chart.data.datasets[0].data.length-1);\r\n\t\t\t\t}, 800);\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name) {\r\n\r\n\t\t\t\tthis.quickSort(this.chart.data.datasets[0].data, 0,this.chart.data.datasets[0].data.length-1);\r\n\t\t\t} else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.quickSort(this.chart.data.datasets[0].data, 0,this.chart.data.datasets[0].data.length-1);\r\n\t\t\t\t}, 800);\r\n\r\n\t\t\t} else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.quickSort(this.chart.data.datasets[0].data, 0,this.chart.data.datasets[0].data.length-1);\r\n\t\t\t\t}, 800);\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Bar data={this.state} width={100} height={50} options={{\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\tboxWidth: 0,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}} ref={this.chartReference}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n}\r\nexport const MemorizedQuickChart = React.memo(QuickSortChart);\r\n"]},"metadata":{},"sourceType":"module"}