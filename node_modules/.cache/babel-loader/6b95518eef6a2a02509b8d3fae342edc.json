{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BackGroundParticles.tsx\";\nimport React from 'react';\nimport { DAY } from '../interfaces/stateInterfaces';\nimport { tsParticles } from 'tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// class BackGroundParticles extends React.Component<properties>{\n//\n// \tpublic particlesContainer: Container | undefined;\n// \tprivate theme:string;\n// \tpublic options:any;\n// \tconstructor(properties:properties) {\n// \t\tsuper(properties);\n// \t\tthis.particlesInit = this.particlesInit.bind(this);\n// \t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\n// \t\tthis.theme = properties.theme;\n// \t\tthis.particlesContainer;\n// \t\tthis.options = backgroundParticlesConfig;\n// \t}\n//\n// \tcomponentDidMount() {\n// \t\t//\n// \t}\n// \tparticlesInit(main:any) {\n// \t\tconsole.log(main);\n// \t}\n//\n// \tparticlesLoaded(container:any) {\n// \t\tthis.particlesContainer = container;\n// \t\t//console.log(this.particlesContainer);\n// \t}\n//\n//\n// \tpause(){\n//\n// \t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\n//\n// \t}\n// \tresume(){\n//\n// \t\tthis.particlesContainer?.play();\n// \t}\n//\n// \tchangeTheme(theme: string){\n// \t\t// console.log(theme);\n// \t\t// this.options = this.particlesContainer?.options;\n// \t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\n// \t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\n//\n// \t\tthis.forceUpdate();\n//\n// \t}\n//\n// \tcomponentDidUpdate(prevProps: Readonly<properties>) {\n//\n// \t\tif(prevProps.theme!==this.props.theme) {\n// \t\t\tthis.changeTheme(this.props.theme);\n// \t\t\tconsole.log('change theme');\n// \t\t}\n// \t\tObject.values(this.props.properties).includes(true)? this.pause(): this.resume();\n// \t}\n//\n//\n//\n// \trender(){\n// \t\treturn(\n// \t\t\t<Particles init={this.particlesInit} loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\n// \t\t);\n// \t}\n// }\n//\n// export const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\nfunction BackGroundParticles(properties) {\n  const containerP = tsParticles;\n\n  if (properties.theme === DAY) {//\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"tsparticles\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n}\n\n_c = BackGroundParticles;\nexport const MemorizedBackgroundParticles = /*#__PURE__*/React.memo(BackGroundParticles);\n_c2 = MemorizedBackgroundParticles;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BackGroundParticles\");\n$RefreshReg$(_c2, \"MemorizedBackgroundParticles\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BackGroundParticles.tsx"],"names":["React","DAY","tsParticles","BackGroundParticles","properties","containerP","theme","MemorizedBackgroundParticles","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAgC,OAAhC;AAGA,SAAoCC,GAApC,QAA8C,+BAA9C;AAGA,SAASC,WAAT,QAA4B,aAA5B;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAASC,mBAAT,CAA6BC,UAA7B,EAAoD;AAEnD,QAAMC,UAAU,GAAGH,WAAnB;;AAEA,MAAGE,UAAU,CAACE,KAAX,KAAmBL,GAAtB,EAA0B,CAC1B;AACC;;AAED,sBACC;AAAK,IAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,UADD;AAIA;;KAZQE,mB;AAcT,OAAO,MAAMI,4BAA4B,gBAAGP,KAAK,CAACQ,IAAN,CAAWL,mBAAX,CAArC;MAAMI,4B","sourcesContent":["import React, {useContext} from 'react';\r\nimport {backgroundParticlesConfig} from './configs/particlesConfig';\r\nimport {Container} from 'tsparticles/dist/Core/Container';\r\nimport {modalStateInterface, NIGHT, DAY} from '../interfaces/stateInterfaces';\r\nimport Particles from 'react-tsparticles';\r\n\r\nimport { tsParticles } from 'tsparticles';\r\n\r\ninterface properties {\r\n\tproperties: modalStateInterface,\r\n\ttheme: string\r\n}\r\n\r\n\r\n// class BackGroundParticles extends React.Component<properties>{\r\n//\r\n// \tpublic particlesContainer: Container | undefined;\r\n// \tprivate theme:string;\r\n// \tpublic options:any;\r\n// \tconstructor(properties:properties) {\r\n// \t\tsuper(properties);\r\n// \t\tthis.particlesInit = this.particlesInit.bind(this);\r\n// \t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\r\n// \t\tthis.theme = properties.theme;\r\n// \t\tthis.particlesContainer;\r\n// \t\tthis.options = backgroundParticlesConfig;\r\n// \t}\r\n//\r\n// \tcomponentDidMount() {\r\n// \t\t//\r\n// \t}\r\n// \tparticlesInit(main:any) {\r\n// \t\tconsole.log(main);\r\n// \t}\r\n//\r\n// \tparticlesLoaded(container:any) {\r\n// \t\tthis.particlesContainer = container;\r\n// \t\t//console.log(this.particlesContainer);\r\n// \t}\r\n//\r\n//\r\n// \tpause(){\r\n//\r\n// \t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\r\n//\r\n// \t}\r\n// \tresume(){\r\n//\r\n// \t\tthis.particlesContainer?.play();\r\n// \t}\r\n//\r\n// \tchangeTheme(theme: string){\r\n// \t\t// console.log(theme);\r\n// \t\t// this.options = this.particlesContainer?.options;\r\n// \t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n// \t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n//\r\n// \t\tthis.forceUpdate();\r\n//\r\n// \t}\r\n//\r\n// \tcomponentDidUpdate(prevProps: Readonly<properties>) {\r\n//\r\n// \t\tif(prevProps.theme!==this.props.theme) {\r\n// \t\t\tthis.changeTheme(this.props.theme);\r\n// \t\t\tconsole.log('change theme');\r\n// \t\t}\r\n// \t\tObject.values(this.props.properties).includes(true)? this.pause(): this.resume();\r\n// \t}\r\n//\r\n//\r\n//\r\n// \trender(){\r\n// \t\treturn(\r\n// \t\t\t<Particles init={this.particlesInit} loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\r\n// \t\t);\r\n// \t}\r\n// }\r\n//\r\n// export const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n\r\n\r\nfunction BackGroundParticles(properties: properties){\r\n\r\n\tconst containerP = tsParticles;\r\n\r\n\tif(properties.theme===DAY){\r\n\t//\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div id='tsparticles'></div>\r\n\t);\r\n\r\n}\r\n\r\nexport const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n"]},"metadata":{},"sourceType":"module"}