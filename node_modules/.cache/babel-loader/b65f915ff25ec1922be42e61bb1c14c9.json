{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\QuickSortChart.tsx\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { chartjsDataTemplate, generateColorsForChart } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuickSortChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = void 0;\n    this.chart = void 0;\n    this.timer = void 0;\n    this.isSorting = void 0;\n    this.interrupt = void 0;\n    this.uselessRefresh = void 0;\n    this.state = void 0;\n    this.props = void 0;\n    this.timeouts = void 0;\n    this.date = void 0;\n\n    this.partition = (items, left, right) => {\n      const pivot = items[Math.floor((right + left) / 2)];\n      let i = left,\n          j = right;\n\n      while (i <= j) {\n        while (items[i] < pivot) {\n          i++;\n        }\n\n        while (items[j] > pivot) {\n          j--;\n        }\n\n        if (i <= j) {\n          [items[i], items[j]] = [items[j], items[i]];\n          i++;\n          j--;\n        }\n      }\n\n      return i;\n    };\n\n    this.quickSort = items => {\n      let index;\n      let left = 0;\n      let right = 0;\n\n      if (items.length > 1) {\n        index = this.partition(items, left, right);\n\n        if (left < index - 1) {\n          this.quickSort(items, left, index - 1);\n        }\n\n        if (index < right) {\n          this.quickSort(items, index, right);\n        }\n      }\n\n      return items;\n    };\n\n    this.equals = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\n    this.state = chartjsDataTemplate;\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.timer = 0;\n    this.isSorting = false;\n    this.interrupt = false;\n    this.date = 0;\n    this.uselessRefresh = false;\n    this.timeouts = [];\n  }\n\n  componentDidMount() {\n    this.chart = this.chartReference.current.chartInstance;\n  }\n\n  updateChartDelayed(labels, data, colors, timeout) {\n    this.timer = setTimeout(() => {\n      const now = new Date().getTime();\n      const timeDifference = now - this.date;\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n      const mils = Math.floor(timeDifference % (1000 * 60) / 1);\n      this.isSorting = true;\n      this.chart.data.datasets[0].label = `${seconds}s ${mils.toString().substr(-3)}ms`;\n      this.chart.data.labels = labels;\n      this.chart.data.datasets[0].data = data;\n      this.chart.data.datasets[0].backgroundColor = colors;\n      this.chart.update();\n      const eth = [...this.chart.data.datasets[0].data].sort((x, y) => x - y);\n\n      if (eth.toString() === this.chart.data.datasets[0].data.toString()) {\n        this.props.callback();\n      }\n    }, timeout);\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  clearAllTimeouts() {\n    for (const timeout in this.timeouts) {\n      clearInterval(this.timeouts[timeout]);\n    }\n\n    this.timeouts = [];\n  }\n\n  refreshChart() {\n    console.log(this.props.commands.arrayLength);\n    const temporaryDataToSort = chartjsDataTemplate;\n    temporaryDataToSort.datasets[0].data = Array.from({\n      length: this.props.commands.arrayLength\n    }, () => Math.floor(Math.random() * 1000));\n    temporaryDataToSort.labels = Array.from({\n      length: this.props.commands.arrayLength\n    }, (_, i) => (i + 1).toString());\n    [temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\n    console.log(temporaryDataToSort.datasets[0].data);\n    this.setState(temporaryDataToSort);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('QUICK TRIGGERED!');\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.date = new Date(Date.now()).getTime();\n      this.clearAllTimeouts();\n\n      if (this.props.commands.StopSort) {\n        this.clearAllTimeouts();\n      } else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.quickSort();\n        }, 800);\n      } else if (this.props.commands.name !== prevProps.commands.name) {\n        this.quickSort();\n      } else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.quickSort();\n        }, 800);\n      } else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.quickSort();\n        }, 800);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        width: 100,\n        height: 50,\n        options: {\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              boxWidth: 0\n            }\n          }\n        },\n        ref: this.chartReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport const MemorizedQuickChart = /*#__PURE__*/React.memo(QuickSortChart);\n_c = MemorizedQuickChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedQuickChart\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/QuickSortChart.tsx"],"names":["React","Component","Bar","chartjsDataTemplate","generateColorsForChart","QuickSortChart","constructor","props","chartReference","chart","timer","isSorting","interrupt","uselessRefresh","state","timeouts","date","partition","items","left","right","pivot","Math","floor","i","j","quickSort","index","length","equals","a","b","JSON","stringify","createRef","componentDidMount","current","chartInstance","updateChartDelayed","labels","data","colors","timeout","setTimeout","now","Date","getTime","timeDifference","seconds","mils","datasets","label","toString","substr","backgroundColor","update","eth","sort","x","y","callback","componentWillUnmount","clearInterval","clearAllTimeouts","refreshChart","console","log","commands","arrayLength","temporaryDataToSort","Array","from","random","_","borderColor","setState","componentDidUpdate","prevProps","StopSort","name","render","legend","display","position","boxWidth","MemorizedQuickChart","memo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {CommandsInterface, chartjsDataTemplate, generateColorsForChart} from '../interfaces/SortInterfaces';\r\nimport {sortingStore} from './ModalContent';\r\nimport {quickSort} from '../redux/SortingStateReducer';\r\n\r\n\r\nclass QuickSortChart extends Component<CommandsInterface>{\r\n\tprivate chartReference: React.RefObject<any>;\r\n\tprivate chart: any;\r\n\tprivate timer: any;\r\n\tprivate isSorting: boolean;\r\n\tprivate interrupt: boolean;\r\n\tprivate uselessRefresh: boolean;\r\n\tpublic state;\r\n\tpublic props: any;\r\n\tprivate timeouts:number[];\r\n\tprivate date: number;\r\n\r\n\tconstructor(props: CommandsInterface) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = chartjsDataTemplate;\r\n\r\n\t\tthis.chartReference = React.createRef<any>();\r\n\r\n\t\tthis.timer = 0;\r\n\r\n\t\tthis.isSorting = false;\r\n\r\n\t\tthis.interrupt = false;\r\n\r\n\t\tthis.date = 0;\r\n\r\n\r\n\t\tthis.uselessRefresh = false;\r\n\t\tthis.timeouts = [];\r\n\r\n\t}\r\n\r\n\r\n\tpartition = (items:number[], left:number, right:number) => {\r\n\r\n\t\tconst pivot   = items[Math.floor((right + left) / 2)];\r\n\t\tlet i = left, j = right;\r\n\r\n\t\twhile (i <= j) {\r\n\t\t\twhile (items[i] < pivot) {\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t\twhile (items[j] > pivot) {\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t\tif (i <= j) {\r\n\r\n\t\t\t\t[items[i], items[j]] = [items[j], items[i]];\r\n\t\t\t\ti++;\r\n\t\t\t\tj--;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn i;\r\n\t}\r\n\r\n\r\n\r\n\r\n\tquickSort = (items: number[]) => {\r\n\t\tlet index;\r\n\t\tlet left= 0;\r\n\t\tlet right =0;\r\n\t\tif (items.length > 1) {\r\n\t\t\tindex = this.partition(items, left, right);\r\n\t\t\tif (left < index - 1) {\r\n\t\t\t\tthis.quickSort(items, left, index - 1);\r\n\t\t\t}\r\n\t\t\tif (index < right) {\r\n\t\t\t\tthis.quickSort(items, index, right);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn items;\r\n\t}\r\n\r\n\tequals = (a:number[], b:number[]) => JSON.stringify(a) === JSON.stringify(b);\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tthis.chart = this.chartReference.current.chartInstance;\r\n\t}\r\n\r\n\r\n\tupdateChartDelayed(labels: string[], data:number[], colors:string[], timeout:number) {\r\n\r\n\r\n\t\tthis.timer = setTimeout(() => {\r\n\r\n\t\t\tconst now = new Date().getTime();\r\n\r\n\t\t\tconst timeDifference  = now - this.date;\r\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\t\t\tconst mils = Math.floor((timeDifference % (1000 * 60)) / 1);\r\n\r\n\t\t\tthis.isSorting = true;\r\n\t\t\tthis.chart.data.datasets[0].label =  `${seconds}s ${mils.toString().substr(-3)}ms`  ;\r\n\t\t\tthis.chart.data.labels = labels;\r\n\t\t\tthis.chart.data.datasets[0].data = data;\r\n\t\t\tthis.chart.data.datasets[0].backgroundColor = colors;\r\n\t\t\tthis.chart.update();\r\n\r\n\t\t\tconst eth = [...this.chart.data.datasets[0].data].sort((x,y)=> x-y);\r\n\t\t\tif( eth.toString() === this.chart.data.datasets[0].data.toString()) {\r\n\t\t\t\tthis.props.callback();\r\n\t\t\t}\r\n\r\n\r\n\t\t}, timeout);\r\n\r\n\r\n\r\n\t\treturn this.timer;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\r\n\t}\r\n\r\n\r\n\tclearAllTimeouts(){\r\n\t\tfor(const timeout in this.timeouts){\r\n\t\t\tclearInterval(this.timeouts[timeout]);\r\n\t\t}\r\n\t\tthis.timeouts=[];\r\n\t}\r\n\r\n\trefreshChart(){\r\n\t\tconsole.log(this.props.commands.arrayLength);\r\n\t\tconst temporaryDataToSort = chartjsDataTemplate;\r\n\t\ttemporaryDataToSort.datasets[0].data = Array.from({length: this.props.commands.arrayLength}, () => Math.floor(Math.random() * 1000));\r\n\t\ttemporaryDataToSort.labels = Array.from({ length: this.props.commands.arrayLength }, (_, i) => (i+1).toString());\r\n\t\t[temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\r\n\r\n\t\tconsole.log(temporaryDataToSort.datasets[0].data);\r\n\t\tthis.setState(temporaryDataToSort);\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps:CommandsInterface) {\r\n\r\n\t\tconsole.log('QUICK TRIGGERED!');\r\n\r\n\t\tif(JSON.stringify(prevProps)!==JSON.stringify(this.props)) {\r\n\r\n\r\n\t\t\tthis.date = new Date(Date.now()).getTime();\r\n\r\n\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\tif (this.props.commands.StopSort) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.quickSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name) {\r\n\r\n\t\t\t\tthis.quickSort();\r\n\t\t\t} else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.quickSort();\r\n\t\t\t\t}, 800);\r\n\r\n\t\t\t} else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.quickSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Bar data={this.state} width={100} height={50} options={{\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\tboxWidth: 0,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}} ref={this.chartReference}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n}\r\nexport const MemorizedQuickChart = React.memo(QuickSortChart);\r\n"]},"metadata":{},"sourceType":"module"}