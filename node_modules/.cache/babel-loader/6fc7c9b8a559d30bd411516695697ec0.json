{"ast":null,"code":"import * as instancesVal from '../instances_val2017.json';\n\nconst parseCategories = () => {\n  const classesTemp = [];\n  instancesVal.categories.forEach(item => {\n    if (!(item.supercategory in classesTemp)) {\n      classesTemp[item.supercategory] = [];\n    }\n\n    if (!(item.name in classesTemp[item.supercategory])) {\n      classesTemp[item.supercategory].push(item.name);\n    }\n  });\n  return classesTemp;\n};\n\nexport const classes = parseCategories();\nexport const parseSubCategories = supercategory => {\n  if (supercategory === 'all') {\n    console.log('qqqq');\n    console.log(Object.values(classes).flat());\n    return Object.values(classes).flat();\n  } else return classes[supercategory];\n};\nexport const getRandomCocoExample = () => {\n  const random = Math.round(Math.random() * instancesVal.images.length);\n  const image = instancesVal.images[random];\n  return {\n    filename: image.file_name,\n    url: image.coco_url,\n    height: image.height,\n    width: image.width,\n    info: fetchBboxesAndSegments(image.id)\n  };\n};","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/cocoParser.ts"],"names":["instancesVal","parseCategories","classesTemp","categories","forEach","item","supercategory","name","push","classes","parseSubCategories","console","log","Object","values","flat","getRandomCocoExample","random","Math","round","images","length","image","filename","file_name","url","coco_url","height","width","info","fetchBboxesAndSegments","id"],"mappings":"AACA,OAAO,KAAKA,YAAZ,MAA8B,2BAA9B;;AAGA,MAAMC,eAAe,GAAC,MAAK;AAC1B,QAAMC,WAAe,GAAG,EAAxB;AACMF,EAAAA,YAAN,CAAoBG,UAApB,CAA+BC,OAA/B,CAAwCC,IAAD,IAAe;AAErD,QAAI,EAAEA,IAAI,CAACC,aAAL,IAAsBJ,WAAxB,CAAJ,EAA0C;AACzCA,MAAAA,WAAW,CAACG,IAAI,CAACC,aAAN,CAAX,GAAkC,EAAlC;AACA;;AACD,QAAI,EAAED,IAAI,CAACE,IAAL,IAAaL,WAAW,CAACG,IAAI,CAACC,aAAN,CAA1B,CAAJ,EAAqD;AACpDJ,MAAAA,WAAW,CAACG,IAAI,CAACC,aAAN,CAAX,CAAgCE,IAAhC,CAAqCH,IAAI,CAACE,IAA1C;AACA;AACD,GARD;AASA,SAAOL,WAAP;AACA,CAZD;;AAaA,OAAO,MAAMO,OAAO,GAAGR,eAAe,EAA/B;AAEP,OAAO,MAAMS,kBAAkB,GAAIJ,aAAD,IAAyB;AAE1D,MAAGA,aAAa,KAAG,KAAnB,EAA0B;AACzBK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBM,IAAvB,EAAZ;AACA,WAAOF,MAAM,CAACC,MAAP,CAAcL,OAAd,EAAuBM,IAAvB,EAAP;AACA,GAJD,MAKK,OAAON,OAAO,CAACH,aAAD,CAAd;AACL,CARM;AAYP,OAAO,MAAMU,oBAAoB,GAAG,MAAI;AAEvC,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAiBjB,YAAY,CAACoB,MAAb,CAAoBC,MAAhD,CAAf;AACA,QAAMC,KAAK,GAAGtB,YAAY,CAACoB,MAAb,CAAoBH,MAApB,CAAd;AAEA,SAAO;AACNM,IAAAA,QAAQ,EAAED,KAAK,CAACE,SADV;AAENC,IAAAA,GAAG,EAAEH,KAAK,CAACI,QAFL;AAGNC,IAAAA,MAAM,EAAEL,KAAK,CAACK,MAHR;AAINC,IAAAA,KAAK,EAAEN,KAAK,CAACM,KAJP;AAKNC,IAAAA,IAAI,EAAEC,sBAAsB,CAACR,KAAK,CAACS,EAAP;AALtB,GAAP;AASA,CAdM","sourcesContent":["import React from 'react';\r\nimport * as instancesVal from '../instances_val2017.json';\r\n\r\n\r\nconst parseCategories=()=> {\r\n\tconst classesTemp:any = [];\r\n\t(<any>instancesVal).categories.forEach((item: any) => {\r\n\r\n\t\tif (!(item.supercategory in classesTemp)) {\r\n\t\t\tclassesTemp[item.supercategory] = [];\r\n\t\t}\r\n\t\tif (!(item.name in classesTemp[item.supercategory])) {\r\n\t\t\tclassesTemp[item.supercategory].push(item.name);\r\n\t\t}\r\n\t});\r\n\treturn classesTemp;\r\n};\r\nexport const classes = parseCategories();\r\n\r\nexport const parseSubCategories = (supercategory: string)=>{\r\n\r\n\tif(supercategory==='all') {\r\n\t\tconsole.log('qqqq');\r\n\t\tconsole.log(Object.values(classes).flat());\r\n\t\treturn Object.values(classes).flat();\r\n\t}\r\n\telse return classes[supercategory];\r\n};\r\n\r\n\r\n\r\nexport const getRandomCocoExample = ()=>{\r\n\r\n\tconst random = Math.round(Math.random() * (instancesVal.images.length));\r\n\tconst image = instancesVal.images[random];\r\n\r\n\treturn {\r\n\t\tfilename: image.file_name,\r\n\t\turl: image.coco_url,\r\n\t\theight: image.height,\r\n\t\twidth: image.width,\r\n\t\tinfo: fetchBboxesAndSegments(image.id)\r\n\t}\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}