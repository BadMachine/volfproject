{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontData = exports.NOSTRETCH = exports.H = exports.V = void 0;\nexports.V = 1;\nexports.H = 2;\nexports.NOSTRETCH = {\n  dir: 0\n};\n\nvar FontData = function () {\n  function FontData() {\n    var e_1, _a;\n\n    this.variant = {};\n    this.delimiters = {};\n    this.cssFontMap = {};\n    this.remapChars = {};\n    var CLASS = this.constructor;\n    this.params = __assign({}, CLASS.defaultParams);\n    this.sizeVariants = __spread(CLASS.defaultSizeVariants);\n    this.cssFontMap = __assign({}, CLASS.defaultCssFonts);\n    this.cssFamilyPrefix = CLASS.defaultCssFamilyPrefix;\n    this.createVariants(CLASS.defaultVariants);\n    this.defineDelimiters(CLASS.defaultDelimiters);\n\n    try {\n      for (var _b = __values(Object.keys(CLASS.defaultChars)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n        this.defineChars(name_1, CLASS.defaultChars[name_1]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this.defineRemap('accent', CLASS.defaultAccentMap);\n    this.defineRemap('mo', CLASS.defaultMoMap);\n    this.defineRemap('mn', CLASS.defaultMnMap);\n  }\n\n  FontData.charOptions = function (font, n) {\n    var char = font[n];\n\n    if (char.length === 3) {\n      char[3] = {};\n    }\n\n    return char[3];\n  };\n\n  FontData.prototype.createVariant = function (name, inherit, link) {\n    if (inherit === void 0) {\n      inherit = null;\n    }\n\n    if (link === void 0) {\n      link = null;\n    }\n\n    var variant = {\n      linked: [],\n      chars: inherit ? Object.create(this.variant[inherit].chars) : {}\n    };\n\n    if (link && this.variant[link]) {\n      Object.assign(variant.chars, this.variant[link].chars);\n      this.variant[link].linked.push(variant.chars);\n      variant.chars = Object.create(variant.chars);\n    }\n\n    this.remapSmpChars(variant.chars, name);\n    this.variant[name] = variant;\n  };\n\n  FontData.prototype.remapSmpChars = function (chars, name) {\n    var e_2, _a, e_3, _b;\n\n    var CLASS = this.constructor;\n\n    if (CLASS.VariantSmp[name]) {\n      var SmpRemap = CLASS.SmpRemap;\n      var SmpGreek = [null, null, CLASS.SmpRemapGreekU, CLASS.SmpRemapGreekL];\n\n      try {\n        for (var _c = __values(CLASS.SmpRanges), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var _e = __read(_d.value, 3),\n              i = _e[0],\n              lo = _e[1],\n              hi = _e[2];\n\n          var base = CLASS.VariantSmp[name][i];\n          if (!base) continue;\n\n          for (var n = lo; n <= hi; n++) {\n            if (n === 0x3A2) continue;\n            var smp = base + n - lo;\n            chars[n] = this.smpChar(SmpRemap[smp] || smp);\n          }\n\n          if (SmpGreek[i]) {\n            try {\n              for (var _f = (e_3 = void 0, __values(Object.keys(SmpGreek[i]).map(function (x) {\n                return parseInt(x);\n              }))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var n = _g.value;\n                chars[n] = this.smpChar(base + SmpGreek[i][n]);\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n          }\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    if (name === 'bold') {\n      chars[0x3DC] = this.smpChar(0x1D7CA);\n      chars[0x3DD] = this.smpChar(0x1D7CB);\n    }\n  };\n\n  FontData.prototype.smpChar = function (n) {\n    return [,,, {\n      smp: n\n    }];\n  };\n\n  FontData.prototype.createVariants = function (variants) {\n    var e_4, _a;\n\n    try {\n      for (var variants_1 = __values(variants), variants_1_1 = variants_1.next(); !variants_1_1.done; variants_1_1 = variants_1.next()) {\n        var variant = variants_1_1.value;\n        this.createVariant(variant[0], variant[1], variant[2]);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (variants_1_1 && !variants_1_1.done && (_a = variants_1.return)) _a.call(variants_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n\n  FontData.prototype.defineChars = function (name, chars) {\n    var e_5, _a;\n\n    var variant = this.variant[name];\n    Object.assign(variant.chars, chars);\n\n    try {\n      for (var _b = __values(variant.linked), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var link = _c.value;\n        Object.assign(link, chars);\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n  };\n\n  FontData.prototype.defineDelimiters = function (delims) {\n    Object.assign(this.delimiters, delims);\n  };\n\n  FontData.prototype.defineRemap = function (name, remap) {\n    if (!this.remapChars.hasOwnProperty(name)) {\n      this.remapChars[name] = {};\n    }\n\n    Object.assign(this.remapChars[name], remap);\n  };\n\n  FontData.prototype.getDelimiter = function (n) {\n    return this.delimiters[n];\n  };\n\n  FontData.prototype.getSizeVariant = function (n, i) {\n    if (this.delimiters[n].variants) {\n      i = this.delimiters[n].variants[i];\n    }\n\n    return this.sizeVariants[i];\n  };\n\n  FontData.prototype.getChar = function (name, n) {\n    return this.variant[name].chars[n];\n  };\n\n  FontData.prototype.getVariant = function (name) {\n    return this.variant[name];\n  };\n\n  FontData.prototype.getCssFont = function (variant) {\n    return this.cssFontMap[variant] || ['serif', false, false];\n  };\n\n  FontData.prototype.getFamily = function (family) {\n    return this.cssFamilyPrefix ? this.cssFamilyPrefix + ', ' + family : family;\n  };\n\n  FontData.prototype.getRemappedChar = function (name, c) {\n    var map = this.remapChars[name] || {};\n    return map[c];\n  };\n\n  FontData.OPTIONS = {};\n  FontData.defaultVariants = [['normal'], ['bold', 'normal'], ['italic', 'normal'], ['bold-italic', 'italic', 'bold'], ['double-struck', 'bold'], ['fraktur', 'normal'], ['bold-fraktur', 'bold', 'fraktur'], ['script', 'italic'], ['bold-script', 'bold-italic', 'script'], ['sans-serif', 'normal'], ['bold-sans-serif', 'bold', 'sans-serif'], ['sans-serif-italic', 'italic', 'sans-serif'], ['sans-serif-bold-italic', 'bold-italic', 'bold-sans-serif'], ['monospace', 'normal']];\n  FontData.defaultCssFonts = {\n    normal: ['serif', false, false],\n    bold: ['serif', false, true],\n    italic: ['serif', true, false],\n    'bold-italic': ['serif', true, true],\n    'double-struck': ['serif', false, true],\n    fraktur: ['serif', false, false],\n    'bold-fraktur': ['serif', false, true],\n    script: ['cursive', false, false],\n    'bold-script': ['cursive', false, true],\n    'sans-serif': ['sans-serif', false, false],\n    'bold-sans-serif': ['sans-serif', false, true],\n    'sans-serif-italic': ['sans-serif', true, false],\n    'sans-serif-bold-italic': ['sans-serif', true, true],\n    monospace: ['monospace', false, false]\n  };\n  FontData.defaultCssFamilyPrefix = '';\n  FontData.VariantSmp = {\n    bold: [0x1D400, 0x1D41A, 0x1D6A8, 0x1D6C2, 0x1D7CE],\n    italic: [0x1D434, 0x1D44E, 0x1D6E2, 0x1D6FC],\n    'bold-italic': [0x1D468, 0x1D482, 0x1D71C, 0x1D736],\n    script: [0x1D49C, 0x1D4B6],\n    'bold-script': [0x1D4D0, 0x1D4EA],\n    fraktur: [0x1D504, 0x1D51E],\n    'double-struck': [0x1D538, 0x1D552,,, 0x1D7D8],\n    'bold-fraktur': [0x1D56C, 0x1D586],\n    'sans-serif': [0x1D5A0, 0x1D5BA,,, 0x1D7E2],\n    'bold-sans-serif': [0x1D5D4, 0x1D5EE, 0x1D756, 0x1D770, 0x1D7EC],\n    'sans-serif-italic': [0x1D608, 0x1D622],\n    'sans-serif-bold-italic': [0x1D63C, 0x1D656, 0x1D790, 0x1D7AA],\n    'monospace': [0x1D670, 0x1D68A,,, 0x1D7F6]\n  };\n  FontData.SmpRanges = [[0, 0x41, 0x5A], [1, 0x61, 0x7A], [2, 0x391, 0x3A9], [3, 0x3B1, 0x3C9], [4, 0x30, 0x39]];\n  FontData.SmpRemap = {\n    0x1D455: 0x210E,\n    0x1D49D: 0x212C,\n    0x1D4A0: 0x2130,\n    0x1D4A1: 0x2131,\n    0x1D4A3: 0x210B,\n    0x1D4A4: 0x2110,\n    0x1D4A7: 0x2112,\n    0x1D4A8: 0x2133,\n    0x1D4AD: 0x211B,\n    0x1D4BA: 0x212F,\n    0x1D4BC: 0x210A,\n    0x1D4C4: 0x2134,\n    0x1D506: 0x212D,\n    0x1D50B: 0x210C,\n    0x1D50C: 0x2111,\n    0x1D515: 0x211C,\n    0x1D51D: 0x2128,\n    0x1D53A: 0x2102,\n    0x1D53F: 0x210D,\n    0x1D545: 0x2115,\n    0x1D547: 0x2119,\n    0x1D548: 0x211A,\n    0x1D549: 0x211D,\n    0x1D551: 0x2124\n  };\n  FontData.SmpRemapGreekU = {\n    0x2207: 0x19,\n    0x03F4: 0x11\n  };\n  FontData.SmpRemapGreekL = {\n    0x3D1: 0x1B,\n    0x3D5: 0x1D,\n    0x3D6: 0x1F,\n    0x3F0: 0x1C,\n    0x3F1: 0x1E,\n    0x3F5: 0x1A,\n    0x2202: 0x19\n  };\n  FontData.defaultAccentMap = {\n    0x0300: '\\u02CB',\n    0x0301: '\\u02CA',\n    0x0302: '\\u02C6',\n    0x0303: '\\u02DC',\n    0x0304: '\\u02C9',\n    0x0306: '\\u02D8',\n    0x0307: '\\u02D9',\n    0x0308: '\\u00A8',\n    0x030A: '\\u02DA',\n    0x030C: '\\u02C7',\n    0x2192: '\\u20D7',\n    0x2032: '\\'',\n    0x2033: '\\'\\'',\n    0x2034: '\\'\\'\\'',\n    0x2035: '`',\n    0x2036: '``',\n    0x2037: '```',\n    0x2057: '\\'\\'\\'\\'',\n    0x20D0: '\\u21BC',\n    0x20D1: '\\u21C0',\n    0x20D6: '\\u2190',\n    0x20E1: '\\u2194',\n    0x20F0: '*',\n    0x20DB: '...',\n    0x20DC: '....',\n    0x20EC: '\\u21C1',\n    0x20ED: '\\u21BD',\n    0x20EE: '\\u2190',\n    0x20EF: '\\u2192'\n  };\n  FontData.defaultMoMap = {\n    0x002D: '\\u2212'\n  };\n  FontData.defaultMnMap = {\n    0x002D: '\\u2212'\n  };\n  FontData.defaultParams = {\n    x_height: .442,\n    quad: 1,\n    num1: .676,\n    num2: .394,\n    num3: .444,\n    denom1: .686,\n    denom2: .345,\n    sup1: .413,\n    sup2: .363,\n    sup3: .289,\n    sub1: .15,\n    sub2: .247,\n    sup_drop: .386,\n    sub_drop: .05,\n    delim1: 2.39,\n    delim2: 1.0,\n    axis_height: .25,\n    rule_thickness: .06,\n    big_op_spacing1: .111,\n    big_op_spacing2: .167,\n    big_op_spacing3: .2,\n    big_op_spacing4: .6,\n    big_op_spacing5: .1,\n    surd_height: .075,\n    scriptspace: .05,\n    nulldelimiterspace: .12,\n    delimiterfactor: 901,\n    delimitershortfall: .3,\n    min_rule_thickness: 1.25\n  };\n  FontData.defaultDelimiters = {};\n  FontData.defaultChars = {};\n  FontData.defaultSizeVariants = [];\n  return FontData;\n}();\n\nexports.FontData = FontData;","map":{"version":3,"sources":["../../../ts/output/common/FontData.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FontData = exports.NOSTRETCH = exports.H = exports.V = void 0;\nexports.V = 1;\nexports.H = 2;\nexports.NOSTRETCH = { dir: 0 };\nvar FontData = (function () {\n    function FontData() {\n        var e_1, _a;\n        this.variant = {};\n        this.delimiters = {};\n        this.cssFontMap = {};\n        this.remapChars = {};\n        var CLASS = this.constructor;\n        this.params = __assign({}, CLASS.defaultParams);\n        this.sizeVariants = __spread(CLASS.defaultSizeVariants);\n        this.cssFontMap = __assign({}, CLASS.defaultCssFonts);\n        this.cssFamilyPrefix = CLASS.defaultCssFamilyPrefix;\n        this.createVariants(CLASS.defaultVariants);\n        this.defineDelimiters(CLASS.defaultDelimiters);\n        try {\n            for (var _b = __values(Object.keys(CLASS.defaultChars)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                this.defineChars(name_1, CLASS.defaultChars[name_1]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.defineRemap('accent', CLASS.defaultAccentMap);\n        this.defineRemap('mo', CLASS.defaultMoMap);\n        this.defineRemap('mn', CLASS.defaultMnMap);\n    }\n    FontData.charOptions = function (font, n) {\n        var char = font[n];\n        if (char.length === 3) {\n            char[3] = {};\n        }\n        return char[3];\n    };\n    FontData.prototype.createVariant = function (name, inherit, link) {\n        if (inherit === void 0) { inherit = null; }\n        if (link === void 0) { link = null; }\n        var variant = {\n            linked: [],\n            chars: (inherit ? Object.create(this.variant[inherit].chars) : {})\n        };\n        if (link && this.variant[link]) {\n            Object.assign(variant.chars, this.variant[link].chars);\n            this.variant[link].linked.push(variant.chars);\n            variant.chars = Object.create(variant.chars);\n        }\n        this.remapSmpChars(variant.chars, name);\n        this.variant[name] = variant;\n    };\n    FontData.prototype.remapSmpChars = function (chars, name) {\n        var e_2, _a, e_3, _b;\n        var CLASS = this.constructor;\n        if (CLASS.VariantSmp[name]) {\n            var SmpRemap = CLASS.SmpRemap;\n            var SmpGreek = [null, null, CLASS.SmpRemapGreekU, CLASS.SmpRemapGreekL];\n            try {\n                for (var _c = __values(CLASS.SmpRanges), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var _e = __read(_d.value, 3), i = _e[0], lo = _e[1], hi = _e[2];\n                    var base = CLASS.VariantSmp[name][i];\n                    if (!base)\n                        continue;\n                    for (var n = lo; n <= hi; n++) {\n                        if (n === 0x3A2)\n                            continue;\n                        var smp = base + n - lo;\n                        chars[n] = this.smpChar(SmpRemap[smp] || smp);\n                    }\n                    if (SmpGreek[i]) {\n                        try {\n                            for (var _f = (e_3 = void 0, __values(Object.keys(SmpGreek[i]).map(function (x) { return parseInt(x); }))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                                var n = _g.value;\n                                chars[n] = this.smpChar(base + SmpGreek[i][n]);\n                            }\n                        }\n                        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                        finally {\n                            try {\n                                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                            }\n                            finally { if (e_3) throw e_3.error; }\n                        }\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n        if (name === 'bold') {\n            chars[0x3DC] = this.smpChar(0x1D7CA);\n            chars[0x3DD] = this.smpChar(0x1D7CB);\n        }\n    };\n    FontData.prototype.smpChar = function (n) {\n        return [, , , { smp: n }];\n    };\n    FontData.prototype.createVariants = function (variants) {\n        var e_4, _a;\n        try {\n            for (var variants_1 = __values(variants), variants_1_1 = variants_1.next(); !variants_1_1.done; variants_1_1 = variants_1.next()) {\n                var variant = variants_1_1.value;\n                this.createVariant(variant[0], variant[1], variant[2]);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (variants_1_1 && !variants_1_1.done && (_a = variants_1.return)) _a.call(variants_1);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    FontData.prototype.defineChars = function (name, chars) {\n        var e_5, _a;\n        var variant = this.variant[name];\n        Object.assign(variant.chars, chars);\n        try {\n            for (var _b = __values(variant.linked), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var link = _c.value;\n                Object.assign(link, chars);\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n    };\n    FontData.prototype.defineDelimiters = function (delims) {\n        Object.assign(this.delimiters, delims);\n    };\n    FontData.prototype.defineRemap = function (name, remap) {\n        if (!this.remapChars.hasOwnProperty(name)) {\n            this.remapChars[name] = {};\n        }\n        Object.assign(this.remapChars[name], remap);\n    };\n    FontData.prototype.getDelimiter = function (n) {\n        return this.delimiters[n];\n    };\n    FontData.prototype.getSizeVariant = function (n, i) {\n        if (this.delimiters[n].variants) {\n            i = this.delimiters[n].variants[i];\n        }\n        return this.sizeVariants[i];\n    };\n    FontData.prototype.getChar = function (name, n) {\n        return this.variant[name].chars[n];\n    };\n    FontData.prototype.getVariant = function (name) {\n        return this.variant[name];\n    };\n    FontData.prototype.getCssFont = function (variant) {\n        return this.cssFontMap[variant] || ['serif', false, false];\n    };\n    FontData.prototype.getFamily = function (family) {\n        return (this.cssFamilyPrefix ? this.cssFamilyPrefix + ', ' + family : family);\n    };\n    FontData.prototype.getRemappedChar = function (name, c) {\n        var map = this.remapChars[name] || {};\n        return map[c];\n    };\n    FontData.OPTIONS = {};\n    FontData.defaultVariants = [\n        ['normal'],\n        ['bold', 'normal'],\n        ['italic', 'normal'],\n        ['bold-italic', 'italic', 'bold'],\n        ['double-struck', 'bold'],\n        ['fraktur', 'normal'],\n        ['bold-fraktur', 'bold', 'fraktur'],\n        ['script', 'italic'],\n        ['bold-script', 'bold-italic', 'script'],\n        ['sans-serif', 'normal'],\n        ['bold-sans-serif', 'bold', 'sans-serif'],\n        ['sans-serif-italic', 'italic', 'sans-serif'],\n        ['sans-serif-bold-italic', 'bold-italic', 'bold-sans-serif'],\n        ['monospace', 'normal']\n    ];\n    FontData.defaultCssFonts = {\n        normal: ['serif', false, false],\n        bold: ['serif', false, true],\n        italic: ['serif', true, false],\n        'bold-italic': ['serif', true, true],\n        'double-struck': ['serif', false, true],\n        fraktur: ['serif', false, false],\n        'bold-fraktur': ['serif', false, true],\n        script: ['cursive', false, false],\n        'bold-script': ['cursive', false, true],\n        'sans-serif': ['sans-serif', false, false],\n        'bold-sans-serif': ['sans-serif', false, true],\n        'sans-serif-italic': ['sans-serif', true, false],\n        'sans-serif-bold-italic': ['sans-serif', true, true],\n        monospace: ['monospace', false, false]\n    };\n    FontData.defaultCssFamilyPrefix = '';\n    FontData.VariantSmp = {\n        bold: [0x1D400, 0x1D41A, 0x1D6A8, 0x1D6C2, 0x1D7CE],\n        italic: [0x1D434, 0x1D44E, 0x1D6E2, 0x1D6FC],\n        'bold-italic': [0x1D468, 0x1D482, 0x1D71C, 0x1D736],\n        script: [0x1D49C, 0x1D4B6],\n        'bold-script': [0x1D4D0, 0x1D4EA],\n        fraktur: [0x1D504, 0x1D51E],\n        'double-struck': [0x1D538, 0x1D552, , , 0x1D7D8],\n        'bold-fraktur': [0x1D56C, 0x1D586],\n        'sans-serif': [0x1D5A0, 0x1D5BA, , , 0x1D7E2],\n        'bold-sans-serif': [0x1D5D4, 0x1D5EE, 0x1D756, 0x1D770, 0x1D7EC],\n        'sans-serif-italic': [0x1D608, 0x1D622],\n        'sans-serif-bold-italic': [0x1D63C, 0x1D656, 0x1D790, 0x1D7AA],\n        'monospace': [0x1D670, 0x1D68A, , , 0x1D7F6]\n    };\n    FontData.SmpRanges = [\n        [0, 0x41, 0x5A],\n        [1, 0x61, 0x7A],\n        [2, 0x391, 0x3A9],\n        [3, 0x3B1, 0x3C9],\n        [4, 0x30, 0x39]\n    ];\n    FontData.SmpRemap = {\n        0x1D455: 0x210E,\n        0x1D49D: 0x212C,\n        0x1D4A0: 0x2130,\n        0x1D4A1: 0x2131,\n        0x1D4A3: 0x210B,\n        0x1D4A4: 0x2110,\n        0x1D4A7: 0x2112,\n        0x1D4A8: 0x2133,\n        0x1D4AD: 0x211B,\n        0x1D4BA: 0x212F,\n        0x1D4BC: 0x210A,\n        0x1D4C4: 0x2134,\n        0x1D506: 0x212D,\n        0x1D50B: 0x210C,\n        0x1D50C: 0x2111,\n        0x1D515: 0x211C,\n        0x1D51D: 0x2128,\n        0x1D53A: 0x2102,\n        0x1D53F: 0x210D,\n        0x1D545: 0x2115,\n        0x1D547: 0x2119,\n        0x1D548: 0x211A,\n        0x1D549: 0x211D,\n        0x1D551: 0x2124,\n    };\n    FontData.SmpRemapGreekU = {\n        0x2207: 0x19,\n        0x03F4: 0x11\n    };\n    FontData.SmpRemapGreekL = {\n        0x3D1: 0x1B,\n        0x3D5: 0x1D,\n        0x3D6: 0x1F,\n        0x3F0: 0x1C,\n        0x3F1: 0x1E,\n        0x3F5: 0x1A,\n        0x2202: 0x19\n    };\n    FontData.defaultAccentMap = {\n        0x0300: '\\u02CB',\n        0x0301: '\\u02CA',\n        0x0302: '\\u02C6',\n        0x0303: '\\u02DC',\n        0x0304: '\\u02C9',\n        0x0306: '\\u02D8',\n        0x0307: '\\u02D9',\n        0x0308: '\\u00A8',\n        0x030A: '\\u02DA',\n        0x030C: '\\u02C7',\n        0x2192: '\\u20D7',\n        0x2032: '\\'',\n        0x2033: '\\'\\'',\n        0x2034: '\\'\\'\\'',\n        0x2035: '`',\n        0x2036: '``',\n        0x2037: '```',\n        0x2057: '\\'\\'\\'\\'',\n        0x20D0: '\\u21BC',\n        0x20D1: '\\u21C0',\n        0x20D6: '\\u2190',\n        0x20E1: '\\u2194',\n        0x20F0: '*',\n        0x20DB: '...',\n        0x20DC: '....',\n        0x20EC: '\\u21C1',\n        0x20ED: '\\u21BD',\n        0x20EE: '\\u2190',\n        0x20EF: '\\u2192'\n    };\n    FontData.defaultMoMap = {\n        0x002D: '\\u2212'\n    };\n    FontData.defaultMnMap = {\n        0x002D: '\\u2212'\n    };\n    FontData.defaultParams = {\n        x_height: .442,\n        quad: 1,\n        num1: .676,\n        num2: .394,\n        num3: .444,\n        denom1: .686,\n        denom2: .345,\n        sup1: .413,\n        sup2: .363,\n        sup3: .289,\n        sub1: .15,\n        sub2: .247,\n        sup_drop: .386,\n        sub_drop: .05,\n        delim1: 2.39,\n        delim2: 1.0,\n        axis_height: .25,\n        rule_thickness: .06,\n        big_op_spacing1: .111,\n        big_op_spacing2: .167,\n        big_op_spacing3: .2,\n        big_op_spacing4: .6,\n        big_op_spacing5: .1,\n        surd_height: .075,\n        scriptspace: .05,\n        nulldelimiterspace: .12,\n        delimiterfactor: 901,\n        delimitershortfall: .3,\n        min_rule_thickness: 1.25\n    };\n    FontData.defaultDelimiters = {};\n    FontData.defaultChars = {};\n    FontData.defaultSizeVariants = [];\n    return FontData;\n}());\nexports.FontData = FontData;\n//# sourceMappingURL=FontData.js.map"]},"metadata":{},"sourceType":"script"}