{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\drawCOCOimage.tsx\";\nimport React from 'react';\nimport { randomColor } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DrawCOCOimage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.canvas = void 0;\n    this.canvasForeground = void 0;\n    this.state = void 0;\n    this.state = {\n      bboxes: [],\n      descriptions: [],\n      colors: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateImage();\n  }\n\n  handleMouse(e) {\n    const ctx = this.canvasForeground.getContext('2d');\n    const rect = this.canvasForeground.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    let i = 0;\n    let r;\n    ctx.clearRect(0, 0, e.target.width, e.target.height);\n\n    while (i < this.state.bboxes.length) {\n      r = this.state.bboxes[i];\n      ctx.beginPath();\n      ctx.rect(r[0], r[1], r[2], r[3]);\n      const [R, G, B, A] = this.state.colors[i].slice(5, this.state.colors[i].length).split(',');\n      ctx.fillStyle = ctx.isPointInPath(x, y) ? `rgba(${R},${G},${B},0.6)` : this.state.colors[i];\n      ctx.fillText('a', 2, 3);\n      ctx.fill();\n      i++;\n    }\n  }\n\n  updateImage() {\n    const bboxes = [];\n    const descriptions = [];\n    const colors = [];\n    const imageObj1 = new Image(); //console.log(this.props.props.Image.url);\n\n    imageObj1.src = this.props.props.Image.url;\n\n    imageObj1.onload = () => {\n      const ctx = this.canvas.getContext('2d');\n      const ctxForeground = this.canvasForeground.getContext('2d');\n      ctx.drawImage(imageObj1, 0, 0);\n      this.props.props.Image.info.bboxes.forEach(bbox => {\n        const fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`;\n        bboxes.push(bbox.box);\n        descriptions.push(bbox.category);\n        colors.push(fillColor);\n        ctxForeground.fillStyle = fillColor;\n        ctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\n      });\n    };\n\n    this.setState({\n      bboxes: bboxes,\n      descriptions: descriptions,\n      colors: colors\n    });\n  }\n\n  componentDidUpdate(prevProps, Props) {\n    if (this.props !== prevProps) {\n      this.updateImage();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: {\n          zIndex: 1\n        },\n        ref: canvas => this.canvas = canvas,\n        width: this.props.props.Image.width,\n        height: this.props.props.Image.height,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: {\n          top: 0,\n          zIndex: 2,\n          marginLeft: `-${this.props.props.Image.width}px`\n        },\n        onMouseMove: this.handleMouse.bind(this),\n        ref: canvas => this.canvasForeground = canvas,\n        width: this.props.props.Image.width,\n        height: this.props.props.Image.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/drawCOCOimage.tsx"],"names":["React","randomColor","DrawCOCOimage","Component","constructor","props","canvasRef","createRef","canvas","canvasForeground","state","bboxes","descriptions","colors","componentDidMount","updateImage","handleMouse","e","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","i","r","clearRect","target","width","height","length","beginPath","R","G","B","A","slice","split","fillStyle","isPointInPath","fillText","fill","imageObj1","Image","src","url","onload","ctxForeground","drawImage","info","forEach","bbox","fillColor","push","box","category","fillRect","setState","componentDidUpdate","prevProps","Props","render","display","zIndex","marginLeft","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {randomColor} from '../interfaces/SortInterfaces';\r\ninterface bbox{\r\n\tbbox: number[],\r\n\tcategory:string\r\n}\r\ninterface segment{\r\n\tsegments: number[][]\r\n}\r\ninterface segments{\r\n\tarea: number,\r\n\tsegments:segment,\r\n\tcategory:string\r\n}\r\n\r\n\r\n\r\ninterface props{\r\n\tfilename: string,\r\n\turl: string,\r\n\theight: number,\r\n\twidth: number,\r\n\tinfo: {\r\n\t\tbboxes: bbox[],\r\n\t\tsegments: segments\r\n\r\n\t}\r\n}\r\ninterface stateInterface{\r\n\tbboxes:number[][], descriptions:string[], colors:string[]\r\n}\r\n\r\nexport class DrawCOCOimage extends React.Component<any, any>{\r\n\tpublic canvasRef = React.createRef<any>();\r\n\tpublic canvas:any;\r\n\tpublic canvasForeground:any;\r\n\treadonly state:stateInterface;\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { bboxes:[], descriptions:[], colors:[]};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateImage();\r\n\t}\r\n\r\n\r\n\thandleMouse(e:any){\r\n\r\n\t\tconst ctx = this.canvasForeground.getContext('2d');\r\n\t\tconst rect = this.canvasForeground.getBoundingClientRect();\r\n\t\tconst x = e.clientX - rect.left;\r\n\t\tconst y = e.clientY - rect.top;\r\n\t\tlet i = 0;\r\n\t\tlet r:number[];\r\n\t\tctx.clearRect(0, 0, e.target.width, e.target.height);\r\n\r\n\t\twhile (i< this.state.bboxes.length) {\r\n\t\t\tr = this.state.bboxes[i];\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(r[0], r[1], r[2], r[3]);\r\n\t\t\tconst [R, G, B,A] = this.state.colors[i].slice(5,this.state.colors[i].length).split(',');\r\n\t\t\tctx.fillStyle = ctx.isPointInPath(x, y) ? `rgba(${R},${G},${B},0.6)`: this.state.colors[i];\r\n\t\t\tctx.fillText('a', 2,3);\r\n\t\t\tctx.fill();\r\n\t\t\ti++;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tupdateImage(){\r\n\t\tconst bboxes:number[]=[];\r\n\t\tconst descriptions:string[] = [];\r\n\t\tconst colors:string[] = [];\r\n\t\tconst imageObj1 = new Image();\r\n\t\t//console.log(this.props.props.Image.url);\r\n\t\timageObj1.src = this.props.props.Image.url;\r\n\t\timageObj1.onload = ()=> {\r\n\t\t\tconst ctx = this.canvas.getContext('2d');\r\n\t\t\tconst ctxForeground = this.canvasForeground.getContext('2d');\r\n\t\t\tctx.drawImage(imageObj1,0,0);\r\n\r\n\t\t\tthis.props.props.Image.info.bboxes.forEach( (bbox: any)=>{\r\n\t\t\t\tconst fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`;\r\n\t\t\t\tbboxes.push(bbox.box);\r\n\t\t\t\tdescriptions.push(bbox.category);\r\n\t\t\t\tcolors.push(fillColor);\r\n\t\t\t\tctxForeground.fillStyle = fillColor;\r\n\t\t\t\tctxForeground.fillRect(bbox.box[0],bbox.box[1],bbox.box[2],bbox.box[3]);\r\n\r\n\t\t\t});\r\n\r\n\t\t};\r\n\t\tthis.setState({bboxes: bboxes as number[], descriptions: descriptions, colors: colors });\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<any>, Props: Readonly<any>) {\r\n\t\tif(this.props!==prevProps){\r\n\t\t\tthis.updateImage();\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{ display: 'flex'}}>\r\n\t\t\t\t<canvas style={{zIndex:1}}   ref={(canvas)=>this.canvas=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}> </canvas>\r\n\t\t\t\t<canvas style={{top: 0,zIndex:2, marginLeft:`-${this.props.props.Image.width}px`}} onMouseMove={this.handleMouse.bind(this)} ref={(canvas)=>this.canvasForeground=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}></canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}