{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BubbleChart.tsx\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { chartjsDataTemplate, generateColorsForChart } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BubbleChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = void 0;\n    this.chart = void 0;\n    this.timer = void 0;\n    this.isSorting = void 0;\n    this.interrupt = void 0;\n    this.uselessRefresh = void 0;\n    this.state = void 0;\n    this.props = void 0;\n    this.timeouts = void 0;\n    this.date = void 0;\n\n    this.equals = (a, b) => a.toString() === b.toString();\n\n    this.state = chartjsDataTemplate;\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.timer = 0;\n    this.isSorting = false;\n    this.interrupt = false;\n    this.date = 0;\n    this.uselessRefresh = false;\n    this.timeouts = [];\n  } // randomize(size: number){\n  // \tthis.chart.data.labels = Array.from({length: size}, () => Math.floor(Math.random() * 1000));\n  // \tthis.chart.data.datasets[0].data = Array.from({ length: size }, (_, i) => (i+1).toString());\n  // }\n\n\n  bubbleSort() {\n    const labels = this.chart.data.labels;\n    const data = this.chart.data.datasets[0].data;\n    const colors = this.chart.data.datasets[0].backgroundColor;\n    let swapped;\n    let timeout = 0;\n\n    do {\n      swapped = false;\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i] > data[i + 1]) {\n          [labels[i], labels[i + 1]] = [labels[i + 1], labels[i]];\n          [data[i], data[i + 1]] = [data[i + 1], data[i]];\n          [colors[i], colors[i + 1]] = [colors[i + 1], colors[i]];\n          timeout += 100;\n          const theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\n          this.timeouts.push(theTimeout);\n          swapped = true;\n        }\n      }\n    } while (swapped);\n  }\n\n  componentDidMount() {\n    this.chart = this.chartReference.current.chartInstance;\n  }\n\n  updateChartDelayed(labels, data, colors, timeout) {\n    this.timer = setTimeout(() => {\n      const now = new Date().getTime();\n      const timeDifference = now - this.date;\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n      const mins = timeDifference / 60000;\n      const mils = Math.floor(timeDifference % (1000 * 60) / 1);\n      this.isSorting = true;\n      this.chart.data.datasets[0].label = `${mins.toString().substr(0, 1)}m ${seconds}s ${mils.toString().substr(-3)}ms`;\n      this.chart.data.labels = labels;\n      this.chart.data.datasets[0].data = data;\n      this.chart.data.datasets[0].backgroundColor = colors;\n      this.chart.update();\n      const eth = [...this.chart.data.datasets[0].data].sort((x, y) => x - y);\n\n      if (eth.toString() === this.chart.data.datasets[0].data.toString()) {\n        this.props.callback();\n      }\n    }, timeout);\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  clearAllTimeouts() {\n    for (const timeout in this.timeouts) {\n      clearInterval(this.timeouts[timeout]);\n    }\n\n    this.timeouts = [];\n  }\n\n  refreshChart() {\n    const temporaryDataToSort = chartjsDataTemplate;\n    temporaryDataToSort.datasets[0].data = Array.from({\n      length: this.props.commands.arrayLength\n    }, () => Math.floor(Math.random() * 1000));\n    temporaryDataToSort.labels = Array.from({\n      length: this.props.commands.arrayLength\n    }, (_, i) => (i + 1).toString());\n    [temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\n    this.setState(temporaryDataToSort);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('Bubble TRIGGERED!'); //equals\n\n    if (prevProps !== this.props) {\n      this.date = new Date(Date.now()).getTime();\n      this.clearAllTimeouts();\n\n      if (this.props.commands.StopSort) {\n        this.clearAllTimeouts();\n      } else if (this.equals(this.chart.data.datasets[0].data, this.state.datasets[0].data)) {\n        console.log('Sorted');\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      } else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      } else if (this.props.commands.name !== prevProps.commands.name) {\n        this.bubbleSort();\n      } else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      } else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        width: 100,\n        height: 50,\n        options: {\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              boxWidth: 0\n            }\n          }\n        },\n        ref: this.chartReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport const MemorizedBubbleChart = /*#__PURE__*/React.memo(BubbleChart);\n_c = MemorizedBubbleChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedBubbleChart\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BubbleChart.tsx"],"names":["React","Component","Bar","chartjsDataTemplate","generateColorsForChart","BubbleChart","constructor","props","chartReference","chart","timer","isSorting","interrupt","uselessRefresh","state","timeouts","date","equals","a","b","toString","createRef","bubbleSort","labels","data","datasets","colors","backgroundColor","swapped","timeout","i","length","theTimeout","updateChartDelayed","slice","push","componentDidMount","current","chartInstance","setTimeout","now","Date","getTime","timeDifference","seconds","Math","floor","mins","mils","label","substr","update","eth","sort","x","y","callback","componentWillUnmount","clearInterval","clearAllTimeouts","refreshChart","temporaryDataToSort","Array","from","commands","arrayLength","random","_","borderColor","setState","componentDidUpdate","prevProps","console","log","StopSort","name","render","legend","display","position","boxWidth","MemorizedBubbleChart","memo"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,QAAkB,iBAAlB;AACA,SAA2BC,mBAA3B,EAAgDC,sBAAhD,QAA6E,8BAA7E;;;AAKA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAuD;AAYtDK,EAAAA,WAAW,CAACC,KAAD,EAA2B;AACrC,UAAMA,KAAN;AADqC,SAX9BC,cAW8B;AAAA,SAV9BC,KAU8B;AAAA,SAT9BC,KAS8B;AAAA,SAR9BC,SAQ8B;AAAA,SAP9BC,SAO8B;AAAA,SAN9BC,cAM8B;AAAA,SAL/BC,KAK+B;AAAA,SAJ/BP,KAI+B;AAAA,SAH9BQ,QAG8B;AAAA,SAF9BC,IAE8B;;AAAA,SAqDtCC,MArDsC,GAqD7B,CAACC,CAAD,EAAaC,CAAb,KAA4BD,CAAC,CAACE,QAAF,OAAiBD,CAAC,CAACC,QAAF,EArDhB;;AAGrC,SAAKN,KAAL,GAAaX,mBAAb;AAEA,SAAKK,cAAL,gBAAsBR,KAAK,CAACqB,SAAN,EAAtB;AAEA,SAAKX,KAAL,GAAa,CAAb;AAEA,SAAKC,SAAL,GAAiB,KAAjB;AAEA,SAAKC,SAAL,GAAiB,KAAjB;AAEA,SAAKI,IAAL,GAAW,CAAX;AAGA,SAAKH,cAAL,GAAsB,KAAtB;AACA,SAAKE,QAAL,GAAgB,EAAhB;AAEA,GA/BqD,CAiCtD;AACA;AACA;AACA;;;AAEAO,EAAAA,UAAU,GAAG;AACZ,UAAMC,MAAM,GAAG,KAAKd,KAAL,CAAWe,IAAX,CAAgBD,MAA/B;AACA,UAAMC,IAAI,GAAG,KAAKf,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BD,IAAzC;AACA,UAAME,MAAM,GAAG,KAAKjB,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BE,eAA3C;AACA,QAAIC,OAAJ;AACA,QAAIC,OAAO,GAAG,CAAd;;AAEA,OAAG;AACFD,MAAAA,OAAO,GAAG,KAAV;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACrC,YAAIN,IAAI,CAACM,CAAD,CAAJ,GAAUN,IAAI,CAACM,CAAC,GAAG,CAAL,CAAlB,EAA2B;AAE1B,WAACP,MAAM,CAACO,CAAD,CAAP,EAAYP,MAAM,CAACO,CAAC,GAAC,CAAH,CAAlB,IAA2B,CAACP,MAAM,CAACO,CAAC,GAAC,CAAH,CAAP,EAAcP,MAAM,CAACO,CAAD,CAApB,CAA3B;AACA,WAACN,IAAI,CAACM,CAAD,CAAL,EAAUN,IAAI,CAACM,CAAC,GAAC,CAAH,CAAd,IAAuB,CAACN,IAAI,CAACM,CAAC,GAAC,CAAH,CAAL,EAAYN,IAAI,CAACM,CAAD,CAAhB,CAAvB;AACA,WAACJ,MAAM,CAACI,CAAD,CAAP,EAAYJ,MAAM,CAACI,CAAC,GAAC,CAAH,CAAlB,IAA2B,CAACJ,MAAM,CAACI,CAAC,GAAC,CAAH,CAAP,EAAcJ,MAAM,CAACI,CAAD,CAApB,CAA3B;AAEAD,UAAAA,OAAO,IAAI,GAAX;AACA,gBAAMG,UAAU,GAAG,KAAKC,kBAAL,CAAwBV,MAAM,CAACW,KAAP,CAAa,CAAb,CAAxB,EAAyCV,IAAI,CAACU,KAAL,CAAW,CAAX,CAAzC,EAAwDR,MAAM,CAACQ,KAAP,CAAa,CAAb,CAAxD,EAAyEL,OAAzE,CAAnB;AACA,eAAKd,QAAL,CAAcoB,IAAd,CAAmBH,UAAnB;AACAJ,UAAAA,OAAO,GAAG,IAAV;AACA;AACD;AACD,KAfD,QAeSA,OAfT;AAiBA;;AAKDQ,EAAAA,iBAAiB,GAAE;AAClB,SAAK3B,KAAL,GAAa,KAAKD,cAAL,CAAoB6B,OAApB,CAA4BC,aAAzC;AACA;;AAGDL,EAAAA,kBAAkB,CAACV,MAAD,EAAmBC,IAAnB,EAAkCE,MAAlC,EAAmDG,OAAnD,EAAmE;AAGpF,SAAKnB,KAAL,GAAa6B,UAAU,CAAC,MAAM;AAE7B,YAAMC,GAAG,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAZ;AAEA,YAAMC,cAAc,GAAIH,GAAG,GAAG,KAAKxB,IAAnC;AACA,YAAM4B,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAYH,cAAc,IAAI,OAAO,EAAX,CAAf,GAAiC,IAA5C,CAAhB;AACA,YAAMI,IAAI,GAAGJ,cAAc,GAAE,KAA7B;AACA,YAAMK,IAAI,GAAGH,IAAI,CAACC,KAAL,CAAYH,cAAc,IAAI,OAAO,EAAX,CAAf,GAAiC,CAA5C,CAAb;AAEA,WAAKhC,SAAL,GAAiB,IAAjB;AACA,WAAKF,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BwB,KAA5B,GAAsC,GAAEF,IAAI,CAAC3B,QAAL,GAAgB8B,MAAhB,CAAuB,CAAvB,EAAyB,CAAzB,CAA4B,KAAIN,OAAQ,KAAII,IAAI,CAAC5B,QAAL,GAAgB8B,MAAhB,CAAuB,CAAC,CAAxB,CAA2B,IAA/G;AACA,WAAKzC,KAAL,CAAWe,IAAX,CAAgBD,MAAhB,GAAyBA,MAAzB;AACA,WAAKd,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BD,IAA5B,GAAmCA,IAAnC;AACA,WAAKf,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BE,eAA5B,GAA8CD,MAA9C;AACA,WAAKjB,KAAL,CAAW0C,MAAX;AAEA,YAAMC,GAAG,GAAG,CAAC,GAAG,KAAK3C,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BD,IAAhC,EAAsC6B,IAAtC,CAA2C,CAACC,CAAD,EAAGC,CAAH,KAAQD,CAAC,GAACC,CAArD,CAAZ;;AACA,UAAIH,GAAG,CAAChC,QAAJ,OAAmB,KAAKX,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BD,IAA5B,CAAiCJ,QAAjC,EAAvB,EAAoE;AACnE,aAAKb,KAAL,CAAWiD,QAAX;AACA;AAGD,KAtBsB,EAsBpB3B,OAtBoB,CAAvB;AA0BA,WAAO,KAAKnB,KAAZ;AACA;;AAED+C,EAAAA,oBAAoB,GAAG;AACtBC,IAAAA,aAAa,CAAC,KAAKhD,KAAN,CAAb;AAEA;;AAGDiD,EAAAA,gBAAgB,GAAE;AACjB,SAAI,MAAM9B,OAAV,IAAqB,KAAKd,QAA1B,EAAmC;AAClC2C,MAAAA,aAAa,CAAC,KAAK3C,QAAL,CAAcc,OAAd,CAAD,CAAb;AACA;;AACD,SAAKd,QAAL,GAAc,EAAd;AACA;;AAED6C,EAAAA,YAAY,GAAE;AACb,UAAMC,mBAAmB,GAAG1D,mBAA5B;AACA0D,IAAAA,mBAAmB,CAACpC,QAApB,CAA6B,CAA7B,EAAgCD,IAAhC,GAAuCsC,KAAK,CAACC,IAAN,CAAW;AAAChC,MAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWyD,QAAX,CAAoBC;AAA7B,KAAX,EAAsD,MAAMpB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACqB,MAAL,KAAgB,IAA3B,CAA5D,CAAvC;AACAL,IAAAA,mBAAmB,CAACtC,MAApB,GAA6BuC,KAAK,CAACC,IAAN,CAAW;AAAEhC,MAAAA,MAAM,EAAE,KAAKxB,KAAL,CAAWyD,QAAX,CAAoBC;AAA9B,KAAX,EAAwD,CAACE,CAAD,EAAIrC,CAAJ,KAAU,CAACA,CAAC,GAAC,CAAH,EAAMV,QAAN,EAAlE,CAA7B;AACA,KAACyC,mBAAmB,CAACpC,QAApB,CAA6B,CAA7B,EAAgCE,eAAjC,EAAkDkC,mBAAmB,CAACpC,QAApB,CAA6B,CAA7B,EAAgC2C,WAAlF,IAAiGhE,sBAAsB,CAAC,KAAKG,KAAL,CAAWyD,QAAX,CAAoBC,WAArB,EAAkC,GAAlC,CAAvH;AACA,SAAKI,QAAL,CAAcR,mBAAd;AACA;;AAGDS,EAAAA,kBAAkB,CAACC,SAAD,EAA8B;AAE/CC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAF+C,CAG/C;;AACA,QAAGF,SAAS,KAAG,KAAKhE,KAApB,EAA2B;AAE1B,WAAKS,IAAL,GAAY,IAAIyB,IAAJ,CAASA,IAAI,CAACD,GAAL,EAAT,EAAqBE,OAArB,EAAZ;AAEA,WAAKiB,gBAAL;;AAEA,UAAI,KAAKpD,KAAL,CAAWyD,QAAX,CAAoBU,QAAxB,EAAkC;AAEjC,aAAKf,gBAAL;AAEA,OAJD,MAKK,IAAG,KAAK1C,MAAL,CAAY,KAAKR,KAAL,CAAWe,IAAX,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4BD,IAAxC,EAA8C,KAAKV,KAAL,CAAWW,QAAX,CAAoB,CAApB,EAAuBD,IAArE,CAAH,EACL;AACCgD,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,aAAKd,gBAAL;AACA,aAAKC,YAAL;AACArB,QAAAA,UAAU,CAAC,MAAM;AAChB,eAAKjB,UAAL;AACA,SAFS,EAEP,GAFO,CAAV;AAKA,OAVI,MAWA,IAAI,KAAKf,KAAL,CAAWyD,QAAX,CAAoBW,IAApB,KAA6BJ,SAAS,CAACP,QAAV,CAAmBW,IAAhD,IAAwD,KAAKpE,KAAL,CAAWyD,QAAX,CAAoBC,WAApB,KAAoCM,SAAS,CAACP,QAAV,CAAmBC,WAAnH,EAAgI;AAEpI,aAAKN,gBAAL;AACA,aAAKC,YAAL;AACArB,QAAAA,UAAU,CAAC,MAAM;AAChB,eAAKjB,UAAL;AACA,SAFS,EAEP,GAFO,CAAV;AAGA,OAPI,MAOE,IAAI,KAAKf,KAAL,CAAWyD,QAAX,CAAoBW,IAApB,KAA6BJ,SAAS,CAACP,QAAV,CAAmBW,IAApD,EAA0D;AAEhE,aAAKrD,UAAL;AACA,OAHM,MAGA,IAAI,KAAKf,KAAL,CAAWyD,QAAX,CAAoBC,WAApB,KAAoCM,SAAS,CAACP,QAAV,CAAmBC,WAA3D,EAAwE;AAE9E,aAAKL,YAAL;AACA,aAAKD,gBAAL;AACApB,QAAAA,UAAU,CAAC,MAAM;AAChB,eAAKjB,UAAL;AACA,SAFS,EAEP,GAFO,CAAV;AAIA,OARM,MAQA,IAAI,KAAKf,KAAL,CAAWyD,QAAX,CAAoBC,WAApB,KAAoCM,SAAS,CAACP,QAAV,CAAmBC,WAA3D,EAAwE;AAE9E,aAAKL,YAAL;AACA,aAAKD,gBAAL;AACApB,QAAAA,UAAU,CAAC,MAAM;AAChB,eAAKjB,UAAL;AACA,SAFS,EAEP,GAFO,CAAV;AAGA;AAID;AAED;;AAGDsD,EAAAA,MAAM,GAAG;AACR,wBACC;AAAA,6BAAK,QAAC,GAAD;AAAK,QAAA,IAAI,EAAE,KAAK9D,KAAhB;AAAuB,QAAA,KAAK,EAAE,GAA9B;AAAmC,QAAA,MAAM,EAAE,EAA3C;AAA+C,QAAA,OAAO,EAAE;AAC5D+D,UAAAA,MAAM,EAAE;AACPC,YAAAA,OAAO,EAAE,IADF;AAEPC,YAAAA,QAAQ,EAAE,KAFH;AAGPxD,YAAAA,MAAM,EAAE;AACPyD,cAAAA,QAAQ,EAAE;AADH;AAHD;AADoD,SAAxD;AASF,QAAA,GAAG,EAAE,KAAKxE;AATR;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,YADD;AAaA;;AAxMqD;;AA2MvD,OAAO,MAAMyE,oBAAoB,gBAAGjF,KAAK,CAACkF,IAAN,CAAW7E,WAAX,CAA7B;KAAM4E,oB","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {CommandsInterface, chartjsDataTemplate, generateColorsForChart} from '../interfaces/SortInterfaces';\r\nimport {sortingStore} from './ModalContent';\r\nimport {bubbleSort} from '../redux/SortingStateReducer';\r\n\r\n\r\nclass BubbleChart extends Component<CommandsInterface> {\r\n\tprivate chartReference: React.RefObject<any>;\r\n\tprivate chart: any;\r\n\tprivate timer: any;\r\n\tprivate isSorting: boolean;\r\n\tprivate interrupt: boolean;\r\n\tprivate uselessRefresh: boolean;\r\n\tpublic state;\r\n\tpublic props: any;\r\n\tprivate timeouts:number[];\r\n\tprivate date: number;\r\n\r\n\tconstructor(props: CommandsInterface) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = chartjsDataTemplate;\r\n\r\n\t\tthis.chartReference = React.createRef<any>();\r\n\r\n\t\tthis.timer = 0;\r\n\r\n\t\tthis.isSorting = false;\r\n\r\n\t\tthis.interrupt = false;\r\n\r\n\t\tthis.date =0;\r\n\r\n\r\n\t\tthis.uselessRefresh = false;\r\n\t\tthis.timeouts = [];\r\n\r\n\t}\r\n\r\n\t// randomize(size: number){\r\n\t// \tthis.chart.data.labels = Array.from({length: size}, () => Math.floor(Math.random() * 1000));\r\n\t// \tthis.chart.data.datasets[0].data = Array.from({ length: size }, (_, i) => (i+1).toString());\r\n\t// }\r\n\r\n\tbubbleSort() {\r\n\t\tconst labels = this.chart.data.labels;\r\n\t\tconst data = this.chart.data.datasets[0].data;\r\n\t\tconst colors = this.chart.data.datasets[0].backgroundColor;\r\n\t\tlet swapped;\r\n\t\tlet timeout = 0;\r\n\r\n\t\tdo {\r\n\t\t\tswapped = false;\r\n\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\tif (data[i] > data[i + 1]) {\r\n\r\n\t\t\t\t\t[labels[i], labels[i+1]] = [labels[i+1], labels[i]];\r\n\t\t\t\t\t[data[i], data[i+1]] = [data[i+1], data[i]];\r\n\t\t\t\t\t[colors[i], colors[i+1]] = [colors[i+1], colors[i]];\r\n\r\n\t\t\t\t\ttimeout += 100;\r\n\t\t\t\t\tconst theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\r\n\t\t\t\t\tthis.timeouts.push(theTimeout);\r\n\t\t\t\t\tswapped = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (swapped);\r\n\r\n\t}\r\n\r\n\r\n\tequals = (a:number[], b:number[]) => a.toString() === b.toString();\r\n\r\n\tcomponentDidMount(){\r\n\t\tthis.chart = this.chartReference.current.chartInstance;\r\n\t}\r\n\r\n\r\n\tupdateChartDelayed(labels: string[], data:number[], colors:string[], timeout:number) {\r\n\r\n\r\n\t\tthis.timer = setTimeout(() => {\r\n\r\n\t\t\tconst now = new Date().getTime();\r\n\r\n\t\t\tconst timeDifference  = now - this.date;\r\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\t\t\tconst mins = timeDifference /60000;\r\n\t\t\tconst mils = Math.floor((timeDifference % (1000 * 60)) / 1);\r\n\r\n\t\t\tthis.isSorting = true;\r\n\t\t\tthis.chart.data.datasets[0].label =  `${mins.toString().substr(0,1)}m ${seconds}s ${mils.toString().substr(-3)}ms`  ;\r\n\t\t\tthis.chart.data.labels = labels;\r\n\t\t\tthis.chart.data.datasets[0].data = data;\r\n\t\t\tthis.chart.data.datasets[0].backgroundColor = colors;\r\n\t\t\tthis.chart.update();\r\n\r\n\t\t\tconst eth = [...this.chart.data.datasets[0].data].sort((x,y)=> x-y);\r\n\t\t\tif( eth.toString() === this.chart.data.datasets[0].data.toString()) {\r\n\t\t\t\tthis.props.callback();\r\n\t\t\t}\r\n\r\n\r\n\t\t}, timeout);\r\n\r\n\r\n\r\n\t\treturn this.timer;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\r\n\t}\r\n\r\n\r\n\tclearAllTimeouts(){\r\n\t\tfor(const timeout in this.timeouts){\r\n\t\t\tclearInterval(this.timeouts[timeout]);\r\n\t\t}\r\n\t\tthis.timeouts=[];\r\n\t}\r\n\r\n\trefreshChart(){\r\n\t\tconst temporaryDataToSort = chartjsDataTemplate;\r\n\t\ttemporaryDataToSort.datasets[0].data = Array.from({length: this.props.commands.arrayLength}, () => Math.floor(Math.random() * 1000));\r\n\t\ttemporaryDataToSort.labels = Array.from({ length: this.props.commands.arrayLength }, (_, i) => (i+1).toString());\r\n\t\t[temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\r\n\t\tthis.setState(temporaryDataToSort);\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps:CommandsInterface) {\r\n\r\n\t\tconsole.log('Bubble TRIGGERED!');\r\n\t\t//equals\r\n\t\tif(prevProps!==this.props) {\r\n\r\n\t\t\tthis.date = new Date(Date.now()).getTime();\r\n\r\n\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\tif (this.props.commands.StopSort) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\t}\r\n\t\t\telse if(this.equals(this.chart.data.datasets[0].data, this.state.datasets[0].data) )\r\n\t\t\t{\r\n\t\t\t\tconsole.log('Sorted');\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.bubbleSort();\r\n\t\t\t\t}, 800);\r\n\r\n\r\n\t\t\t}\r\n\t\t\telse if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.bubbleSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name) {\r\n\r\n\t\t\t\tthis.bubbleSort();\r\n\t\t\t} else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.bubbleSort();\r\n\t\t\t\t}, 800);\r\n\r\n\t\t\t} else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.bubbleSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div><Bar data={this.state} width={100} height={50} options={{\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\tboxWidth: 0,\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t}} ref={this.chartReference}/></div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\nexport const MemorizedBubbleChart = React.memo(BubbleChart);\r\n"]},"metadata":{},"sourceType":"module"}