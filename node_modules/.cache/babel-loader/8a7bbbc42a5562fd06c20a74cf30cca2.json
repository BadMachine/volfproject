{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TagsFactory = exports.AllTags = exports.NoTags = exports.AbstractTags = exports.TagInfo = exports.Label = void 0;\n\nvar TexParser_js_1 = require(\"./TexParser.js\");\n\nvar Label = function () {\n  function Label(tag, id) {\n    if (tag === void 0) {\n      tag = '???';\n    }\n\n    if (id === void 0) {\n      id = '';\n    }\n\n    this.tag = tag;\n    this.id = id;\n  }\n\n  return Label;\n}();\n\nexports.Label = Label;\n\nvar TagInfo = function () {\n  function TagInfo(env, taggable, defaultTags, tag, tagId, tagFormat, noTag, labelId) {\n    if (env === void 0) {\n      env = '';\n    }\n\n    if (taggable === void 0) {\n      taggable = false;\n    }\n\n    if (defaultTags === void 0) {\n      defaultTags = false;\n    }\n\n    if (tag === void 0) {\n      tag = null;\n    }\n\n    if (tagId === void 0) {\n      tagId = '';\n    }\n\n    if (tagFormat === void 0) {\n      tagFormat = '';\n    }\n\n    if (noTag === void 0) {\n      noTag = false;\n    }\n\n    if (labelId === void 0) {\n      labelId = '';\n    }\n\n    this.env = env;\n    this.taggable = taggable;\n    this.defaultTags = defaultTags;\n    this.tag = tag;\n    this.tagId = tagId;\n    this.tagFormat = tagFormat;\n    this.noTag = noTag;\n    this.labelId = labelId;\n  }\n\n  return TagInfo;\n}();\n\nexports.TagInfo = TagInfo;\n\nvar AbstractTags = function () {\n  function AbstractTags() {\n    this.counter = 0;\n    this.allCounter = 0;\n    this.configuration = null;\n    this.ids = {};\n    this.allIds = {};\n    this.labels = {};\n    this.allLabels = {};\n    this.redo = false;\n    this.refUpdate = false;\n    this.currentTag = new TagInfo();\n    this.history = [];\n    this.stack = [];\n\n    this.enTag = function (node, tag) {\n      var nf = this.configuration.nodeFactory;\n      var cell = nf.create('node', 'mtd', [node]);\n      var row = nf.create('node', 'mlabeledtr', [tag, cell]);\n      var table = nf.create('node', 'mtable', [row], {\n        side: this.configuration.options['tagSide'],\n        minlabelspacing: this.configuration.options['tagIndent'],\n        displaystyle: true\n      });\n      return table;\n    };\n  }\n\n  AbstractTags.prototype.start = function (env, taggable, defaultTags) {\n    if (this.currentTag) {\n      this.stack.push(this.currentTag);\n    }\n\n    this.currentTag = new TagInfo(env, taggable, defaultTags);\n  };\n\n  Object.defineProperty(AbstractTags.prototype, \"env\", {\n    get: function () {\n      return this.currentTag.env;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractTags.prototype.end = function () {\n    this.history.push(this.currentTag);\n    this.currentTag = this.stack.pop();\n  };\n\n  AbstractTags.prototype.tag = function (tag, noFormat) {\n    this.currentTag.tag = tag;\n    this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);\n    this.currentTag.noTag = false;\n  };\n\n  AbstractTags.prototype.notag = function () {\n    this.tag('', true);\n    this.currentTag.noTag = true;\n  };\n\n  Object.defineProperty(AbstractTags.prototype, \"noTag\", {\n    get: function () {\n      return this.currentTag.noTag;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(AbstractTags.prototype, \"label\", {\n    get: function () {\n      return this.currentTag.labelId;\n    },\n    set: function (label) {\n      this.currentTag.labelId = label;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AbstractTags.prototype.formatUrl = function (id, base) {\n    return base + '#' + encodeURIComponent(id);\n  };\n\n  AbstractTags.prototype.formatTag = function (tag) {\n    return '(' + tag + ')';\n  };\n\n  AbstractTags.prototype.formatId = function (id) {\n    return 'mjx-eqn-' + id.replace(/\\s/g, '_');\n  };\n\n  AbstractTags.prototype.formatNumber = function (n) {\n    return n.toString();\n  };\n\n  AbstractTags.prototype.autoTag = function () {\n    if (this.currentTag.tag == null) {\n      this.counter++;\n      this.tag(this.formatNumber(this.counter), false);\n    }\n  };\n\n  AbstractTags.prototype.clearTag = function () {\n    this.label = '';\n    this.tag(null, true);\n    this.currentTag.tagId = '';\n  };\n\n  AbstractTags.prototype.getTag = function (force) {\n    if (force === void 0) {\n      force = false;\n    }\n\n    if (force) {\n      this.autoTag();\n      return this.makeTag();\n    }\n\n    var ct = this.currentTag;\n\n    if (ct.taggable && !ct.noTag) {\n      if (ct.defaultTags) {\n        this.autoTag();\n      }\n\n      if (ct.tag) {\n        return this.makeTag();\n      }\n    }\n\n    return null;\n  };\n\n  AbstractTags.prototype.resetTag = function () {\n    this.history = [];\n    this.redo = false;\n    this.refUpdate = false;\n    this.clearTag();\n  };\n\n  AbstractTags.prototype.reset = function (offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n\n    this.resetTag();\n    this.counter = this.allCounter = offset;\n    this.allLabels = {};\n    this.allIds = {};\n  };\n\n  AbstractTags.prototype.startEquation = function (math) {\n    this.labels = {};\n    this.ids = {};\n    this.counter = this.allCounter;\n    this.redo = false;\n    var recompile = math.inputData.recompile;\n\n    if (recompile) {\n      this.refUpdate = true;\n      this.counter = recompile.counter;\n    }\n  };\n\n  AbstractTags.prototype.finishEquation = function (math) {\n    if (this.redo) {\n      math.inputData.recompile = {\n        state: math.state(),\n        counter: this.allCounter\n      };\n    }\n\n    if (!this.refUpdate) {\n      this.allCounter = this.counter;\n    }\n\n    Object.assign(this.allIds, this.ids);\n    Object.assign(this.allLabels, this.labels);\n  };\n\n  AbstractTags.prototype.finalize = function (node, env) {\n    if (!env.display || this.currentTag.env || this.currentTag.tag == null) {\n      return node;\n    }\n\n    var tag = this.makeTag();\n    var table = this.enTag(node, tag);\n    return table;\n  };\n\n  AbstractTags.prototype.makeId = function () {\n    this.currentTag.tagId = this.formatId(this.configuration.options['useLabelIds'] ? this.label || this.currentTag.tag : this.currentTag.tag);\n  };\n\n  AbstractTags.prototype.makeTag = function () {\n    this.makeId();\n\n    if (this.label) {\n      this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);\n    }\n\n    var mml = new TexParser_js_1.default('\\\\text{' + this.currentTag.tagFormat + '}', {}, this.configuration).mml();\n    return this.configuration.nodeFactory.create('node', 'mtd', [mml], {\n      id: this.currentTag.tagId\n    });\n  };\n\n  return AbstractTags;\n}();\n\nexports.AbstractTags = AbstractTags;\n\nvar NoTags = function (_super) {\n  __extends(NoTags, _super);\n\n  function NoTags() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  NoTags.prototype.autoTag = function () {};\n\n  NoTags.prototype.getTag = function () {\n    return !this.currentTag.tag ? null : _super.prototype.getTag.call(this);\n  };\n\n  return NoTags;\n}(AbstractTags);\n\nexports.NoTags = NoTags;\n\nvar AllTags = function (_super) {\n  __extends(AllTags, _super);\n\n  function AllTags() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AllTags.prototype.finalize = function (node, env) {\n    if (!env.display || this.history.find(function (x) {\n      return x.taggable;\n    })) {\n      return node;\n    }\n\n    var tag = this.getTag(true);\n    return this.enTag(node, tag);\n  };\n\n  return AllTags;\n}(AbstractTags);\n\nexports.AllTags = AllTags;\nvar TagsFactory;\n\n(function (TagsFactory) {\n  var tagsMapping = new Map([['none', NoTags], ['all', AllTags]]);\n  var defaultTags = 'none';\n  TagsFactory.OPTIONS = {\n    tags: defaultTags,\n    tagSide: 'right',\n    tagIndent: '0.8em',\n    multlineWidth: '85%',\n    useLabelIds: true,\n    ignoreDuplicateLabels: false\n  };\n\n  TagsFactory.add = function (name, constr) {\n    tagsMapping.set(name, constr);\n  };\n\n  TagsFactory.addTags = function (tags) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(Object.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var key = _c.value;\n        TagsFactory.add(key, tags[key]);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  TagsFactory.create = function (name) {\n    var constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);\n\n    if (!constr) {\n      throw Error('Unknown tags class');\n    }\n\n    return new constr();\n  };\n\n  TagsFactory.setDefault = function (name) {\n    defaultTags = name;\n  };\n\n  TagsFactory.getDefault = function () {\n    return TagsFactory.create(defaultTags);\n  };\n})(TagsFactory = exports.TagsFactory || (exports.TagsFactory = {}));","map":{"version":3,"sources":["../../../ts/input/tex/Tags.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagsFactory = exports.AllTags = exports.NoTags = exports.AbstractTags = exports.TagInfo = exports.Label = void 0;\nvar TexParser_js_1 = require(\"./TexParser.js\");\nvar Label = (function () {\n    function Label(tag, id) {\n        if (tag === void 0) { tag = '???'; }\n        if (id === void 0) { id = ''; }\n        this.tag = tag;\n        this.id = id;\n    }\n    return Label;\n}());\nexports.Label = Label;\nvar TagInfo = (function () {\n    function TagInfo(env, taggable, defaultTags, tag, tagId, tagFormat, noTag, labelId) {\n        if (env === void 0) { env = ''; }\n        if (taggable === void 0) { taggable = false; }\n        if (defaultTags === void 0) { defaultTags = false; }\n        if (tag === void 0) { tag = null; }\n        if (tagId === void 0) { tagId = ''; }\n        if (tagFormat === void 0) { tagFormat = ''; }\n        if (noTag === void 0) { noTag = false; }\n        if (labelId === void 0) { labelId = ''; }\n        this.env = env;\n        this.taggable = taggable;\n        this.defaultTags = defaultTags;\n        this.tag = tag;\n        this.tagId = tagId;\n        this.tagFormat = tagFormat;\n        this.noTag = noTag;\n        this.labelId = labelId;\n    }\n    return TagInfo;\n}());\nexports.TagInfo = TagInfo;\nvar AbstractTags = (function () {\n    function AbstractTags() {\n        this.counter = 0;\n        this.allCounter = 0;\n        this.configuration = null;\n        this.ids = {};\n        this.allIds = {};\n        this.labels = {};\n        this.allLabels = {};\n        this.redo = false;\n        this.refUpdate = false;\n        this.currentTag = new TagInfo();\n        this.history = [];\n        this.stack = [];\n        this.enTag = function (node, tag) {\n            var nf = this.configuration.nodeFactory;\n            var cell = nf.create('node', 'mtd', [node]);\n            var row = nf.create('node', 'mlabeledtr', [tag, cell]);\n            var table = nf.create('node', 'mtable', [row], {\n                side: this.configuration.options['tagSide'],\n                minlabelspacing: this.configuration.options['tagIndent'],\n                displaystyle: true\n            });\n            return table;\n        };\n    }\n    AbstractTags.prototype.start = function (env, taggable, defaultTags) {\n        if (this.currentTag) {\n            this.stack.push(this.currentTag);\n        }\n        this.currentTag = new TagInfo(env, taggable, defaultTags);\n    };\n    Object.defineProperty(AbstractTags.prototype, \"env\", {\n        get: function () {\n            return this.currentTag.env;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractTags.prototype.end = function () {\n        this.history.push(this.currentTag);\n        this.currentTag = this.stack.pop();\n    };\n    AbstractTags.prototype.tag = function (tag, noFormat) {\n        this.currentTag.tag = tag;\n        this.currentTag.tagFormat = noFormat ? tag : this.formatTag(tag);\n        this.currentTag.noTag = false;\n    };\n    AbstractTags.prototype.notag = function () {\n        this.tag('', true);\n        this.currentTag.noTag = true;\n    };\n    Object.defineProperty(AbstractTags.prototype, \"noTag\", {\n        get: function () {\n            return this.currentTag.noTag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AbstractTags.prototype, \"label\", {\n        get: function () {\n            return this.currentTag.labelId;\n        },\n        set: function (label) {\n            this.currentTag.labelId = label;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AbstractTags.prototype.formatUrl = function (id, base) {\n        return base + '#' + encodeURIComponent(id);\n    };\n    AbstractTags.prototype.formatTag = function (tag) {\n        return '(' + tag + ')';\n    };\n    AbstractTags.prototype.formatId = function (id) {\n        return 'mjx-eqn-' + id.replace(/\\s/g, '_');\n    };\n    AbstractTags.prototype.formatNumber = function (n) {\n        return n.toString();\n    };\n    AbstractTags.prototype.autoTag = function () {\n        if (this.currentTag.tag == null) {\n            this.counter++;\n            this.tag(this.formatNumber(this.counter), false);\n        }\n    };\n    AbstractTags.prototype.clearTag = function () {\n        this.label = '';\n        this.tag(null, true);\n        this.currentTag.tagId = '';\n    };\n    AbstractTags.prototype.getTag = function (force) {\n        if (force === void 0) { force = false; }\n        if (force) {\n            this.autoTag();\n            return this.makeTag();\n        }\n        var ct = this.currentTag;\n        if (ct.taggable && !ct.noTag) {\n            if (ct.defaultTags) {\n                this.autoTag();\n            }\n            if (ct.tag) {\n                return this.makeTag();\n            }\n        }\n        return null;\n    };\n    AbstractTags.prototype.resetTag = function () {\n        this.history = [];\n        this.redo = false;\n        this.refUpdate = false;\n        this.clearTag();\n    };\n    AbstractTags.prototype.reset = function (offset) {\n        if (offset === void 0) { offset = 0; }\n        this.resetTag();\n        this.counter = this.allCounter = offset;\n        this.allLabels = {};\n        this.allIds = {};\n    };\n    AbstractTags.prototype.startEquation = function (math) {\n        this.labels = {};\n        this.ids = {};\n        this.counter = this.allCounter;\n        this.redo = false;\n        var recompile = math.inputData.recompile;\n        if (recompile) {\n            this.refUpdate = true;\n            this.counter = recompile.counter;\n        }\n    };\n    AbstractTags.prototype.finishEquation = function (math) {\n        if (this.redo) {\n            math.inputData.recompile = {\n                state: math.state(),\n                counter: this.allCounter\n            };\n        }\n        if (!this.refUpdate) {\n            this.allCounter = this.counter;\n        }\n        Object.assign(this.allIds, this.ids);\n        Object.assign(this.allLabels, this.labels);\n    };\n    AbstractTags.prototype.finalize = function (node, env) {\n        if (!env.display || this.currentTag.env ||\n            this.currentTag.tag == null) {\n            return node;\n        }\n        var tag = this.makeTag();\n        var table = this.enTag(node, tag);\n        return table;\n    };\n    AbstractTags.prototype.makeId = function () {\n        this.currentTag.tagId = this.formatId(this.configuration.options['useLabelIds'] ?\n            (this.label || this.currentTag.tag) : this.currentTag.tag);\n    };\n    AbstractTags.prototype.makeTag = function () {\n        this.makeId();\n        if (this.label) {\n            this.labels[this.label] = new Label(this.currentTag.tag, this.currentTag.tagId);\n        }\n        var mml = new TexParser_js_1.default('\\\\text{' + this.currentTag.tagFormat + '}', {}, this.configuration).mml();\n        return this.configuration.nodeFactory.create('node', 'mtd', [mml], { id: this.currentTag.tagId });\n    };\n    return AbstractTags;\n}());\nexports.AbstractTags = AbstractTags;\nvar NoTags = (function (_super) {\n    __extends(NoTags, _super);\n    function NoTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NoTags.prototype.autoTag = function () { };\n    NoTags.prototype.getTag = function () {\n        return !this.currentTag.tag ? null : _super.prototype.getTag.call(this);\n    };\n    return NoTags;\n}(AbstractTags));\nexports.NoTags = NoTags;\nvar AllTags = (function (_super) {\n    __extends(AllTags, _super);\n    function AllTags() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AllTags.prototype.finalize = function (node, env) {\n        if (!env.display || this.history.find(function (x) { return x.taggable; })) {\n            return node;\n        }\n        var tag = this.getTag(true);\n        return this.enTag(node, tag);\n    };\n    return AllTags;\n}(AbstractTags));\nexports.AllTags = AllTags;\nvar TagsFactory;\n(function (TagsFactory) {\n    var tagsMapping = new Map([\n        ['none', NoTags],\n        ['all', AllTags]\n    ]);\n    var defaultTags = 'none';\n    TagsFactory.OPTIONS = {\n        tags: defaultTags,\n        tagSide: 'right',\n        tagIndent: '0.8em',\n        multlineWidth: '85%',\n        useLabelIds: true,\n        ignoreDuplicateLabels: false\n    };\n    TagsFactory.add = function (name, constr) {\n        tagsMapping.set(name, constr);\n    };\n    TagsFactory.addTags = function (tags) {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(tags)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var key = _c.value;\n                TagsFactory.add(key, tags[key]);\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    TagsFactory.create = function (name) {\n        var constr = tagsMapping.get(name) || tagsMapping.get(defaultTags);\n        if (!constr) {\n            throw Error('Unknown tags class');\n        }\n        return new constr();\n    };\n    TagsFactory.setDefault = function (name) {\n        defaultTags = name;\n    };\n    TagsFactory.getDefault = function () {\n        return TagsFactory.create(defaultTags);\n    };\n})(TagsFactory = exports.TagsFactory || (exports.TagsFactory = {}));\n//# sourceMappingURL=Tags.js.map"]},"metadata":{},"sourceType":"script"}