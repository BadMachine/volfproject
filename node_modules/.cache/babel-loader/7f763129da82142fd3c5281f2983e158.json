{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BubbleChart.tsx\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { chartjsDataTemplate } from '../interfaces/SortInterfaces';\nimport { sortingStore } from './ModalContent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BubbleChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = void 0;\n    this.chart = void 0;\n    this.timer = void 0;\n    this.isSorting = void 0;\n    this.interrupt = void 0;\n    this.uselessRefresh = void 0;\n    this.state = void 0;\n    this.props = void 0;\n    this.timeouts = void 0;\n    this.date = void 0;\n\n    this.equals = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\n    this.state = chartjsDataTemplate;\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.timer = 0;\n    this.isSorting = false;\n    this.interrupt = false;\n    this.date = 0;\n    this.uselessRefresh = false;\n    this.timeouts = [];\n  } // randomize(size: number){\n  // \tthis.chart.data.labels = Array.from({length: size}, () => Math.floor(Math.random() * 1000));\n  // \tthis.chart.data.datasets[0].data = Array.from({ length: size }, (_, i) => (i+1).toString());\n  // }\n\n\n  bubbleSort() {\n    const labels = this.chart.data.labels;\n    const data = this.chart.data.datasets[0].data;\n    const colors = this.chart.data.datasets[0].backgroundColor;\n    let swapped;\n    let timeout = 0;\n\n    do {\n      swapped = false;\n\n      for (let i = 0; i < data.length; i++) {\n        if (data[i] > data[i + 1]) {\n          this.swap(labels, i);\n          this.swap(data, i);\n          this.swap(colors, i);\n          timeout += 100;\n          const theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\n          this.timeouts.push(theTimeout);\n          swapped = true;\n        }\n      }\n    } while (swapped);\n  }\n\n  swap(arr, i) {\n    const tmp = arr[i];\n    arr[i] = arr[i + 1];\n    arr[i + 1] = tmp;\n  }\n\n  componentDidMount() {\n    this.chart = this.chartReference.current.chartInstance; // const tempChartJSObject = chartjsDataTemplate;\n    // tempChartJSObject.datasets[0].label = this.props.commands.name;\n    //this.setState(tempChartJSObject);\n  }\n\n  updateChartDelayed(labels, data, colors, timeout) {\n    this.timer = setTimeout(() => {\n      const now = new Date().getTime();\n      const timeDifference = now - this.date;\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n      const mils = Math.floor(timeDifference % (1000 * 60) / 1);\n      this.isSorting = true;\n      this.chart.data.datasets[0].label = `${seconds}s ${mils.toString().substr(-3)}ms`;\n      this.chart.data.labels = labels;\n      this.chart.data.datasets[0].data = data;\n      this.chart.data.datasets[0].backgroundColor = colors;\n      this.chart.update();\n      const eth = [...this.chart.data.datasets[0].data].sort((x, y) => x - y);\n\n      if (eth.toString() === this.chart.data.datasets[0].data.toString()) {\n        sortingStore.dispatch({\n          type: ''\n        });\n        this.props.callback();\n      }\n    }, timeout);\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer); //this.chart.destroy();\n    //sortingStore.dispatch({type:''});\n  }\n\n  clearAllTimeouts() {\n    for (const timeout in this.timeouts) {\n      clearInterval(this.timeouts[timeout]);\n    }\n\n    this.timeouts = [];\n  }\n\n  refreshChart() {\n    const temporaryDataToSort = chartjsDataTemplate;\n    temporaryDataToSort.datasets[0].data = Array.from({\n      length: this.props.commands.arrayLength\n    }, () => Math.floor(Math.random() * 1000));\n    temporaryDataToSort.labels = Array.from({\n      length: this.props.commands.arrayLength\n    }, (_, i) => (i + 1).toString());\n    this.setState(temporaryDataToSort);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.date = new Date(Date.now()).getTime();\n      this.clearAllTimeouts();\n\n      if (this.props.commands.StopSort) {\n        console.log('ОТМЕНЯЕМ!!!');\n        this.clearAllTimeouts();\n      } else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      } else if (this.props.commands.name !== prevProps.commands.name) {\n        this.bubbleSort();\n      } else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      } else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        width: 100,\n        height: 50,\n        options: {\n          legend: {\n            display: true,\n            position: 'top',\n            boxWidth: 0\n          }\n        },\n        ref: this.chartReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BubbleChart.tsx"],"names":["React","Component","Bar","chartjsDataTemplate","sortingStore","BubbleChart","constructor","props","chartReference","chart","timer","isSorting","interrupt","uselessRefresh","state","timeouts","date","equals","a","b","JSON","stringify","createRef","bubbleSort","labels","data","datasets","colors","backgroundColor","swapped","timeout","i","length","swap","theTimeout","updateChartDelayed","slice","push","arr","tmp","componentDidMount","current","chartInstance","setTimeout","now","Date","getTime","timeDifference","seconds","Math","floor","mils","label","toString","substr","update","eth","sort","x","y","dispatch","type","callback","componentWillUnmount","clearInterval","clearAllTimeouts","refreshChart","temporaryDataToSort","Array","from","commands","arrayLength","random","_","setState","componentDidUpdate","prevProps","StopSort","console","log","name","render","legend","display","position","boxWidth"],"mappings":"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","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {BubbleCommandsInterface, chartjsDataType, chartjsDataTemplate, initialBubbleCommandsState} from '../interfaces/SortInterfaces';\r\nimport {sortingStore} from './ModalContent';\r\nimport {bubbleSort, bubbleSortCanceled} from '../redux/SortingStateReducer';\r\n\r\ntype callback=()=>void;\r\n\r\nexport default class BubbleChart extends Component<BubbleCommandsInterface>{\r\n\tprivate chartReference: React.RefObject<any>;\r\n\tprivate chart: any;\r\n\tprivate timer: any;\r\n\tprivate isSorting: boolean;\r\n\tprivate interrupt: boolean;\r\n\tprivate uselessRefresh: boolean;\r\n\tpublic state;\r\n\tpublic props: any;\r\n\tprivate timeouts:number[];\r\n\tprivate date: number;\r\n\r\n\tconstructor(props: BubbleCommandsInterface) {\r\n\t\tsuper(props);\r\n\t\tthis.state = chartjsDataTemplate;\r\n\r\n\t\tthis.chartReference = React.createRef<any>();\r\n\r\n\t\tthis.timer = 0;\r\n\r\n\t\tthis.isSorting = false;\r\n\r\n\t\tthis.interrupt = false;\r\n\r\n\t\tthis.date =0;\r\n\r\n\r\n\t\tthis.uselessRefresh = false;\r\n\t\tthis.timeouts = [];\r\n\r\n\t}\r\n\r\n\t// randomize(size: number){\r\n\t// \tthis.chart.data.labels = Array.from({length: size}, () => Math.floor(Math.random() * 1000));\r\n\t// \tthis.chart.data.datasets[0].data = Array.from({ length: size }, (_, i) => (i+1).toString());\r\n\t// }\r\n\r\n\tbubbleSort() {\r\n\t\tconst labels = this.chart.data.labels;\r\n\t\tconst data = this.chart.data.datasets[0].data;\r\n\t\tconst colors = this.chart.data.datasets[0].backgroundColor;\r\n\t\tlet swapped;\r\n\t\tlet timeout = 0;\r\n\r\n\t\tdo {\r\n\t\t\tswapped = false;\r\n\t\t\tfor (let i = 0; i < data.length; i++) {\r\n\t\t\t\tif (data[i] > data[i + 1]) {\r\n\t\t\t\t\tthis.swap(labels, i);\r\n\t\t\t\t\tthis.swap(data, i);\r\n\t\t\t\t\tthis.swap(colors, i);\r\n\t\t\t\t\ttimeout += 100;\r\n\t\t\t\t\tconst theTimeout = this.updateChartDelayed(labels.slice(0), data.slice(0), colors.slice(0), timeout);\r\n\t\t\t\t\tthis.timeouts.push(theTimeout);\r\n\t\t\t\t\tswapped = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} while (swapped);\r\n\r\n\t}\r\n\r\n\tswap(arr:any, i:any) {\r\n\t\tconst tmp = arr[i];\r\n\t\tarr[i] = arr[i + 1];\r\n\t\tarr[i + 1] = tmp;\r\n\t}\r\n\r\n\tequals = (a:number[], b:number[]) => JSON.stringify(a) === JSON.stringify(b);\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tthis.chart = this.chartReference.current.chartInstance;\r\n\t\t// const tempChartJSObject = chartjsDataTemplate;\r\n\t\t// tempChartJSObject.datasets[0].label = this.props.commands.name;\r\n\t\t//this.setState(tempChartJSObject);\r\n\t}\r\n\r\n\r\n\tupdateChartDelayed(labels: string[], data:number[], colors:string[], timeout:number) {\r\n\r\n\r\n\r\n\t\tthis.timer = setTimeout(() => {\r\n\r\n\t\t\tconst now = new Date().getTime();\r\n\r\n\t\t\tconst timeDifference  = now - this.date;\r\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\t\t\tconst mils = Math.floor((timeDifference % (1000 * 60)) / 1);\r\n\r\n\t\t\tthis.isSorting = true;\r\n\t\t\tthis.chart.data.datasets[0].label =  `${seconds}s ${mils.toString().substr(-3)}ms`  ;\r\n\t\t\tthis.chart.data.labels = labels;\r\n\t\t\tthis.chart.data.datasets[0].data = data;\r\n\t\t\tthis.chart.data.datasets[0].backgroundColor = colors;\r\n\t\t\tthis.chart.update();\r\n\r\n\t\t\tconst eth = [...this.chart.data.datasets[0].data].sort((x,y)=> x-y);\r\n\t\t\tif( eth.toString() === this.chart.data.datasets[0].data.toString()) {\r\n\t\t\t\tsortingStore.dispatch({type:''});\r\n\t\t\t\tthis.props.callback();\r\n\t\t\t}\r\n\r\n\r\n\t\t}, timeout);\r\n\r\n\r\n\r\n\t\treturn this.timer;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\t\t//this.chart.destroy();\r\n\t\t//sortingStore.dispatch({type:''});\r\n\t}\r\n\r\n\r\n\tclearAllTimeouts(){\r\n\t\tfor(const timeout in this.timeouts){\r\n\t\t\tclearInterval(this.timeouts[timeout]);\r\n\t\t}\r\n\t\tthis.timeouts=[];\r\n\t}\r\n\r\n\trefreshChart(){\r\n\t\tconst temporaryDataToSort = chartjsDataTemplate;\r\n\t\ttemporaryDataToSort.datasets[0].data = Array.from({length: this.props.commands.arrayLength}, () => Math.floor(Math.random() * 1000));\r\n\t\ttemporaryDataToSort.labels = Array.from({ length: this.props.commands.arrayLength }, (_, i) => (i+1).toString());\r\n\t\tthis.setState(temporaryDataToSort);\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps:BubbleCommandsInterface) {\r\n\r\n\t\tif(prevProps!==this.props){\r\n\r\n\t\t\tthis.date = new Date(Date.now()).getTime();\r\n\r\n\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\tif(this.props.commands.StopSort) {\r\n\t\t\t\tconsole.log('ОТМЕНЯЕМ!!!');\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\t}else if(this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength!==prevProps.commands.arrayLength){\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(()=>{this.bubbleSort();}, 800);\r\n\t\t\t}else if(this.props.commands.name !== prevProps.commands.name){\r\n\r\n\t\t\t\tthis.bubbleSort();\r\n\t\t\t}else if (this.props.commands.arrayLength!==prevProps.commands.arrayLength){\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(()=>{this.bubbleSort();}, 800);\r\n\r\n\t\t\t}else if(this.props.commands.arrayLength===prevProps.commands.arrayLength ){\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(()=>{this.bubbleSort();}, 800);\r\n\t\t\t}\r\n\r\n\r\n\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div><Bar data={this.state} width={100} height={50} options={{\r\n\t\t\t\tlegend: {\r\n\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\tboxWidth: 0\r\n\t\t\t\t},\r\n\r\n\t\t\t}} ref={this.chartReference}/> </div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}