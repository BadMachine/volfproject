{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LinkedList = exports.ListItem = exports.END = void 0;\nexports.END = Symbol();\n\nvar ListItem = function () {\n  function ListItem(data) {\n    if (data === void 0) {\n      data = null;\n    }\n\n    this.next = null;\n    this.prev = null;\n    this.data = data;\n  }\n\n  return ListItem;\n}();\n\nexports.ListItem = ListItem;\n\nvar LinkedList = function () {\n  function LinkedList() {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    this.list = new ListItem(exports.END);\n    this.list.next = this.list.prev = this.list;\n    this.push.apply(this, __spread(args));\n  }\n\n  LinkedList.prototype.toArray = function () {\n    return Array.from(this);\n  };\n\n  LinkedList.prototype.isBefore = function (a, b) {\n    return a < b;\n  };\n\n  LinkedList.prototype.push = function () {\n    var e_1, _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    try {\n      for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n        var data = args_1_1.value;\n        var item = new ListItem(data);\n        item.next = this.list;\n        item.prev = this.list.prev;\n        this.list.prev = item;\n        item.prev.next = item;\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return this;\n  };\n\n  LinkedList.prototype.pop = function () {\n    var item = this.list.prev;\n\n    if (item.data === exports.END) {\n      return null;\n    }\n\n    this.list.prev = item.prev;\n    item.prev.next = this.list;\n    item.next = item.prev = null;\n    return item.data;\n  };\n\n  LinkedList.prototype.unshift = function () {\n    var e_2, _a;\n\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    try {\n      for (var _b = __values(args.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var data = _c.value;\n        var item = new ListItem(data);\n        item.next = this.list.next;\n        item.prev = this.list;\n        this.list.next = item;\n        item.next.prev = item;\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return this;\n  };\n\n  LinkedList.prototype.shift = function () {\n    var item = this.list.next;\n\n    if (item.data === exports.END) {\n      return null;\n    }\n\n    this.list.next = item.next;\n    item.next.prev = this.list;\n    item.next = item.prev = null;\n    return item.data;\n  };\n\n  LinkedList.prototype.remove = function () {\n    var e_3, _a;\n\n    var items = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      items[_i] = arguments[_i];\n    }\n\n    var map = new Map();\n\n    try {\n      for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n        var item_1 = items_1_1.value;\n        map.set(item_1, true);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    var item = this.list.next;\n\n    while (item.data !== exports.END) {\n      var next = item.next;\n\n      if (map.has(item.data)) {\n        item.prev.next = item.next;\n        item.next.prev = item.prev;\n        item.next = item.prev = null;\n      }\n\n      item = next;\n    }\n  };\n\n  LinkedList.prototype.clear = function () {\n    this.list.next.prev = this.list.prev.next = null;\n    this.list.next = this.list.prev = this.list;\n    return this;\n  };\n\n  LinkedList.prototype[Symbol.iterator] = function () {\n    var current = this.list;\n    return {\n      next: function () {\n        current = current.next;\n        return current.data === exports.END ? {\n          value: null,\n          done: true\n        } : {\n          value: current.data,\n          done: false\n        };\n      }\n    };\n  };\n\n  LinkedList.prototype.reversed = function () {\n    var _a;\n\n    var current = this.list;\n    return _a = {}, _a[Symbol.iterator] = function () {\n      return this;\n    }, _a.next = function () {\n      current = current.prev;\n      return current.data === exports.END ? {\n        value: null,\n        done: true\n      } : {\n        value: current.data,\n        done: false\n      };\n    }, _a.toArray = function () {\n      return Array.from(this);\n    }, _a;\n  };\n\n  LinkedList.prototype.insert = function (data, isBefore) {\n    if (isBefore === void 0) {\n      isBefore = null;\n    }\n\n    if (isBefore === null) {\n      isBefore = this.isBefore.bind(this);\n    }\n\n    var item = new ListItem(data);\n    var cur = this.list.next;\n\n    while (cur.data !== exports.END && isBefore(cur.data, item.data)) {\n      cur = cur.next;\n    }\n\n    item.prev = cur.prev;\n    item.next = cur;\n    cur.prev.next = cur.prev = item;\n    return this;\n  };\n\n  LinkedList.prototype.sort = function (isBefore) {\n    var e_4, _a;\n\n    if (isBefore === void 0) {\n      isBefore = null;\n    }\n\n    if (isBefore === null) {\n      isBefore = this.isBefore.bind(this);\n    }\n\n    var lists = [];\n\n    try {\n      for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var item = _c.value;\n        lists.push(new LinkedList(item));\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    this.list.next = this.list.prev = this.list;\n\n    while (lists.length > 1) {\n      var l1 = lists.shift();\n      var l2 = lists.shift();\n      l1.merge(l2, isBefore);\n      lists.push(l1);\n    }\n\n    if (lists.length) {\n      this.list = lists[0].list;\n    }\n\n    return this;\n  };\n\n  LinkedList.prototype.merge = function (list, isBefore) {\n    var _a, _b, _c, _d, _e;\n\n    if (isBefore === void 0) {\n      isBefore = null;\n    }\n\n    if (isBefore === null) {\n      isBefore = this.isBefore.bind(this);\n    }\n\n    var lcur = this.list.next;\n    var mcur = list.list.next;\n\n    while (lcur.data !== exports.END && mcur.data !== exports.END) {\n      if (isBefore(mcur.data, lcur.data)) {\n        _a = __read([lcur, mcur], 2), mcur.prev.next = _a[0], lcur.prev.next = _a[1];\n        _b = __read([lcur.prev, mcur.prev], 2), mcur.prev = _b[0], lcur.prev = _b[1];\n        _c = __read([list.list, this.list], 2), this.list.prev.next = _c[0], list.list.prev.next = _c[1];\n        _d = __read([list.list.prev, this.list.prev], 2), this.list.prev = _d[0], list.list.prev = _d[1];\n        _e = __read([mcur.next, lcur], 2), lcur = _e[0], mcur = _e[1];\n      } else {\n        lcur = lcur.next;\n      }\n    }\n\n    if (mcur.data !== exports.END) {\n      this.list.prev.next = list.list.next;\n      list.list.next.prev = this.list.prev;\n      list.list.prev.next = this.list;\n      this.list.prev = list.list.prev;\n      list.list.next = list.list.prev = list.list;\n    }\n\n    return this;\n  };\n\n  return LinkedList;\n}();\n\nexports.LinkedList = LinkedList;","map":{"version":3,"sources":["../../ts/util/LinkedList.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LinkedList = exports.ListItem = exports.END = void 0;\nexports.END = Symbol();\nvar ListItem = (function () {\n    function ListItem(data) {\n        if (data === void 0) { data = null; }\n        this.next = null;\n        this.prev = null;\n        this.data = data;\n    }\n    return ListItem;\n}());\nexports.ListItem = ListItem;\nvar LinkedList = (function () {\n    function LinkedList() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        this.list = new ListItem(exports.END);\n        this.list.next = this.list.prev = this.list;\n        this.push.apply(this, __spread(args));\n    }\n    LinkedList.prototype.toArray = function () {\n        return Array.from(this);\n    };\n    LinkedList.prototype.isBefore = function (a, b) {\n        return a < b;\n    };\n    LinkedList.prototype.push = function () {\n        var e_1, _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        try {\n            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {\n                var data = args_1_1.value;\n                var item = new ListItem(data);\n                item.next = this.list;\n                item.prev = this.list.prev;\n                this.list.prev = item;\n                item.prev.next = item;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return this;\n    };\n    LinkedList.prototype.pop = function () {\n        var item = this.list.prev;\n        if (item.data === exports.END) {\n            return null;\n        }\n        this.list.prev = item.prev;\n        item.prev.next = this.list;\n        item.next = item.prev = null;\n        return item.data;\n    };\n    LinkedList.prototype.unshift = function () {\n        var e_2, _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        try {\n            for (var _b = __values(args.slice(0).reverse()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var data = _c.value;\n                var item = new ListItem(data);\n                item.next = this.list.next;\n                item.prev = this.list;\n                this.list.next = item;\n                item.next.prev = item;\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        return this;\n    };\n    LinkedList.prototype.shift = function () {\n        var item = this.list.next;\n        if (item.data === exports.END) {\n            return null;\n        }\n        this.list.next = item.next;\n        item.next.prev = this.list;\n        item.next = item.prev = null;\n        return item.data;\n    };\n    LinkedList.prototype.remove = function () {\n        var e_3, _a;\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var map = new Map();\n        try {\n            for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n                var item_1 = items_1_1.value;\n                map.set(item_1, true);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        var item = this.list.next;\n        while (item.data !== exports.END) {\n            var next = item.next;\n            if (map.has(item.data)) {\n                item.prev.next = item.next;\n                item.next.prev = item.prev;\n                item.next = item.prev = null;\n            }\n            item = next;\n        }\n    };\n    LinkedList.prototype.clear = function () {\n        this.list.next.prev = this.list.prev.next = null;\n        this.list.next = this.list.prev = this.list;\n        return this;\n    };\n    LinkedList.prototype[Symbol.iterator] = function () {\n        var current = this.list;\n        return {\n            next: function () {\n                current = current.next;\n                return (current.data === exports.END ?\n                    { value: null, done: true } :\n                    { value: current.data, done: false });\n            }\n        };\n    };\n    LinkedList.prototype.reversed = function () {\n        var _a;\n        var current = this.list;\n        return _a = {},\n            _a[Symbol.iterator] = function () {\n                return this;\n            },\n            _a.next = function () {\n                current = current.prev;\n                return (current.data === exports.END ?\n                    { value: null, done: true } :\n                    { value: current.data, done: false });\n            },\n            _a.toArray = function () {\n                return Array.from(this);\n            },\n            _a;\n    };\n    LinkedList.prototype.insert = function (data, isBefore) {\n        if (isBefore === void 0) { isBefore = null; }\n        if (isBefore === null) {\n            isBefore = this.isBefore.bind(this);\n        }\n        var item = new ListItem(data);\n        var cur = this.list.next;\n        while (cur.data !== exports.END && isBefore(cur.data, item.data)) {\n            cur = cur.next;\n        }\n        item.prev = cur.prev;\n        item.next = cur;\n        cur.prev.next = cur.prev = item;\n        return this;\n    };\n    LinkedList.prototype.sort = function (isBefore) {\n        var e_4, _a;\n        if (isBefore === void 0) { isBefore = null; }\n        if (isBefore === null) {\n            isBefore = this.isBefore.bind(this);\n        }\n        var lists = [];\n        try {\n            for (var _b = __values(this), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var item = _c.value;\n                lists.push(new LinkedList(item));\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        this.list.next = this.list.prev = this.list;\n        while (lists.length > 1) {\n            var l1 = lists.shift();\n            var l2 = lists.shift();\n            l1.merge(l2, isBefore);\n            lists.push(l1);\n        }\n        if (lists.length) {\n            this.list = lists[0].list;\n        }\n        return this;\n    };\n    LinkedList.prototype.merge = function (list, isBefore) {\n        var _a, _b, _c, _d, _e;\n        if (isBefore === void 0) { isBefore = null; }\n        if (isBefore === null) {\n            isBefore = this.isBefore.bind(this);\n        }\n        var lcur = this.list.next;\n        var mcur = list.list.next;\n        while (lcur.data !== exports.END && mcur.data !== exports.END) {\n            if (isBefore(mcur.data, lcur.data)) {\n                _a = __read([lcur, mcur], 2), mcur.prev.next = _a[0], lcur.prev.next = _a[1];\n                _b = __read([lcur.prev, mcur.prev], 2), mcur.prev = _b[0], lcur.prev = _b[1];\n                _c = __read([list.list, this.list], 2), this.list.prev.next = _c[0], list.list.prev.next = _c[1];\n                _d = __read([list.list.prev, this.list.prev], 2), this.list.prev = _d[0], list.list.prev = _d[1];\n                _e = __read([mcur.next, lcur], 2), lcur = _e[0], mcur = _e[1];\n            }\n            else {\n                lcur = lcur.next;\n            }\n        }\n        if (mcur.data !== exports.END) {\n            this.list.prev.next = list.list.next;\n            list.list.next.prev = this.list.prev;\n            list.list.prev.next = this.list;\n            this.list.prev = list.list.prev;\n            list.list.next = list.list.prev = list.list;\n        }\n        return this;\n    };\n    return LinkedList;\n}());\nexports.LinkedList = LinkedList;\n//# sourceMappingURL=LinkedList.js.map"]},"metadata":{},"sourceType":"script"}