{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonScriptbaseMixin = void 0;\nvar DELTA = 1.5;\n\nfunction CommonScriptbaseMixin(Base) {\n  var _a;\n\n  return _a = function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      var _this = _super.apply(this, __spread(args)) || this;\n\n      var core = _this.baseCore = _this.childNodes[0];\n      if (!core) return _this;\n\n      while (core.childNodes.length === 1 && (core.node.isKind('mrow') || core.node.isKind('TeXAtom') || core.node.isKind('mstyle') || core.node.isKind('mpadded') || core.node.isKind('mphantom') || core.node.isKind('semantics'))) {\n        core = core.childNodes[0];\n        if (!core) return _this;\n      }\n\n      if (!('noIC' in core)) return _this;\n      _this.baseCore = core;\n\n      if (!_this.constructor.useIC) {\n        core.noIC = true;\n      }\n\n      return _this;\n    }\n\n    Object.defineProperty(class_1.prototype, \"baseChild\", {\n      get: function () {\n        return this.childNodes[this.node.base];\n      },\n      enumerable: false,\n      configurable: true\n    });\n    Object.defineProperty(class_1.prototype, \"script\", {\n      get: function () {\n        return this.childNodes[1];\n      },\n      enumerable: false,\n      configurable: true\n    });\n\n    class_1.prototype.computeBBox = function (bbox, recompute) {\n      if (recompute === void 0) {\n        recompute = false;\n      }\n\n      var basebox = this.baseChild.getBBox();\n      var scriptbox = this.script.getBBox();\n\n      var _a = __read(this.getOffset(basebox, scriptbox), 2),\n          x = _a[0],\n          y = _a[1];\n\n      bbox.append(basebox);\n      bbox.combine(scriptbox, bbox.w + x, y);\n      bbox.w += this.font.params.scriptspace;\n      bbox.clean();\n      this.setChildPWidths(recompute);\n    };\n\n    class_1.prototype.coreIC = function () {\n      var corebox = this.baseCore.getBBox();\n      return corebox.ic ? 1.05 * corebox.ic + .05 : 0;\n    };\n\n    class_1.prototype.coreScale = function () {\n      var scale = this.baseChild.getBBox().rscale;\n      var base = this.baseChild;\n\n      while ((base.node.isKind('mstyle') || base.node.isKind('mrow') || base.node.isKind('TeXAtom')) && base.childNodes.length === 1) {\n        base = base.childNodes[0];\n        scale *= base.getBBox().rscale;\n      }\n\n      return scale;\n    };\n\n    class_1.prototype.isCharBase = function () {\n      var base = this.baseChild;\n\n      while ((base.node.isKind('mstyle') || base.node.isKind('mrow')) && base.childNodes.length === 1) {\n        base = base.childNodes[0];\n      }\n\n      return (base.node.isKind('mo') || base.node.isKind('mi') || base.node.isKind('mn')) && base.bbox.rscale === 1 && Array.from(base.getText()).length === 1 && !base.node.attributes.get('largeop');\n    };\n\n    class_1.prototype.getOffset = function (_bbox, _sbox) {\n      return [0, 0];\n    };\n\n    class_1.prototype.getV = function (bbox, sbox) {\n      var tex = this.font.params;\n      var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub1);\n      return Math.max(this.isCharBase() ? 0 : bbox.d * bbox.rscale + tex.sub_drop * sbox.rscale, subscriptshift, sbox.h * sbox.rscale - 4 / 5 * tex.x_height);\n    };\n\n    class_1.prototype.getU = function (bbox, sbox) {\n      var tex = this.font.params;\n      var attr = this.node.attributes.getList('displaystyle', 'superscriptshift');\n      var prime = this.node.getProperty('texprimestyle');\n      var p = prime ? tex.sup3 : attr.displaystyle ? tex.sup1 : tex.sup2;\n      var superscriptshift = this.length2em(attr.superscriptshift, p);\n      return Math.max(this.isCharBase() ? 0 : bbox.h * bbox.rscale - tex.sup_drop * sbox.rscale, superscriptshift, sbox.d * sbox.rscale + 1 / 4 * tex.x_height);\n    };\n\n    class_1.prototype.hasMovableLimits = function () {\n      var display = this.node.attributes.get('displaystyle');\n      var mo = this.baseChild.coreMO().node;\n      return !display && !!mo.attributes.get('movablelimits');\n    };\n\n    class_1.prototype.getOverKU = function (basebox, overbox) {\n      var accent = this.node.attributes.get('accent');\n      var tex = this.font.params;\n      var d = overbox.d * overbox.rscale;\n      var k = (accent ? tex.rule_thickness : Math.max(tex.big_op_spacing1, tex.big_op_spacing3 - Math.max(0, d))) - (this.baseChild.node.isKind('munderover') ? .1 : 0);\n      return [k, basebox.h * basebox.rscale + k + d];\n    };\n\n    class_1.prototype.getUnderKV = function (basebox, underbox) {\n      var accent = this.node.attributes.get('accentunder');\n      var tex = this.font.params;\n      var h = underbox.h * underbox.rscale;\n      var k = (accent ? tex.rule_thickness : Math.max(tex.big_op_spacing2, tex.big_op_spacing4 - h)) - (this.baseChild.node.isKind('munderover') ? .1 : 0);\n      return [k, -(basebox.d * basebox.rscale + k + h)];\n    };\n\n    class_1.prototype.getDeltaW = function (boxes, delta) {\n      var e_1, _a, e_2, _b;\n\n      if (delta === void 0) {\n        delta = [0, 0, 0];\n      }\n\n      var align = this.node.attributes.get('align');\n      var widths = boxes.map(function (box) {\n        return box.w * box.rscale;\n      });\n      var w = Math.max.apply(Math, __spread(widths));\n      var dw = [];\n      var m = 0;\n\n      try {\n        for (var _c = __values(widths.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var i = _d.value;\n          dw[i] = (align === 'center' ? (w - widths[i]) / 2 : align === 'right' ? w - widths[i] : 0) + delta[i];\n\n          if (dw[i] < m) {\n            m = -dw[i];\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      if (m) {\n        try {\n          for (var _e = __values(dw.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {\n            var i = _f.value;\n            dw[i] += m;\n          }\n        } catch (e_2_1) {\n          e_2 = {\n            error: e_2_1\n          };\n        } finally {\n          try {\n            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n          } finally {\n            if (e_2) throw e_2.error;\n          }\n        }\n      }\n\n      return dw;\n    };\n\n    class_1.prototype.getDelta = function (noskew) {\n      if (noskew === void 0) {\n        noskew = false;\n      }\n\n      var accent = this.node.attributes.get('accent');\n      var ddelta = accent && !noskew ? this.baseChild.coreMO().bbox.sk : 0;\n      return (DELTA * this.baseCore.bbox.ic / 2 + ddelta) * this.coreScale();\n    };\n\n    class_1.prototype.stretchChildren = function () {\n      var e_3, _a, e_4, _b, e_5, _c;\n\n      var stretchy = [];\n\n      try {\n        for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var child = _e.value;\n\n          if (child.canStretch(2)) {\n            stretchy.push(child);\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n\n      var count = stretchy.length;\n      var nodeCount = this.childNodes.length;\n\n      if (count && nodeCount > 1) {\n        var W = 0;\n        var all = count > 1 && count === nodeCount;\n\n        try {\n          for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {\n            var child = _g.value;\n            var noStretch = child.stretch.dir === 0;\n\n            if (all || noStretch) {\n              var _h = child.getBBox(noStretch),\n                  w = _h.w,\n                  rscale = _h.rscale;\n\n              if (w * rscale > W) W = w * rscale;\n            }\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n\n        try {\n          for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {\n            var child = stretchy_1_1.value;\n            child.coreMO().getStretchedVariant([W / child.bbox.rscale]);\n          }\n        } catch (e_5_1) {\n          e_5 = {\n            error: e_5_1\n          };\n        } finally {\n          try {\n            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);\n          } finally {\n            if (e_5) throw e_5.error;\n          }\n        }\n      }\n    };\n\n    return class_1;\n  }(Base), _a.useIC = false, _a;\n}\n\nexports.CommonScriptbaseMixin = CommonScriptbaseMixin;","map":{"version":3,"sources":["../../../../ts/output/common/Wrappers/scriptbase.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommonScriptbaseMixin = void 0;\nvar DELTA = 1.5;\nfunction CommonScriptbaseMixin(Base) {\n    var _a;\n    return _a = (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                var args = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    args[_i] = arguments[_i];\n                }\n                var _this = _super.apply(this, __spread(args)) || this;\n                var core = _this.baseCore = _this.childNodes[0];\n                if (!core)\n                    return _this;\n                while (core.childNodes.length === 1 &&\n                    (core.node.isKind('mrow') || core.node.isKind('TeXAtom') ||\n                        core.node.isKind('mstyle') || core.node.isKind('mpadded') ||\n                        core.node.isKind('mphantom') || core.node.isKind('semantics'))) {\n                    core = core.childNodes[0];\n                    if (!core)\n                        return _this;\n                }\n                if (!('noIC' in core))\n                    return _this;\n                _this.baseCore = core;\n                if (!_this.constructor.useIC) {\n                    core.noIC = true;\n                }\n                return _this;\n            }\n            Object.defineProperty(class_1.prototype, \"baseChild\", {\n                get: function () {\n                    return this.childNodes[this.node.base];\n                },\n                enumerable: false,\n                configurable: true\n            });\n            Object.defineProperty(class_1.prototype, \"script\", {\n                get: function () {\n                    return this.childNodes[1];\n                },\n                enumerable: false,\n                configurable: true\n            });\n            class_1.prototype.computeBBox = function (bbox, recompute) {\n                if (recompute === void 0) { recompute = false; }\n                var basebox = this.baseChild.getBBox();\n                var scriptbox = this.script.getBBox();\n                var _a = __read(this.getOffset(basebox, scriptbox), 2), x = _a[0], y = _a[1];\n                bbox.append(basebox);\n                bbox.combine(scriptbox, bbox.w + x, y);\n                bbox.w += this.font.params.scriptspace;\n                bbox.clean();\n                this.setChildPWidths(recompute);\n            };\n            class_1.prototype.coreIC = function () {\n                var corebox = this.baseCore.getBBox();\n                return (corebox.ic ? 1.05 * corebox.ic + .05 : 0);\n            };\n            class_1.prototype.coreScale = function () {\n                var scale = this.baseChild.getBBox().rscale;\n                var base = this.baseChild;\n                while ((base.node.isKind('mstyle') || base.node.isKind('mrow') || base.node.isKind('TeXAtom'))\n                    && base.childNodes.length === 1) {\n                    base = base.childNodes[0];\n                    scale *= base.getBBox().rscale;\n                }\n                return scale;\n            };\n            class_1.prototype.isCharBase = function () {\n                var base = this.baseChild;\n                while ((base.node.isKind('mstyle') || base.node.isKind('mrow')) && base.childNodes.length === 1) {\n                    base = base.childNodes[0];\n                }\n                return ((base.node.isKind('mo') || base.node.isKind('mi') || base.node.isKind('mn')) &&\n                    base.bbox.rscale === 1 && Array.from(base.getText()).length === 1 &&\n                    !base.node.attributes.get('largeop'));\n            };\n            class_1.prototype.getOffset = function (_bbox, _sbox) {\n                return [0, 0];\n            };\n            class_1.prototype.getV = function (bbox, sbox) {\n                var tex = this.font.params;\n                var subscriptshift = this.length2em(this.node.attributes.get('subscriptshift'), tex.sub1);\n                return Math.max(this.isCharBase() ? 0 : bbox.d * bbox.rscale + tex.sub_drop * sbox.rscale, subscriptshift, sbox.h * sbox.rscale - (4 / 5) * tex.x_height);\n            };\n            class_1.prototype.getU = function (bbox, sbox) {\n                var tex = this.font.params;\n                var attr = this.node.attributes.getList('displaystyle', 'superscriptshift');\n                var prime = this.node.getProperty('texprimestyle');\n                var p = prime ? tex.sup3 : (attr.displaystyle ? tex.sup1 : tex.sup2);\n                var superscriptshift = this.length2em(attr.superscriptshift, p);\n                return Math.max(this.isCharBase() ? 0 : bbox.h * bbox.rscale - tex.sup_drop * sbox.rscale, superscriptshift, sbox.d * sbox.rscale + (1 / 4) * tex.x_height);\n            };\n            class_1.prototype.hasMovableLimits = function () {\n                var display = this.node.attributes.get('displaystyle');\n                var mo = this.baseChild.coreMO().node;\n                return (!display && !!mo.attributes.get('movablelimits'));\n            };\n            class_1.prototype.getOverKU = function (basebox, overbox) {\n                var accent = this.node.attributes.get('accent');\n                var tex = this.font.params;\n                var d = overbox.d * overbox.rscale;\n                var k = (accent ? tex.rule_thickness :\n                    Math.max(tex.big_op_spacing1, tex.big_op_spacing3 - Math.max(0, d))) -\n                    (this.baseChild.node.isKind('munderover') ? .1 : 0);\n                return [k, basebox.h * basebox.rscale + k + d];\n            };\n            class_1.prototype.getUnderKV = function (basebox, underbox) {\n                var accent = this.node.attributes.get('accentunder');\n                var tex = this.font.params;\n                var h = underbox.h * underbox.rscale;\n                var k = (accent ? tex.rule_thickness :\n                    Math.max(tex.big_op_spacing2, tex.big_op_spacing4 - h)) -\n                    (this.baseChild.node.isKind('munderover') ? .1 : 0);\n                return [k, -(basebox.d * basebox.rscale + k + h)];\n            };\n            class_1.prototype.getDeltaW = function (boxes, delta) {\n                var e_1, _a, e_2, _b;\n                if (delta === void 0) { delta = [0, 0, 0]; }\n                var align = this.node.attributes.get('align');\n                var widths = boxes.map(function (box) { return box.w * box.rscale; });\n                var w = Math.max.apply(Math, __spread(widths));\n                var dw = [];\n                var m = 0;\n                try {\n                    for (var _c = __values(widths.keys()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                        var i = _d.value;\n                        dw[i] = (align === 'center' ? (w - widths[i]) / 2 :\n                            align === 'right' ? w - widths[i] : 0) + delta[i];\n                        if (dw[i] < m) {\n                            m = -dw[i];\n                        }\n                    }\n                }\n                catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                finally {\n                    try {\n                        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                    }\n                    finally { if (e_1) throw e_1.error; }\n                }\n                if (m) {\n                    try {\n                        for (var _e = __values(dw.keys()), _f = _e.next(); !_f.done; _f = _e.next()) {\n                            var i = _f.value;\n                            dw[i] += m;\n                        }\n                    }\n                    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n                    finally {\n                        try {\n                            if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                        }\n                        finally { if (e_2) throw e_2.error; }\n                    }\n                }\n                return dw;\n            };\n            class_1.prototype.getDelta = function (noskew) {\n                if (noskew === void 0) { noskew = false; }\n                var accent = this.node.attributes.get('accent');\n                var ddelta = (accent && !noskew ? this.baseChild.coreMO().bbox.sk : 0);\n                return (DELTA * this.baseCore.bbox.ic / 2 + ddelta) * this.coreScale();\n            };\n            class_1.prototype.stretchChildren = function () {\n                var e_3, _a, e_4, _b, e_5, _c;\n                var stretchy = [];\n                try {\n                    for (var _d = __values(this.childNodes), _e = _d.next(); !_e.done; _e = _d.next()) {\n                        var child = _e.value;\n                        if (child.canStretch(2)) {\n                            stretchy.push(child);\n                        }\n                    }\n                }\n                catch (e_3_1) { e_3 = { error: e_3_1 }; }\n                finally {\n                    try {\n                        if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n                    }\n                    finally { if (e_3) throw e_3.error; }\n                }\n                var count = stretchy.length;\n                var nodeCount = this.childNodes.length;\n                if (count && nodeCount > 1) {\n                    var W = 0;\n                    var all = (count > 1 && count === nodeCount);\n                    try {\n                        for (var _f = __values(this.childNodes), _g = _f.next(); !_g.done; _g = _f.next()) {\n                            var child = _g.value;\n                            var noStretch = (child.stretch.dir === 0);\n                            if (all || noStretch) {\n                                var _h = child.getBBox(noStretch), w = _h.w, rscale = _h.rscale;\n                                if (w * rscale > W)\n                                    W = w * rscale;\n                            }\n                        }\n                    }\n                    catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                    finally {\n                        try {\n                            if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n                        }\n                        finally { if (e_4) throw e_4.error; }\n                    }\n                    try {\n                        for (var stretchy_1 = __values(stretchy), stretchy_1_1 = stretchy_1.next(); !stretchy_1_1.done; stretchy_1_1 = stretchy_1.next()) {\n                            var child = stretchy_1_1.value;\n                            child.coreMO().getStretchedVariant([W / child.bbox.rscale]);\n                        }\n                    }\n                    catch (e_5_1) { e_5 = { error: e_5_1 }; }\n                    finally {\n                        try {\n                            if (stretchy_1_1 && !stretchy_1_1.done && (_c = stretchy_1.return)) _c.call(stretchy_1);\n                        }\n                        finally { if (e_5) throw e_5.error; }\n                    }\n                }\n            };\n            return class_1;\n        }(Base)),\n        _a.useIC = false,\n        _a;\n}\nexports.CommonScriptbaseMixin = CommonScriptbaseMixin;\n//# sourceMappingURL=scriptbase.js.map"]},"metadata":{},"sourceType":"script"}