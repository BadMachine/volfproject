{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlNone = exports.MmlMprescripts = exports.MmlMmultiscripts = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar msubsup_js_1 = require(\"./msubsup.js\");\n\nvar MmlMmultiscripts = function (_super) {\n  __extends(MmlMmultiscripts, _super);\n\n  function MmlMmultiscripts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMmultiscripts.prototype, \"kind\", {\n    get: function () {\n      return 'mmultiscripts';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMmultiscripts.prototype, \"arity\", {\n    get: function () {\n      return 1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMmultiscripts.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);\n    var prescripts = false;\n\n    for (var i = 1, n = 0; i < this.childNodes.length; i++) {\n      var child = this.childNodes[i];\n\n      if (child.isKind('mprescripts')) {\n        if (!prescripts) {\n          prescripts = true;\n\n          if (i % 2 === 0) {\n            var mrow = this.factory.create('mrow');\n            this.childNodes.splice(i, 0, mrow);\n            mrow.parent = this;\n            i++;\n          }\n        }\n      } else {\n        var primestyle = prime || n % 2 === 0;\n        child.setInheritedAttributes(attributes, false, level + 1, primestyle);\n        n++;\n      }\n    }\n\n    if (this.childNodes.length % 2 === (prescripts ? 1 : 0)) {\n      this.appendChild(this.factory.create('mrow'));\n      this.childNodes[this.childNodes.length - 1].setInheritedAttributes(attributes, false, level + 1, prime);\n    }\n  };\n\n  MmlMmultiscripts.prototype.verifyChildren = function (options) {\n    var prescripts = false;\n    var fix = options['fixMmultiscripts'];\n\n    for (var i = 0; i < this.childNodes.length; i++) {\n      var child = this.childNodes[i];\n\n      if (child.isKind('mprescripts')) {\n        if (prescripts) {\n          child.mError(child.kind + ' can only appear once in ' + this.kind, options, true);\n        } else {\n          prescripts = true;\n\n          if (i % 2 === 0 && !fix) {\n            this.mError('There must be an equal number of prescripts of each type', options);\n          }\n        }\n      }\n    }\n\n    if (this.childNodes.length % 2 === (prescripts ? 1 : 0) && !fix) {\n      this.mError('There must be an equal number of scripts of each type', options);\n    }\n\n    _super.prototype.verifyChildren.call(this, options);\n  };\n\n  MmlMmultiscripts.defaults = __assign({}, msubsup_js_1.MmlMsubsup.defaults);\n  return MmlMmultiscripts;\n}(msubsup_js_1.MmlMsubsup);\n\nexports.MmlMmultiscripts = MmlMmultiscripts;\n\nvar MmlMprescripts = function (_super) {\n  __extends(MmlMprescripts, _super);\n\n  function MmlMprescripts() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlMprescripts.prototype, \"kind\", {\n    get: function () {\n      return 'mprescripts';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMprescripts.prototype, \"arity\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMprescripts.prototype.verifyTree = function (options) {\n    _super.prototype.verifyTree.call(this, options);\n\n    if (this.parent && !this.parent.isKind('mmultiscripts')) {\n      this.mError(this.kind + ' must be a child of mmultiscripts', options, true);\n    }\n  };\n\n  MmlMprescripts.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n  return MmlMprescripts;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMprescripts = MmlMprescripts;\n\nvar MmlNone = function (_super) {\n  __extends(MmlNone, _super);\n\n  function MmlNone() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlNone.prototype, \"kind\", {\n    get: function () {\n      return 'none';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlNone.prototype, \"arity\", {\n    get: function () {\n      return 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlNone.prototype.verifyTree = function (options) {\n    _super.prototype.verifyTree.call(this, options);\n\n    if (this.parent && !this.parent.isKind('mmultiscripts')) {\n      this.mError(this.kind + ' must be a child of mmultiscripts', options, true);\n    }\n  };\n\n  MmlNone.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n  return MmlNone;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlNone = MmlNone;","map":{"version":3,"sources":["../../../../ts/core/MmlTree/MmlNodes/mmultiscripts.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AACA,IAAA,YAAA,GAAA,OAAA,CAAA,cAAA,CAAA;;AAOA,IAAA,gBAAA,GAAA,UAAA,MAAA,EAAA;AAAsC,EAAA,SAAA,CAAA,gBAAA,EAAA,MAAA,CAAA;;AAAtC,WAAA,gBAAA,GAAA;;AAsFC;;AA1EC,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACE,aAAO,eAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAQA,EAAA,MAAA,CAAA,cAAA,CAAW,gBAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,YAAA;AACE,aAAO,CAAP;AACD,KAFe;qBAAA;;AAAA,GAAhB;;AAYU,EAAA,gBAAA,CAAA,SAAA,CAAA,2BAAA,GAAV,UAAsC,UAAtC,EAAiE,OAAjE,EAAmF,KAAnF,EAAkG,KAAlG,EAAgH;AAC9G,SAAK,UAAL,CAAgB,CAAhB,EAAmB,sBAAnB,CAA0C,UAA1C,EAAsD,OAAtD,EAA+D,KAA/D,EAAsE,KAAtE;AACA,QAAI,UAAU,GAAG,KAAjB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,CAApB,EAAuB,CAAC,GAAG,KAAK,UAAL,CAAgB,MAA3C,EAAmD,CAAC,EAApD,EAAwD;AACtD,UAAI,KAAK,GAAG,KAAK,UAAL,CAAgB,CAAhB,CAAZ;;AACA,UAAI,KAAK,CAAC,MAAN,CAAa,aAAb,CAAJ,EAAiC;AAC/B,YAAI,CAAC,UAAL,EAAiB;AACf,UAAA,UAAU,GAAG,IAAb;;AACA,cAAI,CAAC,GAAG,CAAJ,KAAU,CAAd,EAAiB;AACf,gBAAI,IAAI,GAAG,KAAK,OAAL,CAAa,MAAb,CAAoB,MAApB,CAAX;AACA,iBAAK,UAAL,CAAgB,MAAhB,CAAuB,CAAvB,EAA0B,CAA1B,EAA6B,IAA7B;AACA,YAAA,IAAI,CAAC,MAAL,GAAc,IAAd;AACA,YAAA,CAAC;AACF;AACF;AACF,OAVD,MAUO;AACL,YAAI,UAAU,GAAG,KAAK,IAAK,CAAC,GAAG,CAAJ,KAAU,CAArC;AACA,QAAA,KAAK,CAAC,sBAAN,CAA6B,UAA7B,EAAyC,KAAzC,EAAgD,KAAK,GAAG,CAAxD,EAA2D,UAA3D;AACA,QAAA,CAAC;AACF;AACF;;AACD,QAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAzB,MAAgC,UAAU,GAAG,CAAH,GAAO,CAAjD,CAAJ,EAAyD;AACvD,WAAK,WAAL,CAAiB,KAAK,OAAL,CAAa,MAAb,CAAoB,MAApB,CAAjB;AACA,WAAK,UAAL,CAAgB,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAzC,EAA4C,sBAA5C,CAAmE,UAAnE,EAA+E,KAA/E,EAAsF,KAAK,GAAG,CAA9F,EAAiG,KAAjG;AACD;AACF,GAzBS;;AAgCA,EAAA,gBAAA,CAAA,SAAA,CAAA,cAAA,GAAV,UAAyB,OAAzB,EAA8C;AAC5C,QAAI,UAAU,GAAG,KAAjB;AACA,QAAI,GAAG,GAAG,OAAO,CAAC,kBAAD,CAAjB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,UAAL,CAAgB,MAApC,EAA4C,CAAC,EAA7C,EAAiD;AAC/C,UAAI,KAAK,GAAG,KAAK,UAAL,CAAgB,CAAhB,CAAZ;;AACA,UAAI,KAAK,CAAC,MAAN,CAAa,aAAb,CAAJ,EAAiC;AAC/B,YAAI,UAAJ,EAAgB;AACd,UAAA,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,IAAN,GAAa,2BAAb,GAA2C,KAAK,IAA7D,EAAmE,OAAnE,EAA4E,IAA5E;AACD,SAFD,MAEO;AACL,UAAA,UAAU,GAAG,IAAb;;AACA,cAAI,CAAC,GAAG,CAAJ,KAAU,CAAV,IAAe,CAAC,GAApB,EAAyB;AACvB,iBAAK,MAAL,CAAY,0DAAZ,EAAwE,OAAxE;AACD;AACF;AACF;AACF;;AACD,QAAI,KAAK,UAAL,CAAgB,MAAhB,GAAyB,CAAzB,MAAgC,UAAU,GAAG,CAAH,GAAO,CAAjD,KAAuD,CAAC,GAA5D,EAAiE;AAC/D,WAAK,MAAL,CAAY,uDAAZ,EAAqE,OAArE;AACD;;AACD,IAAA,MAAA,CAAA,SAAA,CAAM,cAAN,CAAoB,IAApB,CAAoB,IAApB,EAAqB,OAArB;AACD,GApBS;;AA3DI,EAAA,gBAAA,CAAA,QAAA,GAAQ,QAAA,CAAA,EAAA,EACjB,YAAA,CAAA,UAAA,CAAW,QADM,CAAR;AAiFhB,SAAA,gBAAA;AAAC,CAtFD,CAAsC,YAAA,CAAA,UAAtC,CAAA;;AAAa,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AA6Fb,IAAA,cAAA,GAAA,UAAA,MAAA,EAAA;AAAoC,EAAA,SAAA,CAAA,cAAA,EAAA,MAAA,CAAA;;AAApC,WAAA,cAAA,GAAA;;AAmCC;;AAvBC,EAAA,MAAA,CAAA,cAAA,CAAW,cAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACE,aAAO,aAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,cAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,YAAA;AACE,aAAO,CAAP;AACD,KAFe;qBAAA;;AAAA,GAAhB;;AASO,EAAA,cAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,OAAlB,EAAuC;AACrC,IAAA,MAAA,CAAA,SAAA,CAAM,UAAN,CAAgB,IAAhB,CAAgB,IAAhB,EAAiB,OAAjB;;AACA,QAAI,KAAK,MAAL,IAAe,CAAC,KAAK,MAAL,CAAY,MAAZ,CAAmB,eAAnB,CAApB,EAAyD;AACvD,WAAK,MAAL,CAAY,KAAK,IAAL,GAAY,mCAAxB,EAA6D,OAA7D,EAAsE,IAAtE;AACD;AACF,GALM;;AAvBO,EAAA,cAAA,CAAA,QAAA,GAAQ,QAAA,CAAA,EAAA,EACjB,YAAA,CAAA,eAAA,CAAgB,QADC,CAAR;AA8BhB,SAAA,cAAA;AAAC,CAnCD,CAAoC,YAAA,CAAA,eAApC,CAAA;;AAAa,OAAA,CAAA,cAAA,GAAA,cAAA;;AA0Cb,IAAA,OAAA,GAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,OAAA,GAAA;;AAmCC;;AAvBC,EAAA,MAAA,CAAA,cAAA,CAAW,OAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACE,aAAO,MAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAOA,EAAA,MAAA,CAAA,cAAA,CAAW,OAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,YAAA;AACE,aAAO,CAAP;AACD,KAFe;qBAAA;;AAAA,GAAhB;;AASO,EAAA,OAAA,CAAA,SAAA,CAAA,UAAA,GAAP,UAAkB,OAAlB,EAAuC;AACrC,IAAA,MAAA,CAAA,SAAA,CAAM,UAAN,CAAgB,IAAhB,CAAgB,IAAhB,EAAiB,OAAjB;;AACA,QAAI,KAAK,MAAL,IAAe,CAAC,KAAK,MAAL,CAAY,MAAZ,CAAmB,eAAnB,CAApB,EAAyD;AACvD,WAAK,MAAL,CAAY,KAAK,IAAL,GAAY,mCAAxB,EAA6D,OAA7D,EAAsE,IAAtE;AACD;AACF,GALM;;AAvBO,EAAA,OAAA,CAAA,QAAA,GAAQ,QAAA,CAAA,EAAA,EACjB,YAAA,CAAA,eAAA,CAAgB,QADC,CAAR;AA8BhB,SAAA,OAAA;AAAC,CAnCD,CAA6B,YAAA,CAAA,eAA7B,CAAA;;AAAa,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MmlNone = exports.MmlMprescripts = exports.MmlMmultiscripts = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar msubsup_js_1 = require(\"./msubsup.js\");\nvar MmlMmultiscripts = (function (_super) {\n    __extends(MmlMmultiscripts, _super);\n    function MmlMmultiscripts() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MmlMmultiscripts.prototype, \"kind\", {\n        get: function () {\n            return 'mmultiscripts';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMmultiscripts.prototype, \"arity\", {\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMmultiscripts.prototype.setChildInheritedAttributes = function (attributes, display, level, prime) {\n        this.childNodes[0].setInheritedAttributes(attributes, display, level, prime);\n        var prescripts = false;\n        for (var i = 1, n = 0; i < this.childNodes.length; i++) {\n            var child = this.childNodes[i];\n            if (child.isKind('mprescripts')) {\n                if (!prescripts) {\n                    prescripts = true;\n                    if (i % 2 === 0) {\n                        var mrow = this.factory.create('mrow');\n                        this.childNodes.splice(i, 0, mrow);\n                        mrow.parent = this;\n                        i++;\n                    }\n                }\n            }\n            else {\n                var primestyle = prime || (n % 2 === 0);\n                child.setInheritedAttributes(attributes, false, level + 1, primestyle);\n                n++;\n            }\n        }\n        if (this.childNodes.length % 2 === (prescripts ? 1 : 0)) {\n            this.appendChild(this.factory.create('mrow'));\n            this.childNodes[this.childNodes.length - 1].setInheritedAttributes(attributes, false, level + 1, prime);\n        }\n    };\n    MmlMmultiscripts.prototype.verifyChildren = function (options) {\n        var prescripts = false;\n        var fix = options['fixMmultiscripts'];\n        for (var i = 0; i < this.childNodes.length; i++) {\n            var child = this.childNodes[i];\n            if (child.isKind('mprescripts')) {\n                if (prescripts) {\n                    child.mError(child.kind + ' can only appear once in ' + this.kind, options, true);\n                }\n                else {\n                    prescripts = true;\n                    if (i % 2 === 0 && !fix) {\n                        this.mError('There must be an equal number of prescripts of each type', options);\n                    }\n                }\n            }\n        }\n        if (this.childNodes.length % 2 === (prescripts ? 1 : 0) && !fix) {\n            this.mError('There must be an equal number of scripts of each type', options);\n        }\n        _super.prototype.verifyChildren.call(this, options);\n    };\n    MmlMmultiscripts.defaults = __assign({}, msubsup_js_1.MmlMsubsup.defaults);\n    return MmlMmultiscripts;\n}(msubsup_js_1.MmlMsubsup));\nexports.MmlMmultiscripts = MmlMmultiscripts;\nvar MmlMprescripts = (function (_super) {\n    __extends(MmlMprescripts, _super);\n    function MmlMprescripts() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MmlMprescripts.prototype, \"kind\", {\n        get: function () {\n            return 'mprescripts';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMprescripts.prototype, \"arity\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMprescripts.prototype.verifyTree = function (options) {\n        _super.prototype.verifyTree.call(this, options);\n        if (this.parent && !this.parent.isKind('mmultiscripts')) {\n            this.mError(this.kind + ' must be a child of mmultiscripts', options, true);\n        }\n    };\n    MmlMprescripts.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n    return MmlMprescripts;\n}(MmlNode_js_1.AbstractMmlNode));\nexports.MmlMprescripts = MmlMprescripts;\nvar MmlNone = (function (_super) {\n    __extends(MmlNone, _super);\n    function MmlNone() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MmlNone.prototype, \"kind\", {\n        get: function () {\n            return 'none';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlNone.prototype, \"arity\", {\n        get: function () {\n            return 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlNone.prototype.verifyTree = function (options) {\n        _super.prototype.verifyTree.call(this, options);\n        if (this.parent && !this.parent.isKind('mmultiscripts')) {\n            this.mError(this.kind + ' must be a child of mmultiscripts', options, true);\n        }\n    };\n    MmlNone.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n    return MmlNone;\n}(MmlNode_js_1.AbstractMmlNode));\nexports.MmlNone = MmlNone;\n//# sourceMappingURL=mmultiscripts.js.map"]},"metadata":{},"sourceType":"script"}