{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseItem = exports.MmlStack = void 0;\n\nvar TexError_js_1 = require(\"./TexError.js\");\n\nvar MmlStack = function () {\n  function MmlStack(_nodes) {\n    this._nodes = _nodes;\n  }\n\n  Object.defineProperty(MmlStack.prototype, \"nodes\", {\n    get: function () {\n      return this._nodes;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlStack.prototype.Push = function () {\n    var _a;\n\n    var nodes = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nodes[_i] = arguments[_i];\n    }\n\n    (_a = this._nodes).push.apply(_a, __spread(nodes));\n  };\n\n  MmlStack.prototype.Pop = function () {\n    return this._nodes.pop();\n  };\n\n  Object.defineProperty(MmlStack.prototype, \"First\", {\n    get: function () {\n      return this._nodes[this.Size() - 1];\n    },\n    set: function (node) {\n      this._nodes[this.Size() - 1] = node;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlStack.prototype, \"Last\", {\n    get: function () {\n      return this._nodes[0];\n    },\n    set: function (node) {\n      this._nodes[0] = node;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlStack.prototype.Peek = function (n) {\n    if (n == null) {\n      n = 1;\n    }\n\n    return this._nodes.slice(this.Size() - n);\n  };\n\n  MmlStack.prototype.Size = function () {\n    return this._nodes.length;\n  };\n\n  MmlStack.prototype.Clear = function () {\n    this._nodes = [];\n  };\n\n  MmlStack.prototype.toMml = function (inferred, forceRow) {\n    if (inferred === void 0) {\n      inferred = true;\n    }\n\n    if (this._nodes.length === 1 && !forceRow) {\n      return this.First;\n    }\n\n    return this.create('node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});\n  };\n\n  MmlStack.prototype.create = function (kind) {\n    var _a;\n\n    var rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n\n    return (_a = this.factory.configuration.nodeFactory).create.apply(_a, __spread([kind], rest));\n  };\n\n  return MmlStack;\n}();\n\nexports.MmlStack = MmlStack;\n\nvar BaseItem = function (_super) {\n  __extends(BaseItem, _super);\n\n  function BaseItem(factory) {\n    var nodes = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      nodes[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this, nodes) || this;\n\n    _this.factory = factory;\n    _this.global = {};\n    _this._properties = {};\n\n    if (_this.isOpen) {\n      _this._env = {};\n    }\n\n    return _this;\n  }\n\n  Object.defineProperty(BaseItem.prototype, \"kind\", {\n    get: function () {\n      return 'base';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseItem.prototype, \"env\", {\n    get: function () {\n      return this._env;\n    },\n    set: function (value) {\n      this._env = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseItem.prototype, \"copyEnv\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BaseItem.prototype.getProperty = function (key) {\n    return this._properties[key];\n  };\n\n  BaseItem.prototype.setProperty = function (key, value) {\n    this._properties[key] = value;\n    return this;\n  };\n\n  Object.defineProperty(BaseItem.prototype, \"isOpen\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseItem.prototype, \"isClose\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseItem.prototype, \"isFinal\", {\n    get: function () {\n      return false;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BaseItem.prototype.isKind = function (kind) {\n    return kind === this.kind;\n  };\n\n  BaseItem.prototype.checkItem = function (item) {\n    if (item.isKind('over') && this.isOpen) {\n      item.setProperty('num', this.toMml(false));\n      this.Clear();\n    }\n\n    if (item.isKind('cell') && this.isOpen) {\n      if (item.getProperty('linebreak')) {\n        return BaseItem.fail;\n      }\n\n      throw new TexError_js_1.default('Misplaced', 'Misplaced %1', item.getName());\n    }\n\n    if (item.isClose && this.getErrors(item.kind)) {\n      var _a = __read(this.getErrors(item.kind), 2),\n          id = _a[0],\n          message = _a[1];\n\n      throw new TexError_js_1.default(id, message, item.getName());\n    }\n\n    if (!item.isFinal) {\n      return BaseItem.success;\n    }\n\n    this.Push(item.First);\n    return BaseItem.fail;\n  };\n\n  BaseItem.prototype.clearEnv = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(Object.keys(this.env)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        delete this.env[id];\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  BaseItem.prototype.setProperties = function (def) {\n    Object.assign(this._properties, def);\n    return this;\n  };\n\n  BaseItem.prototype.getName = function () {\n    return this.getProperty('name');\n  };\n\n  BaseItem.prototype.toString = function () {\n    return this.kind + '[' + this.nodes.join('; ') + ']';\n  };\n\n  BaseItem.prototype.getErrors = function (kind) {\n    var CLASS = this.constructor;\n    return (CLASS.errors || {})[kind] || BaseItem.errors[kind];\n  };\n\n  BaseItem.fail = [null, false];\n  BaseItem.success = [null, true];\n  BaseItem.errors = {\n    end: ['MissingBeginExtraEnd', 'Missing \\\\begin{%1} or extra \\\\end{%1}'],\n    close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],\n    right: ['MissingLeftExtraRight', 'Missing \\\\left or extra \\\\right']\n  };\n  return BaseItem;\n}(MmlStack);\n\nexports.BaseItem = BaseItem;","map":{"version":3,"sources":["../../../ts/input/tex/StackItem.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseItem = exports.MmlStack = void 0;\nvar TexError_js_1 = require(\"./TexError.js\");\nvar MmlStack = (function () {\n    function MmlStack(_nodes) {\n        this._nodes = _nodes;\n    }\n    Object.defineProperty(MmlStack.prototype, \"nodes\", {\n        get: function () {\n            return this._nodes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlStack.prototype.Push = function () {\n        var _a;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        (_a = this._nodes).push.apply(_a, __spread(nodes));\n    };\n    MmlStack.prototype.Pop = function () {\n        return this._nodes.pop();\n    };\n    Object.defineProperty(MmlStack.prototype, \"First\", {\n        get: function () {\n            return this._nodes[this.Size() - 1];\n        },\n        set: function (node) {\n            this._nodes[this.Size() - 1] = node;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlStack.prototype, \"Last\", {\n        get: function () {\n            return this._nodes[0];\n        },\n        set: function (node) {\n            this._nodes[0] = node;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlStack.prototype.Peek = function (n) {\n        if (n == null) {\n            n = 1;\n        }\n        return this._nodes.slice(this.Size() - n);\n    };\n    MmlStack.prototype.Size = function () {\n        return this._nodes.length;\n    };\n    MmlStack.prototype.Clear = function () {\n        this._nodes = [];\n    };\n    MmlStack.prototype.toMml = function (inferred, forceRow) {\n        if (inferred === void 0) { inferred = true; }\n        if (this._nodes.length === 1 && !forceRow) {\n            return this.First;\n        }\n        return this.create('node', inferred ? 'inferredMrow' : 'mrow', this._nodes, {});\n    };\n    MmlStack.prototype.create = function (kind) {\n        var _a;\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        return (_a = this.factory.configuration.nodeFactory).create.apply(_a, __spread([kind], rest));\n    };\n    return MmlStack;\n}());\nexports.MmlStack = MmlStack;\nvar BaseItem = (function (_super) {\n    __extends(BaseItem, _super);\n    function BaseItem(factory) {\n        var nodes = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            nodes[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, nodes) || this;\n        _this.factory = factory;\n        _this.global = {};\n        _this._properties = {};\n        if (_this.isOpen) {\n            _this._env = {};\n        }\n        return _this;\n    }\n    Object.defineProperty(BaseItem.prototype, \"kind\", {\n        get: function () {\n            return 'base';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"env\", {\n        get: function () {\n            return this._env;\n        },\n        set: function (value) {\n            this._env = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"copyEnv\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseItem.prototype.getProperty = function (key) {\n        return this._properties[key];\n    };\n    BaseItem.prototype.setProperty = function (key, value) {\n        this._properties[key] = value;\n        return this;\n    };\n    Object.defineProperty(BaseItem.prototype, \"isOpen\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"isClose\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseItem.prototype, \"isFinal\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseItem.prototype.isKind = function (kind) {\n        return kind === this.kind;\n    };\n    BaseItem.prototype.checkItem = function (item) {\n        if (item.isKind('over') && this.isOpen) {\n            item.setProperty('num', this.toMml(false));\n            this.Clear();\n        }\n        if (item.isKind('cell') && this.isOpen) {\n            if (item.getProperty('linebreak')) {\n                return BaseItem.fail;\n            }\n            throw new TexError_js_1.default('Misplaced', 'Misplaced %1', item.getName());\n        }\n        if (item.isClose && this.getErrors(item.kind)) {\n            var _a = __read(this.getErrors(item.kind), 2), id = _a[0], message = _a[1];\n            throw new TexError_js_1.default(id, message, item.getName());\n        }\n        if (!item.isFinal) {\n            return BaseItem.success;\n        }\n        this.Push(item.First);\n        return BaseItem.fail;\n    };\n    BaseItem.prototype.clearEnv = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.env)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var id = _c.value;\n                delete this.env[id];\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    BaseItem.prototype.setProperties = function (def) {\n        Object.assign(this._properties, def);\n        return this;\n    };\n    BaseItem.prototype.getName = function () {\n        return this.getProperty('name');\n    };\n    BaseItem.prototype.toString = function () {\n        return this.kind + '[' + this.nodes.join('; ') + ']';\n    };\n    BaseItem.prototype.getErrors = function (kind) {\n        var CLASS = this.constructor;\n        return (CLASS.errors || {})[kind] || BaseItem.errors[kind];\n    };\n    BaseItem.fail = [null, false];\n    BaseItem.success = [null, true];\n    BaseItem.errors = {\n        end: ['MissingBeginExtraEnd', 'Missing \\\\begin{%1} or extra \\\\end{%1}'],\n        close: ['ExtraCloseMissingOpen', 'Extra close brace or missing open brace'],\n        right: ['MissingLeftExtraRight', 'Missing \\\\left or extra \\\\right']\n    };\n    return BaseItem;\n}(MmlStack));\nexports.BaseItem = BaseItem;\n//# sourceMappingURL=StackItem.js.map"]},"metadata":{},"sourceType":"script"}