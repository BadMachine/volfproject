{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlMsqrt = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MmlMsqrt = function (_super) {\n  __extends(MmlMsqrt, _super);\n\n  function MmlMsqrt() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n    return _this;\n  }\n\n  Object.defineProperty(MmlMsqrt.prototype, \"kind\", {\n    get: function () {\n      return 'msqrt';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMsqrt.prototype, \"arity\", {\n    get: function () {\n      return -1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMsqrt.prototype, \"linebreakContainer\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMsqrt.prototype.setTeXclass = function (prev) {\n    this.getPrevClass(prev);\n    this.childNodes[0].setTeXclass(null);\n    return this;\n  };\n\n  MmlMsqrt.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {\n    this.childNodes[0].setInheritedAttributes(attributes, display, level, true);\n  };\n\n  MmlMsqrt.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n  return MmlMsqrt;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMsqrt = MmlMsqrt;","map":{"version":3,"sources":["../../../../ts/core/MmlTree/MmlNodes/msqrt.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,IAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAOA,IAAA,QAAA,GAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAA9B,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAYS,IAAA,KAAA,CAAA,QAAA,GAAW,YAAA,CAAA,QAAA,CAAS,GAApB;;AA2CR;;AAtCC,EAAA,MAAA,CAAA,cAAA,CAAW,QAAA,CAAA,SAAX,EAAW,MAAX,EAAe;SAAf,YAAA;AACE,aAAO,OAAP;AACD,KAFc;qBAAA;;AAAA,GAAf;AAQA,EAAA,MAAA,CAAA,cAAA,CAAW,QAAA,CAAA,SAAX,EAAW,OAAX,EAAgB;SAAhB,YAAA;AACE,aAAO,CAAC,CAAR;AACD,KAFe;qBAAA;;AAAA,GAAhB;AAQA,EAAA,MAAA,CAAA,cAAA,CAAW,QAAA,CAAA,SAAX,EAAW,oBAAX,EAA6B;SAA7B,YAAA;AACE,aAAO,IAAP;AACD,KAF4B;qBAAA;;AAAA,GAA7B;;AAOO,EAAA,QAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,IAAnB,EAAgC;AAC9B,SAAK,YAAL,CAAkB,IAAlB;AACA,SAAK,UAAL,CAAgB,CAAhB,EAAmB,WAAnB,CAA+B,IAA/B;AACA,WAAO,IAAP;AACD,GAJM;;AAWG,EAAA,QAAA,CAAA,SAAA,CAAA,2BAAA,GAAV,UAAsC,UAAtC,EAAiE,OAAjE,EAAmF,KAAnF,EAAkG,MAAlG,EAAiH;AAC/G,SAAK,UAAL,CAAgB,CAAhB,EAAmB,sBAAnB,CAA0C,UAA1C,EAAsD,OAAtD,EAA+D,KAA/D,EAAsE,IAAtE;AACD,GAFS;;AA9CI,EAAA,QAAA,CAAA,QAAA,GAAQ,QAAA,CAAA,EAAA,EACjB,YAAA,CAAA,eAAA,CAAgB,QADC,CAAR;AAkDhB,SAAA,QAAA;AAAC,CAvDD,CAA8B,YAAA,CAAA,eAA9B,CAAA;;AAAa,OAAA,CAAA,QAAA,GAAA,QAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MmlMsqrt = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar MmlMsqrt = (function (_super) {\n    __extends(MmlMsqrt, _super);\n    function MmlMsqrt() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.texClass = MmlNode_js_1.TEXCLASS.ORD;\n        return _this;\n    }\n    Object.defineProperty(MmlMsqrt.prototype, \"kind\", {\n        get: function () {\n            return 'msqrt';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMsqrt.prototype, \"arity\", {\n        get: function () {\n            return -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMsqrt.prototype, \"linebreakContainer\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMsqrt.prototype.setTeXclass = function (prev) {\n        this.getPrevClass(prev);\n        this.childNodes[0].setTeXclass(null);\n        return this;\n    };\n    MmlMsqrt.prototype.setChildInheritedAttributes = function (attributes, display, level, _prime) {\n        this.childNodes[0].setInheritedAttributes(attributes, display, level, true);\n    };\n    MmlMsqrt.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n    return MmlMsqrt;\n}(MmlNode_js_1.AbstractMmlNode));\nexports.MmlMsqrt = MmlMsqrt;\n//# sourceMappingURL=msqrt.js.map"]},"metadata":{},"sourceType":"script"}