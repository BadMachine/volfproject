{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\TextDetection.tsx\";\nimport React from 'react';\nimport { InferenceSession } from 'onnxjs';\nimport loadImage from 'blueimp-load-image';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class TextDetection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canva = void 0;\n    this.imageLoaderConfigs = void 0;\n    this.state;\n    this.imageLoaderConfigs = {\n      maxWidth: 256,\n      maxHeight: 256,\n      cover: true,\n      crop: true,\n      canvas: true,\n      crossOrigin: 'Anonymous'\n    };\n  }\n\n  loadCanvas() {\n    const ctx = this.canva.getContext('2d');\n    const img = new Image();\n    img.src = './00040534.png';\n\n    img.onload = () => {\n      ctx.drawImage(img, 0, 0);\n    };\n  }\n\n  async run() {\n    const session = new InferenceSession();\n    const url = './east_model.onnx';\n    await session.loadModel(url);\n  }\n\n  componentDidMount() {\n    loadImage('./00040534.png', this.loadCanvas.bind(this), this.imageLoaderConfigs); //this.loadCanvas();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'tfTxtContainer',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: 'imagesContainer'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: 'tfTxtWorkspace',\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: 'activeImage',\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            width: 777,\n            height: 1000,\n            ref: canvas => this.canva = canvas,\n            id: 'input-canvas',\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/TextDetection.tsx"],"names":["React","InferenceSession","loadImage","TextDetection","Component","constructor","props","canva","imageLoaderConfigs","state","maxWidth","maxHeight","cover","crop","canvas","crossOrigin","loadCanvas","ctx","getContext","img","Image","src","onload","drawImage","run","session","url","loadModel","componentDidMount","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,SAAiBC,gBAAjB,QAAwC,QAAxC;AACA,OAAOC,SAAP,MAAsB,oBAAtB;;AAIA,OAAO,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAAmE;AAGzEC,EAAAA,WAAW,CAACC,KAAD,EAAY;AACtB,UAAMA,KAAN;AADsB,SAFfC,KAEe;AAAA,SADfC,kBACe;AAEtB,SAAKC,KAAL;AACA,SAAKD,kBAAL,GAA0B;AACzBE,MAAAA,QAAQ,EAAE,GADe;AAEzBC,MAAAA,SAAS,EAAE,GAFc;AAGzBC,MAAAA,KAAK,EAAE,IAHkB;AAIzBC,MAAAA,IAAI,EAAE,IAJmB;AAKzBC,MAAAA,MAAM,EAAE,IALiB;AAMzBC,MAAAA,WAAW,EAAE;AANY,KAA1B;AAQA;;AAGDC,EAAAA,UAAU,GAAE;AACX,UAAMC,GAAG,GAAG,KAAKV,KAAL,CAAWW,UAAX,CAAsB,IAAtB,CAAZ;AACA,UAAMC,GAAG,GAAG,IAAIC,KAAJ,EAAZ;AACAD,IAAAA,GAAG,CAACE,GAAJ,GAAU,gBAAV;;AACAF,IAAAA,GAAG,CAACG,MAAJ,GAAa,MAAI;AAChBL,MAAAA,GAAG,CAACM,SAAJ,CAAcJ,GAAd,EAAkB,CAAlB,EAAoB,CAApB;AACA,KAFD;AAGA;;AAEQ,QAAHK,GAAG,GAAE;AACV,UAAMC,OAAO,GAAG,IAAIxB,gBAAJ,EAAhB;AACA,UAAMyB,GAAG,GAAG,mBAAZ;AACA,UAAMD,OAAO,CAACE,SAAR,CAAkBD,GAAlB,CAAN;AACA;;AAEDE,EAAAA,iBAAiB,GAAG;AACnB1B,IAAAA,SAAS,CAAC,gBAAD,EAAmB,KAAKc,UAAL,CAAgBa,IAAhB,CAAqB,IAArB,CAAnB,EAA+C,KAAKrB,kBAApD,CAAT,CADmB,CAEnB;AACA;;AAGDsB,EAAAA,MAAM,GAAG;AACR,wBACC;AAAK,MAAA,SAAS,EAAE,gBAAhB;AAAA,8BACC;AAAK,QAAA,EAAE,EAAE;AAAT;AAAA;AAAA;AAAA;AAAA,cADD,eAKC;AAAK,QAAA,EAAE,EAAE,gBAAT;AAAA,+BACC;AAAK,UAAA,EAAE,EAAE,aAAT;AAAA,iCACC;AAAQ,YAAA,KAAK,EAAE,GAAf;AAAoB,YAAA,MAAM,EAAE,IAA5B;AAAkC,YAAA,GAAG,EAAGhB,MAAD,IAAU,KAAKP,KAAL,GAAWO,MAA5D;AAAoE,YAAA,EAAE,EAAE,cAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAaA;;AApDwE","sourcesContent":["import React from 'react';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {txtDetectionState} from '../interfaces/stateInterfaces';\r\nimport { Tensor, InferenceSession} from 'onnxjs';\r\nimport loadImage from 'blueimp-load-image';\r\nimport ndarray from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\n\r\nexport class TextDetection extends React.Component<any, txtDetectionState>{\r\n\tprivate canva: any;\r\n\tprivate imageLoaderConfigs:any;\r\n\tconstructor(props:any) {\r\n\t\tsuper(props);\r\n\t\tthis.state;\r\n\t\tthis.imageLoaderConfigs = {\r\n\t\t\tmaxWidth: 256,\r\n\t\t\tmaxHeight: 256,\r\n\t\t\tcover: true,\r\n\t\t\tcrop: true,\r\n\t\t\tcanvas: true,\r\n\t\t\tcrossOrigin: 'Anonymous',\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tloadCanvas(){\r\n\t\tconst ctx = this.canva.getContext('2d');\r\n\t\tconst img = new Image();\r\n\t\timg.src = './00040534.png';\r\n\t\timg.onload = ()=>{\r\n\t\t\tctx.drawImage(img,0,0);\r\n\t\t};\r\n\t}\r\n\r\n\tasync run(){\r\n\t\tconst session = new InferenceSession();\r\n\t\tconst url = './east_model.onnx';\r\n\t\tawait session.loadModel(url);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tloadImage('./00040534.png', this.loadCanvas.bind(this), this.imageLoaderConfigs);\r\n\t\t//this.loadCanvas();\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn(\r\n\t\t\t<div className={'tfTxtContainer'}>\r\n\t\t\t\t<div id={'imagesContainer'}>\r\n\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div id={'tfTxtWorkspace'}>\r\n\t\t\t\t\t<div id={'activeImage'}>\r\n\t\t\t\t\t\t<canvas width={777} height={1000} ref={(canvas)=>this.canva=canvas} id={'input-canvas'}> </canvas>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}