{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\classesCOCO.tsx\";\nimport React, { Component } from 'react';\nimport { Accordion, Badge, Card, Col, Form, Button, Spinner } from 'react-bootstrap';\nimport { classes, parseSubCategories } from './cocoParser';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport axios from 'axios';\nimport { ThemeContext } from './context/themeContext';\nimport download from 'js-file-download';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst filterInit = {\n  superclass: '',\n  subclasses: [''],\n  image: {\n    width: 0,\n    height: 0\n  },\n  bboxes: {\n    maxWidth: 0,\n    maxHeight: 0,\n    minWidth: 0,\n    minHeight: 0\n  },\n  path: '',\n  only: 3\n};\nexport class ClassesCOCO extends Component {\n  constructor(props) {\n    super(props);\n    this.state = void 0;\n    this.superCategoriesRef = /*#__PURE__*/React.createRef();\n    this.exportBtn = /*#__PURE__*/React.createRef();\n    this.theme = void 0;\n    this.filter = void 0;\n\n    this.filterPreview = e => {\n      e.preventDefault();\n      const formData = new FormData(e.target),\n            formDataObj = Object.fromEntries(formData.entries());\n      this.filter = {\n        superclass: this.superCategoriesRef.current.value,\n        subclasses: this.state.badges.length === 0 ? [] : this.state.badges,\n        image: {\n          width: +formDataObj.maxImageWidth,\n          height: +formDataObj.maxImageHeight\n        },\n        bboxes: {\n          maxWidth: +formDataObj.maxBboxWidth,\n          maxHeight: +formDataObj.maxBboxHeight,\n          minWidth: +formDataObj.minBboxWidth,\n          minHeight: +formDataObj.minBboxHeight\n        },\n        path: formDataObj.path,\n        only: +formDataObj.only\n      };\n      this.props.callback(this.filter);\n      this.exportBtn.current.disabled = false;\n    };\n\n    this.filter = filterInit;\n    this.state = {\n      subclasses: [''],\n      badges: [],\n      exportPending: false\n    };\n    this.theme = this.context;\n  }\n\n  componentDidMount() {\n    this.theme = this.context.theme;\n    this.exportBtn.current.disabled = true;\n    this.setState(previousState => {\n      return {\n        subclasses: parseSubCategories('all'),\n        badges: [],\n        exportPending: previousState.exportPending\n      };\n    });\n  }\n\n  appendSubclasses() {\n    const superClassValue = this.superCategoriesRef.current.value;\n    this.setState(previousState => {\n      return {\n        subclasses: parseSubCategories(superClassValue),\n        badges: [],\n        exportPending: previousState.exportPending\n      };\n    });\n  }\n\n  appendBadges(e) {\n    const badge = e[0];\n    const prevBadges = this.state.badges;\n\n    if (!prevBadges.includes(badge) && badge !== undefined) {\n      prevBadges.push(badge);\n      this.setState(previousState => {\n        return {\n          subclasses: previousState.subclasses,\n          badges: prevBadges,\n          exportPending: previousState.exportPending\n        };\n      });\n    }\n  }\n\n  removeBadge(e) {\n    e.preventDefault();\n    const prevState = this.state;\n    prevState.badges = prevState.badges.filter(item => item !== e.currentTarget.textContent);\n    this.setState(prevState);\n  }\n\n  makerequest(e) {\n    e.preventDefault();\n    this.setState(previousState => {\n      return {\n        subclasses: previousState.subclasses,\n        badges: previousState.badges,\n        exportPending: true\n      };\n    });\n    const XMLExport = e.target.elements['voc-export'].checked;\n    axios.post('http://localhost:8800/import_based_on_request', { ...this.filter,\n      exportToXML: XMLExport\n    }, XMLExport ? {\n      responseType: 'arraybuffer'\n    } : {\n      responseType: 'json'\n    }).then(res => {\n      const result = XMLExport ? new Blob([res.data], {\n        type: 'application/octet-stream'\n      }) : JSON.stringify(res.data);\n      download(result, XMLExport ? 'annotations.zip' : 'annotations.json');\n    }).catch(error => {\n      console.log(`Something went wrong on server ${error}`);\n    }).finally(() => {\n      this.setState(previousState => {\n        return {\n          subclasses: previousState.subclasses,\n          badges: previousState.badges,\n          exportPending: false\n        };\n      });\n    }); // if(XMLExport){\n    // \taxios.post('http://localhost:8800/import_based_on_request',{...this.filter, exportToXML: XMLExport},\n    // \t\t{\n    // \t\t\tresponseType: 'arraybuffer',\n    // \t\t}\n    // \t).then(res => {\n    // \t\tconst blob = new Blob([res.data], {\n    // \t\t\ttype: 'application/octet-stream'\n    // \t\t});\n    // \t\tdownload(blob, 'annotations.zip');\n    //\n    //\n    // \t}).catch((error)=>{\n    // \t\tconsole.log(`Something went wrong on server ${error}`);\n    // \t});\n    //\n    // }else{\n    // \taxios.post('http://localhost:8800/import_based_on_request',{...this.filter, exportToXML: XMLExport},\n    // \t).then(res => {\n    // \t\tdownload(res.data, 'annotations.json');\n    // \t}).catch((error)=>{\n    // \t\tconsole.log(`Something went wrong on server ${error}`);\n    // \t});\n    // }\n    // this.setState((previousState: subClassesStateInterface)=>{\n    // \treturn {\n    // \t\tsubclasses: previousState.subclasses,\n    // \t\tbadges: previousState.badges,\n    // \t\texportPending: false\n    // \t};\n    // });\n  }\n\n  render() {\n    var _this$state;\n\n    return /*#__PURE__*/_jsxDEV(Accordion, {\n      defaultActiveKey: \"0\",\n      className: `${this.theme}Text`,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: \"overflowVisible\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          className: `${this.theme}AccordionHeader`,\n          as: Card.Header,\n          eventKey: \"0\",\n          children: \"Classes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"0\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: `${this.theme}AccordionBody`,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"formBasicClasses\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Superclasses: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  size: \"sm\",\n                  as: \"select\",\n                  ref: this.superCategoriesRef,\n                  onChange: e => {\n                    this.appendSubclasses();\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"all\",\n                    children: \"all\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 11\n                  }, this), Object.keys(classes).map((item, it) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: item,\n                      children: item\n                    }, it + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 20\n                    }, this);\n                  }), \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Subclasses: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Typeahead, {\n                id: \"toggle-example\",\n                options: this.state.subclasses,\n                onChange: e => {\n                  this.appendBadges(e);\n                },\n                placeholder: \"Subclasses...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 9\n              }, this), (_this$state = this.state) === null || _this$state === void 0 ? void 0 : _this$state.badges.map((item, it) => {\n                return /*#__PURE__*/_jsxDEV(Badge, {\n                  style: {\n                    marginLeft: '3px'\n                  },\n                  onClick: e => {\n                    this.removeBadge(e);\n                  },\n                  variant: \"success\",\n                  children: item\n                }, it, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 18\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          className: `${this.theme}AccordionHeader`,\n          as: Card.Header,\n          eventKey: \"1\",\n          children: \"Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: `${this.theme}AccordionBody`,\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"Image properties:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: event => this.filterPreview(event),\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginLeft: '1rem'\n                  },\n                  children: \"Max image size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"maxImageWidth\",\n                    size: \"sm\",\n                    placeholder: \"width\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 10\n                }, this), \"x\", /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"maxImageHeight\",\n                    size: \"sm\",\n                    placeholder: \"height\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"Bounding boxes properties:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginLeft: '1rem'\n                  },\n                  children: \"Max bounding box size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"maxBboxWidth\",\n                    size: \"sm\",\n                    placeholder: \"width\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 10\n                }, this), \"x\", /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"maxBboxHeight\",\n                    size: \"sm\",\n                    placeholder: \"height\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    marginLeft: '1rem'\n                  },\n                  children: \"Min bounding box size:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"minBboxWidth\",\n                    size: \"sm\",\n                    placeholder: \"width\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 10\n                }, this), \"x\", /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"minBboxHeight\",\n                    size: \"sm\",\n                    placeholder: \"height\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 11\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Segmentation options:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  inline: true,\n                  name: \"only\",\n                  value: 1,\n                  type: \"radio\",\n                  id: \"onlyBboxes\",\n                  label: \"Only bounding boxes\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  inline: true,\n                  name: \"only\",\n                  value: 2,\n                  type: \"radio\",\n                  id: \"onlySegments\",\n                  label: \"Only segments\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  inline: true,\n                  defaultChecked: true,\n                  value: 3,\n                  name: \"only\",\n                  type: \"radio\",\n                  id: \"both\",\n                  label: \"Both\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                  children: \"Path:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 10\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  size: \"sm\",\n                  name: \"path\",\n                  type: \"text\",\n                  placeholder: \"Absolute path to folder data will be saved\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"submit\",\n                  variant: \"success\",\n                  block: true,\n                  children: \"Filter\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n          className: `${this.theme}AccordionHeader`,\n          as: Card.Header,\n          eventKey: \"2\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n          eventKey: \"2\",\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            className: `${this.theme}AccordionBody`,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: event => this.makerequest(event),\n              children: [/*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                  style: {\n                    marginLeft: '3rem'\n                  },\n                  type: \"switch\",\n                  id: \"voc-switch\",\n                  name: 'voc-export',\n                  label: \"Export to VOC format\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Form.Row, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  ref: this.exportBtn,\n                  name: 'export-button',\n                  type: \"sumbit\",\n                  variant: \"success\",\n                  block: true,\n                  children: [this.state.exportPending ? /*#__PURE__*/_jsxDEV(Spinner, {\n                    as: \"span\",\n                    animation: \"border\",\n                    size: \"sm\",\n                    role: \"status\",\n                    \"aria-hidden\": \"true\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 38\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), \"Export\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 10\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nClassesCOCO.contextType = ThemeContext;","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/classesCOCO.tsx"],"names":["React","Component","Accordion","Badge","Card","Col","Form","Button","Spinner","classes","parseSubCategories","Typeahead","axios","ThemeContext","download","filterInit","superclass","subclasses","image","width","height","bboxes","maxWidth","maxHeight","minWidth","minHeight","path","only","ClassesCOCO","constructor","props","state","superCategoriesRef","createRef","exportBtn","theme","filter","filterPreview","e","preventDefault","formData","FormData","target","formDataObj","Object","fromEntries","entries","current","value","badges","length","maxImageWidth","maxImageHeight","maxBboxWidth","maxBboxHeight","minBboxWidth","minBboxHeight","callback","disabled","exportPending","context","componentDidMount","setState","previousState","appendSubclasses","superClassValue","appendBadges","badge","prevBadges","includes","undefined","push","removeBadge","prevState","item","currentTarget","textContent","makerequest","XMLExport","elements","checked","post","exportToXML","responseType","then","res","result","Blob","data","type","JSON","stringify","catch","error","console","log","finally","render","Header","keys","map","it","marginLeft","event","contextType"],"mappings":"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","sourcesContent":["import React, {Component, useContext} from 'react';\r\nimport {Accordion, Badge, Card, Col, Form, Button, Spinner} from 'react-bootstrap';\r\nimport {classes, parseSubCategories} from './cocoParser';\r\nimport {Typeahead} from 'react-bootstrap-typeahead';\r\nimport axios from 'axios';\r\nimport {ThemeContext} from './context/themeContext';\r\nimport {filterData, subClassesStateInterface} from '../interfaces/cocoData';\r\nimport {callbackProp} from '../interfaces/PropsInterfaces';\r\nimport download from 'js-file-download';\r\n\r\nconst filterInit = {\r\n\tsuperclass: '',\r\n\tsubclasses: [''],\r\n\timage: {\r\n\t\twidth: 0,\r\n\t\theight: 0\r\n\t},\r\n\tbboxes:{\r\n\t\tmaxWidth: 0,\r\n\t\tmaxHeight: 0,\r\n\t\tminWidth: 0,\r\n\t\tminHeight: 0\r\n\t},\r\n\r\n\tpath: '',\r\n\tonly: 3\r\n};\r\n\r\n\r\nexport class ClassesCOCO extends Component<callbackProp>{\r\n\tpublic state: subClassesStateInterface;\r\n\tpublic superCategoriesRef = React.createRef<any>();\r\n\tprivate exportBtn = React.createRef<any>();\r\n\tstatic contextType = ThemeContext;\r\n\tprivate theme: {theme:string};\r\n\tpublic filter: filterData;\r\n\tconstructor(props:callbackProp) {\r\n\t\tsuper(props);\r\n\t\tthis.filter = filterInit;\r\n\t\tthis.state = {subclasses: [''], badges: [], exportPending: false};\r\n\t\tthis.theme = this.context;\r\n\t}\r\n\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.theme = this.context.theme;\r\n\t\tthis.exportBtn.current.disabled = true;\r\n\t\tthis.setState((previousState: subClassesStateInterface)=>{\r\n\r\n\t\t\treturn {\r\n\t\t\t\tsubclasses :parseSubCategories('all'),\r\n\t\t\t\tbadges: [],\r\n\t\t\t\texportPending: previousState.exportPending\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\tappendSubclasses(){\r\n\t\tconst superClassValue = this.superCategoriesRef.current.value;\r\n\t\tthis.setState((previousState: subClassesStateInterface)=>{\r\n\t\t\treturn {\r\n\t\t\t\tsubclasses: parseSubCategories(superClassValue),\r\n\t\t\t\tbadges: [],\r\n\t\t\t\texportPending: previousState.exportPending\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t}\r\n\r\n\tappendBadges(e:string[]){\r\n\t\tconst badge = e[0];\r\n\t\tconst prevBadges = this.state.badges;\r\n\t\tif(!prevBadges.includes(badge) && badge!==undefined) {\r\n\t\t\tprevBadges.push(badge);\r\n\t\t\tthis.setState((previousState: subClassesStateInterface)=>{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsubclasses: previousState.subclasses,\r\n\t\t\t\t\tbadges: prevBadges,\r\n\t\t\t\t\texportPending: previousState.exportPending\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tremoveBadge(e:any){\r\n\t\te.preventDefault();\r\n\t\tconst prevState = this.state;\r\n\t\tprevState.badges = prevState.badges.filter(item => item !== e.currentTarget.textContent);\r\n\t\tthis.setState(prevState);\r\n\t}\r\n\r\n\r\n\tfilterPreview=(e:any)=>{\r\n\r\n\t\te.preventDefault();\r\n\t\tconst formData = new FormData(e.target), formDataObj = Object.fromEntries(formData.entries());\r\n\r\n\t\tthis.filter = {\r\n\t\t\tsuperclass: this.superCategoriesRef.current.value,\r\n\t\t\tsubclasses: this.state.badges.length===0? [] : this.state.badges,\r\n\t\t\timage: {\r\n\t\t\t\twidth: +formDataObj.maxImageWidth,\r\n\t\t\t\theight: +formDataObj.maxImageHeight\r\n\t\t\t},\r\n\t\t\tbboxes:{\r\n\t\t\t\tmaxWidth: +formDataObj.maxBboxWidth,\r\n\t\t\t\tmaxHeight: +formDataObj.maxBboxHeight,\r\n\t\t\t\tminWidth: +formDataObj.minBboxWidth,\r\n\t\t\t\tminHeight: +formDataObj.minBboxHeight\r\n\t\t\t},\r\n\t\t\tpath: formDataObj.path as string,\r\n\t\t\tonly: +formDataObj.only\r\n\t\t};\r\n\r\n\t\tthis.props.callback(this.filter);\r\n\t\tthis.exportBtn.current.disabled = false;\r\n\r\n\t}\r\n\r\n\tmakerequest(e:any){\r\n\t\te.preventDefault();\r\n\t\tthis.setState((previousState: subClassesStateInterface)=>{\r\n\t\t\treturn {\r\n\t\t\t\tsubclasses: previousState.subclasses,\r\n\t\t\t\tbadges: previousState.badges,\r\n\t\t\t\texportPending: true\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\tconst XMLExport = e.target.elements['voc-export'].checked;\r\n\r\n\t\taxios.post('http://localhost:8800/import_based_on_request',{...this.filter, exportToXML: XMLExport},\r\n\t\t\tXMLExport? {responseType: 'arraybuffer'}: {responseType: 'json'}\r\n\t\t).then(res => {\r\n\t\t\tconst result = XMLExport? new Blob([res.data], {type: 'application/octet-stream'}) : JSON.stringify(res.data);\r\n\t\t\tdownload(result, XMLExport? 'annotations.zip' : 'annotations.json');\r\n\r\n\t\t}).catch((error)=>{\r\n\t\t\tconsole.log(`Something went wrong on server ${error}`);\r\n\t\t}).finally(()=>{\r\n\t\t\tthis.setState((previousState: subClassesStateInterface)=>{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tsubclasses: previousState.subclasses,\r\n\t\t\t\t\tbadges: previousState.badges,\r\n\t\t\t\t\texportPending: false\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t});\r\n\r\n\r\n\t\t// if(XMLExport){\r\n\t\t// \taxios.post('http://localhost:8800/import_based_on_request',{...this.filter, exportToXML: XMLExport},\r\n\t\t// \t\t{\r\n\t\t// \t\t\tresponseType: 'arraybuffer',\r\n\t\t// \t\t}\r\n\t\t// \t).then(res => {\r\n\t\t// \t\tconst blob = new Blob([res.data], {\r\n\t\t// \t\t\ttype: 'application/octet-stream'\r\n\t\t// \t\t});\r\n\t\t// \t\tdownload(blob, 'annotations.zip');\r\n\t\t//\r\n\t\t//\r\n\t\t// \t}).catch((error)=>{\r\n\t\t// \t\tconsole.log(`Something went wrong on server ${error}`);\r\n\t\t// \t});\r\n\t\t//\r\n\t\t// }else{\r\n\t\t// \taxios.post('http://localhost:8800/import_based_on_request',{...this.filter, exportToXML: XMLExport},\r\n\t\t// \t).then(res => {\r\n\t\t// \t\tdownload(res.data, 'annotations.json');\r\n\t\t// \t}).catch((error)=>{\r\n\t\t// \t\tconsole.log(`Something went wrong on server ${error}`);\r\n\t\t// \t});\r\n\t\t// }\r\n\r\n\r\n\t\t// this.setState((previousState: subClassesStateInterface)=>{\r\n\t\t// \treturn {\r\n\t\t// \t\tsubclasses: previousState.subclasses,\r\n\t\t// \t\tbadges: previousState.badges,\r\n\t\t// \t\texportPending: false\r\n\t\t// \t};\r\n\t\t// });\r\n\r\n\t}\r\n\r\n\r\n\trender(){\r\n\r\n\t\treturn(\r\n\t\t\t<Accordion defaultActiveKey=\"0\" className={`${this.theme}Text`}>\r\n\t\t\t\t<Card className = 'overflowVisible'>\r\n\t\t\t\t\t<Accordion.Toggle  className={`${this.theme}AccordionHeader`} as={Card.Header} eventKey=\"0\">\r\n\t\t\t\t\t\tClasses\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"0\">\r\n\t\t\t\t\t\t<Card.Body className={`${this.theme}AccordionBody`}>\r\n\t\t\t\t\t\t\t<Form>\r\n\t\t\t\t\t\t\t\t<Form.Group controlId=\"formBasicClasses\">\r\n\t\t\t\t\t\t\t\t\t<p>Superclasses: </p>\r\n\t\t\t\t\t\t\t\t\t<Form.Control  size=\"sm\" as=\"select\" ref={this.superCategoriesRef} onChange={(e)=>{ this.appendSubclasses();} }>\r\n\t\t\t\t\t\t\t\t\t\t<option value='all'>all</option>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tObject.keys(classes).map((item:any,it:number)=>{\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn <option key={it+1} value={item}>{item}</option>;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t</Form.Control>\r\n\t\t\t\t\t\t\t\t\t<p></p>\r\n\t\t\t\t\t\t\t\t\t<p>Subclasses: </p>\r\n\r\n\t\t\t\t\t\t\t\t</Form.Group>\r\n\r\n\t\t\t\t\t\t\t\t<Typeahead\r\n\t\t\t\t\t\t\t\t\tid=\"toggle-example\"\r\n\t\t\t\t\t\t\t\t\toptions={this.state.subclasses}\r\n\t\t\t\t\t\t\t\t\tonChange={(e)=>{ this.appendBadges(e);}}\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Subclasses...\">\r\n\t\t\t\t\t\t\t\t</Typeahead>\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.state?.badges.map((item,it)=>{\r\n\r\n\t\t\t\t\t\t\t\t\t\treturn <Badge style={{marginLeft:'3px'}} onClick={(e:any)=>{this.removeBadge(e); }} key={it} variant=\"success\">{item}</Badge>;\r\n\t\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle  className={`${this.theme}AccordionHeader`} as={Card.Header} eventKey=\"1\">\r\n\t\t\t\t\t\tFilters\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"1\">\r\n\t\t\t\t\t\t<Card.Body className={`${this.theme}AccordionBody`}>\r\n\t\t\t\t\t\t\t<h6>Image properties:</h6>\r\n\t\t\t\t\t\t\t<br></br>\r\n\r\n\t\t\t\t\t\t\t<Form onSubmit={ event => this.filterPreview(event) }>\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t<p style={{marginLeft: '1rem'} }>Max image size:</p>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"maxImageWidth\" size=\"sm\" placeholder=\"width\" />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\tx\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"maxImageHeight\" size=\"sm\" placeholder=\"height\" />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t<h6 >Bounding boxes properties:</h6>\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t<p style={{marginLeft: '1rem'} }>Max bounding box size:</p>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"maxBboxWidth\" size=\"sm\" placeholder=\"width\" />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\tx\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"maxBboxHeight\" size=\"sm\" placeholder=\"height\" />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t<p style={{marginLeft: '1rem'} }>Min bounding box size:</p>\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"minBboxWidth\" size=\"sm\" placeholder=\"width\" />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t\tx\r\n\t\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t\t<Form.Control name=\"minBboxHeight\" size=\"sm\" placeholder=\"height\" />\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\t<h6>Segmentation options:</h6>\r\n\t\t\t\t\t\t\t\t\t<Form.Check inline\r\n\t\t\t\t\t\t\t\t\t\tname='only'\r\n\t\t\t\t\t\t\t\t\t\tvalue={1}\r\n\t\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\t\tid='onlyBboxes'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Only bounding boxes'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Form.Check inline\r\n\t\t\t\t\t\t\t\t\t\tname='only'\r\n\t\t\t\t\t\t\t\t\t\tvalue={2}\r\n\t\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\t\tid='onlySegments'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Only segments'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Form.Check inline\r\n\t\t\t\t\t\t\t\t\t\tdefaultChecked={true}\r\n\t\t\t\t\t\t\t\t\t\tvalue={3}\r\n\t\t\t\t\t\t\t\t\t\tname='only'\r\n\t\t\t\t\t\t\t\t\t\ttype='radio'\r\n\t\t\t\t\t\t\t\t\t\tid='both'\r\n\t\t\t\t\t\t\t\t\t\tlabel='Both'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t\t<h6>Path:</h6>\r\n\t\t\t\t\t\t\t\t\t<Form.Control size=\"sm\" name=\"path\" type=\"text\" placeholder=\"Absolute path to folder data will be saved\" />\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\r\n\t\t\t\t\t\t\t\t\t<Button type=\"submit\" variant=\"success\" block>Filter</Button>\r\n\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\r\n\t\t\t\t\t\t\t</Form>\r\n\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\r\n\r\n\t\t\t\t<Card>\r\n\t\t\t\t\t<Accordion.Toggle className={`${this.theme}AccordionHeader`} as={Card.Header} eventKey=\"2\">\r\n\t\t\t\t\t\tExport\r\n\t\t\t\t\t</Accordion.Toggle>\r\n\t\t\t\t\t<Accordion.Collapse eventKey=\"2\">\r\n\t\t\t\t\t\t<Card.Body className={`${this.theme}AccordionBody`}\t>\r\n\t\t\t\t\t\t\t<Form onSubmit={ event => this.makerequest(event) }>\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t<Form.Check style={{marginLeft: '3rem'} }\r\n\t\t\t\t\t\t\t\t\t\ttype=\"switch\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"voc-switch\"\r\n\t\t\t\t\t\t\t\t\t\tname={'voc-export'}\r\n\t\t\t\t\t\t\t\t\t\tlabel=\"Export to VOC format\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\t\t\t\t\t\t\t\t<br></br>\r\n\t\t\t\t\t\t\t\t<Form.Row>\r\n\t\t\t\t\t\t\t\t\t<Button ref={this.exportBtn} name={'export-button'} type='sumbit' variant=\"success\" block>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{this.state.exportPending? <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\"/> : <></>}\r\n\r\n\t\t\t\t\t\t\t\t\t\tExport\r\n\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t</Form.Row>\r\n\r\n\t\t\t\t\t\t\t</Form>\r\n\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Accordion.Collapse>\r\n\t\t\t\t</Card>\r\n\t\t\t</Accordion>\r\n\r\n\t\t);\r\n\r\n\t}\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}