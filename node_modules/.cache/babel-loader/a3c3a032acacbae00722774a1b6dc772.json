{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BackGroundParticles.tsx\";\nimport React from 'react';\nimport { backgroundParticlesConfig } from './configs/particlesConfig';\nimport { NIGHT } from '../interfaces/stateInterfaces';\nimport Particles from 'react-tsparticles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BackGroundParticles extends React.Component {\n  constructor(properties) {\n    super(properties);\n    this.particlesContainer = void 0;\n    this.theme = void 0;\n    this.options = void 0;\n    this.particlesInit = this.particlesInit.bind(this);\n    this.particlesLoaded = this.particlesLoaded.bind(this);\n    this.theme = properties.theme;\n    this.particlesContainer;\n    this.options = backgroundParticlesConfig;\n  }\n\n  componentDidMount() {//\n  }\n\n  particlesInit(main) {\n    console.log(main);\n  }\n\n  particlesLoaded(container) {\n    this.particlesContainer = container; //console.log(this.particlesContainer);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    if (nextProps.theme !== this.props.theme) {\n      return true;\n    }\n\n    Object.values(nextProps.properties).includes(true) ? this.pause() : this.resume();\n    return false;\n  }\n\n  pause() {\n    var _this$particlesContai;\n\n    console.log((_this$particlesContai = this.particlesContainer) === null || _this$particlesContai === void 0 ? void 0 : _this$particlesContai.particles);\n    setTimeout(() => {\n      var _this$particlesContai2;\n\n      return (_this$particlesContai2 = this.particlesContainer) === null || _this$particlesContai2 === void 0 ? void 0 : _this$particlesContai2.pause();\n    }, 300);\n  }\n\n  resume() {\n    var _this$particlesContai3;\n\n    (_this$particlesContai3 = this.particlesContainer) === null || _this$particlesContai3 === void 0 ? void 0 : _this$particlesContai3.play();\n  }\n\n  changeTheme(theme) {\n    this.options.particles.color.value = theme === NIGHT ? '#ffffff' : '#141414';\n    this.options.particles.line_linked.color = theme === NIGHT ? '#ffffff' : '#141414';\n    this.forceUpdate();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.theme !== this.props.theme) {\n      this.changeTheme(this.props.theme);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Particles, {\n      init: this.particlesInit,\n      loaded: this.particlesLoaded,\n      params: JSON.parse(JSON.stringify(this.options))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport const MemorizedBackgroundParticles = /*#__PURE__*/React.memo(BackGroundParticles);\n_c = MemorizedBackgroundParticles;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedBackgroundParticles\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BackGroundParticles.tsx"],"names":["React","backgroundParticlesConfig","NIGHT","Particles","BackGroundParticles","Component","constructor","properties","particlesContainer","theme","options","particlesInit","bind","particlesLoaded","componentDidMount","main","console","log","container","shouldComponentUpdate","nextProps","props","Object","values","includes","pause","resume","particles","setTimeout","play","changeTheme","color","value","line_linked","forceUpdate","componentDidUpdate","prevProps","render","JSON","parse","stringify","MemorizedBackgroundParticles","memo"],"mappings":";AAAA,OAAOA,KAAP,MAA0C,OAA1C;AACA,SAAQC,yBAAR,QAAwC,2BAAxC;AAEA,SAA6BC,KAA7B,QAA8C,+BAA9C;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;AAQA,MAAMC,mBAAN,SAAkCJ,KAAK,CAACK,SAAxC,CAA6D;AAK5DC,EAAAA,WAAW,CAACC,UAAD,EAAwB;AAClC,UAAMA,UAAN;AADkC,SAH5BC,kBAG4B;AAAA,SAF3BC,KAE2B;AAAA,SAD5BC,OAC4B;AAElC,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBD,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKH,KAAL,GAAaF,UAAU,CAACE,KAAxB;AACA,SAAKD,kBAAL;AACA,SAAKE,OAAL,GAAeT,yBAAf;AACA;;AAEDa,EAAAA,iBAAiB,GAAG,CACnB;AACA;;AAEDH,EAAAA,aAAa,CAACI,IAAD,EAAW;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA;;AAEDF,EAAAA,eAAe,CAACK,SAAD,EAAgB;AAC9B,SAAKV,kBAAL,GAA0BU,SAA1B,CAD8B,CAE9B;AACA;;AAEDC,EAAAA,qBAAqB,CAACC,SAAD,EAA2C;AAE/D,QAAGA,SAAS,CAACX,KAAV,KAAkB,KAAKY,KAAL,CAAWZ,KAAhC,EAAuC;AACtC,aAAO,IAAP;AACA;;AACDa,IAAAA,MAAM,CAACC,MAAP,CAAcH,SAAS,CAACb,UAAxB,EAAoCiB,QAApC,CAA6C,IAA7C,IAAoD,KAAKC,KAAL,EAApD,GAAkE,KAAKC,MAAL,EAAlE;AACA,WAAO,KAAP;AACA;;AAEDD,EAAAA,KAAK,GAAE;AAAA;;AAENT,IAAAA,OAAO,CAACC,GAAR,0BAAY,KAAKT,kBAAjB,0DAAY,sBAAyBmB,SAArC;AAEAC,IAAAA,UAAU,CAAC;AAAA;;AAAA,uCAAI,KAAKpB,kBAAT,2DAAI,uBAAyBiB,KAAzB,EAAJ;AAAA,KAAD,EAAuC,GAAvC,CAAV;AACA;;AACDC,EAAAA,MAAM,GAAE;AAAA;;AAEP,mCAAKlB,kBAAL,kFAAyBqB,IAAzB;AACA;;AAEDC,EAAAA,WAAW,CAACrB,KAAD,EAAe;AAEzB,SAAKC,OAAL,CAAaiB,SAAb,CAAuBI,KAAvB,CAA6BC,KAA7B,GAAsCvB,KAAK,KAAKP,KAAX,GAAmB,SAAnB,GAA8B,SAAnE;AACA,SAAKQ,OAAL,CAAaiB,SAAb,CAAuBM,WAAvB,CAAmCF,KAAnC,GAA4CtB,KAAK,KAAKP,KAAX,GAAmB,SAAnB,GAA8B,SAAzE;AACA,SAAKgC,WAAL;AACA;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAkC;AAEnD,QAAGA,SAAS,CAAC3B,KAAV,KAAkB,KAAKY,KAAL,CAAWZ,KAAhC,EAAuC;AACtC,WAAKqB,WAAL,CAAiB,KAAKT,KAAL,CAAWZ,KAA5B;AACA;AACD;;AAGD4B,EAAAA,MAAM,GAAE;AACP,wBACC,QAAC,SAAD;AAAW,MAAA,IAAI,EAAE,KAAK1B,aAAtB;AAAqC,MAAA,MAAM,EAAE,KAAKE,eAAlD;AAAmE,MAAA,MAAM,EAAEyB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAe,KAAK9B,OAApB,CAAX;AAA3E;AAAA;AAAA;AAAA;AAAA,YADD;AAGA;;AAlE2D;;AAqE7D,OAAO,MAAM+B,4BAA4B,gBAAGzC,KAAK,CAAC0C,IAAN,CAAWtC,mBAAX,CAArC;KAAMqC,4B","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport {backgroundParticlesConfig} from './configs/particlesConfig';\r\nimport {Container} from 'tsparticles/dist/Core/Container';\r\nimport {modalStateInterface, NIGHT, DAY} from '../interfaces/stateInterfaces';\r\nimport Particles from 'react-tsparticles';\r\n\r\n\r\ninterface properties {\r\n\tproperties: modalStateInterface,\r\n\ttheme: string\r\n}\r\n\r\nclass BackGroundParticles extends React.Component<properties>{\r\n\r\n\tpublic particlesContainer: Container | undefined;\r\n\tprivate theme:string;\r\n\tpublic options:any;\r\n\tconstructor(properties:properties) {\r\n\t\tsuper(properties);\r\n\t\tthis.particlesInit = this.particlesInit.bind(this);\r\n\t\tthis.particlesLoaded = this.particlesLoaded.bind(this);\r\n\t\tthis.theme = properties.theme;\r\n\t\tthis.particlesContainer;\r\n\t\tthis.options = backgroundParticlesConfig;\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//\r\n\t}\r\n\r\n\tparticlesInit(main:any) {\r\n\t\tconsole.log(main);\r\n\t}\r\n\r\n\tparticlesLoaded(container:any) {\r\n\t\tthis.particlesContainer = container;\r\n\t\t//console.log(this.particlesContainer);\r\n\t}\r\n\r\n\tshouldComponentUpdate(nextProps: Readonly<properties>): boolean {\r\n\r\n\t\tif(nextProps.theme!==this.props.theme) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tObject.values(nextProps.properties).includes(true)? this.pause(): this.resume();\r\n\t\treturn false;\r\n\t}\r\n\r\n\tpause(){\r\n\r\n\t\tconsole.log(this.particlesContainer?.particles);\r\n\r\n\t\tsetTimeout(()=>this.particlesContainer?.pause(), 300);\r\n\t}\r\n\tresume(){\r\n\r\n\t\tthis.particlesContainer?.play();\r\n\t}\r\n\r\n\tchangeTheme(theme: string){\r\n\r\n\t\tthis.options.particles.color.value = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\tthis.options.particles.line_linked.color = (theme === NIGHT)? '#ffffff': '#141414';\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<properties>) {\r\n\r\n\t\tif(prevProps.theme!==this.props.theme) {\r\n\t\t\tthis.changeTheme(this.props.theme);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<Particles init={this.particlesInit} loaded={this.particlesLoaded} params={JSON.parse(JSON.stringify(this.options)) }/>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport const MemorizedBackgroundParticles = React.memo(BackGroundParticles);\r\n"]},"metadata":{},"sourceType":"module"}