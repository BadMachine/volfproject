{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\QuickSortChart.tsx\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { chartjsDataTemplate, generateColorsForChart } from '../interfaces/SortInterfaces';\nimport { quickSort } from '../redux/SortingStateReducer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass QuickSortChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = void 0;\n    this.chart = void 0;\n    this.timer = void 0;\n    this.isSorting = void 0;\n    this.interrupt = void 0;\n    this.uselessRefresh = void 0;\n    this.state = void 0;\n    this.props = void 0;\n    this.timeouts = void 0;\n    this.date = void 0;\n\n    this.quickSort = () => {\n      if (arr.length < 2) return arr;\n      const min = 1;\n      const max = arr.length - 1;\n      let rand = Math.floor(min + Math.random() * (max + 1 - min));\n      let pivot = arr[rand];\n      const left = [];\n      const right = [];\n      arr.splice(arr.indexOf(pivot), 1);\n      arr = [pivot].concat(arr);\n\n      for (let i = 1; i < arr.length; i++) {\n        if (pivot > arr[i]) {\n          left.push(arr[i]);\n        } else {\n          right.push(arr[i]);\n        }\n      }\n\n      return quickSort(left).concat(pivot, quickSort(right));\n    };\n\n    this.equals = (a, b) => JSON.stringify(a) === JSON.stringify(b);\n\n    this.state = chartjsDataTemplate;\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.timer = 0;\n    this.isSorting = false;\n    this.interrupt = false;\n    this.date = 0;\n    this.uselessRefresh = false;\n    this.timeouts = [];\n  }\n\n  componentDidMount() {\n    this.chart = this.chartReference.current.chartInstance; // const tempChartJSObject = chartjsDataTemplate;\n    // tempChartJSObject.datasets[0].label = this.props.commands.name;\n    //this.setState(tempChartJSObject);\n  }\n\n  updateChartDelayed(labels, data, colors, timeout) {\n    this.timer = setTimeout(() => {\n      const now = new Date().getTime();\n      const timeDifference = now - this.date;\n      const seconds = Math.floor(timeDifference % (1000 * 60) / 1000);\n      const mils = Math.floor(timeDifference % (1000 * 60) / 1);\n      this.isSorting = true;\n      this.chart.data.datasets[0].label = `${seconds}s ${mils.toString().substr(-3)}ms`;\n      this.chart.data.labels = labels;\n      this.chart.data.datasets[0].data = data;\n      this.chart.data.datasets[0].backgroundColor = colors;\n      this.chart.update();\n      const eth = [...this.chart.data.datasets[0].data].sort((x, y) => x - y);\n\n      if (eth.toString() === this.chart.data.datasets[0].data.toString()) {\n        this.props.callback();\n      }\n    }, timeout);\n    return this.timer;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  clearAllTimeouts() {\n    for (const timeout in this.timeouts) {\n      clearInterval(this.timeouts[timeout]);\n    }\n\n    this.timeouts = [];\n  }\n\n  refreshChart() {\n    console.log(this.props.commands.arrayLength);\n    const temporaryDataToSort = chartjsDataTemplate;\n    temporaryDataToSort.datasets[0].data = Array.from({\n      length: this.props.commands.arrayLength\n    }, () => Math.floor(Math.random() * 1000));\n    temporaryDataToSort.labels = Array.from({\n      length: this.props.commands.arrayLength\n    }, (_, i) => (i + 1).toString());\n    [temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\n    console.log(temporaryDataToSort.datasets[0].data);\n    this.setState(temporaryDataToSort);\n  }\n\n  componentDidUpdate(prevProps) {\n    console.log('QUICK TRIGGERED!');\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      this.date = new Date(Date.now()).getTime();\n      this.clearAllTimeouts();\n\n      if (this.props.commands.StopSort) {\n        this.clearAllTimeouts();\n      } else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.clearAllTimeouts();\n        this.refreshChart();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      } else if (this.props.commands.name !== prevProps.commands.name) {\n        this.bubbleSort();\n      } else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      } else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\n        this.refreshChart();\n        this.clearAllTimeouts();\n        setTimeout(() => {\n          this.bubbleSort();\n        }, 800);\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Bar, {\n        data: this.state,\n        width: 100,\n        height: 50,\n        options: {\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              boxWidth: 0\n            }\n          }\n        },\n        ref: this.chartReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport const MemorizedQuickChart = /*#__PURE__*/React.memo(QuickSortChart);\n_c = MemorizedQuickChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MemorizedQuickChart\");","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/QuickSortChart.tsx"],"names":["React","Component","Bar","chartjsDataTemplate","generateColorsForChart","quickSort","QuickSortChart","constructor","props","chartReference","chart","timer","isSorting","interrupt","uselessRefresh","state","timeouts","date","arr","length","min","max","rand","Math","floor","random","pivot","left","right","splice","indexOf","concat","i","push","equals","a","b","JSON","stringify","createRef","componentDidMount","current","chartInstance","updateChartDelayed","labels","data","colors","timeout","setTimeout","now","Date","getTime","timeDifference","seconds","mils","datasets","label","toString","substr","backgroundColor","update","eth","sort","x","y","callback","componentWillUnmount","clearInterval","clearAllTimeouts","refreshChart","console","log","commands","arrayLength","temporaryDataToSort","Array","from","_","borderColor","setState","componentDidUpdate","prevProps","StopSort","name","bubbleSort","render","legend","display","position","boxWidth","MemorizedQuickChart","memo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {CommandsInterface, chartjsDataTemplate, generateColorsForChart} from '../interfaces/SortInterfaces';\r\nimport {sortingStore} from './ModalContent';\r\nimport {quickSort} from '../redux/SortingStateReducer';\r\n\r\n\r\nclass QuickSortChart extends Component<CommandsInterface>{\r\n\tprivate chartReference: React.RefObject<any>;\r\n\tprivate chart: any;\r\n\tprivate timer: any;\r\n\tprivate isSorting: boolean;\r\n\tprivate interrupt: boolean;\r\n\tprivate uselessRefresh: boolean;\r\n\tpublic state;\r\n\tpublic props: any;\r\n\tprivate timeouts:number[];\r\n\tprivate date: number;\r\n\r\n\tconstructor(props: CommandsInterface) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = chartjsDataTemplate;\r\n\r\n\t\tthis.chartReference = React.createRef<any>();\r\n\r\n\t\tthis.timer = 0;\r\n\r\n\t\tthis.isSorting = false;\r\n\r\n\t\tthis.interrupt = false;\r\n\r\n\t\tthis.date = 0;\r\n\r\n\r\n\t\tthis.uselessRefresh = false;\r\n\t\tthis.timeouts = [];\r\n\r\n\t}\r\n\r\n\r\n\tquickSort = () => {\r\n\t\tif (arr.length < 2) return arr;\r\n\t\tconst min = 1;\r\n\t\tconst max = arr.length - 1;\r\n\t\tlet rand = Math.floor(min + Math.random() * (max + 1 - min));\r\n\t\tlet pivot = arr[rand];\r\n\t\tconst left = [];\r\n\t\tconst right = [];\r\n\t\tarr.splice(arr.indexOf(pivot), 1);\r\n\t\tarr = [pivot].concat(arr);\r\n\t\tfor (let i = 1; i < arr.length; i++) {\r\n\t\t\tif (pivot > arr[i]) {\r\n\t\t\t\tleft.push(arr[i]);\r\n\t\t\t} else {\r\n\t\t\t\tright.push(arr[i]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn quickSort(left).concat(pivot, quickSort(right));\r\n\t}\r\n\r\n\tequals = (a:number[], b:number[]) => JSON.stringify(a) === JSON.stringify(b);\r\n\r\n\tcomponentDidMount(){\r\n\r\n\t\tthis.chart = this.chartReference.current.chartInstance;\r\n\t\t// const tempChartJSObject = chartjsDataTemplate;\r\n\t\t// tempChartJSObject.datasets[0].label = this.props.commands.name;\r\n\t\t//this.setState(tempChartJSObject);\r\n\t}\r\n\r\n\r\n\tupdateChartDelayed(labels: string[], data:number[], colors:string[], timeout:number) {\r\n\r\n\r\n\t\tthis.timer = setTimeout(() => {\r\n\r\n\t\t\tconst now = new Date().getTime();\r\n\r\n\t\t\tconst timeDifference  = now - this.date;\r\n\t\t\tconst seconds = Math.floor((timeDifference % (1000 * 60)) / 1000);\r\n\t\t\tconst mils = Math.floor((timeDifference % (1000 * 60)) / 1);\r\n\r\n\t\t\tthis.isSorting = true;\r\n\t\t\tthis.chart.data.datasets[0].label =  `${seconds}s ${mils.toString().substr(-3)}ms`  ;\r\n\t\t\tthis.chart.data.labels = labels;\r\n\t\t\tthis.chart.data.datasets[0].data = data;\r\n\t\t\tthis.chart.data.datasets[0].backgroundColor = colors;\r\n\t\t\tthis.chart.update();\r\n\r\n\t\t\tconst eth = [...this.chart.data.datasets[0].data].sort((x,y)=> x-y);\r\n\t\t\tif( eth.toString() === this.chart.data.datasets[0].data.toString()) {\r\n\t\t\t\tthis.props.callback();\r\n\t\t\t}\r\n\r\n\r\n\t\t}, timeout);\r\n\r\n\r\n\r\n\t\treturn this.timer;\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\r\n\t}\r\n\r\n\r\n\tclearAllTimeouts(){\r\n\t\tfor(const timeout in this.timeouts){\r\n\t\t\tclearInterval(this.timeouts[timeout]);\r\n\t\t}\r\n\t\tthis.timeouts=[];\r\n\t}\r\n\r\n\trefreshChart(){\r\n\t\tconsole.log(this.props.commands.arrayLength);\r\n\t\tconst temporaryDataToSort = chartjsDataTemplate;\r\n\t\ttemporaryDataToSort.datasets[0].data = Array.from({length: this.props.commands.arrayLength}, () => Math.floor(Math.random() * 1000));\r\n\t\ttemporaryDataToSort.labels = Array.from({ length: this.props.commands.arrayLength }, (_, i) => (i+1).toString());\r\n\t\t[temporaryDataToSort.datasets[0].backgroundColor, temporaryDataToSort.datasets[0].borderColor] = generateColorsForChart(this.props.commands.arrayLength, 0.4);\r\n\r\n\t\tconsole.log(temporaryDataToSort.datasets[0].data);\r\n\t\tthis.setState(temporaryDataToSort);\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps:CommandsInterface) {\r\n\r\n\t\tconsole.log('QUICK TRIGGERED!');\r\n\r\n\t\tif(JSON.stringify(prevProps)!==JSON.stringify(this.props)) {\r\n\r\n\r\n\t\t\tthis.date = new Date(Date.now()).getTime();\r\n\r\n\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\tif (this.props.commands.StopSort) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name && this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.bubbleSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t} else if (this.props.commands.name !== prevProps.commands.name) {\r\n\r\n\t\t\t\tthis.bubbleSort();\r\n\t\t\t} else if (this.props.commands.arrayLength !== prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.bubbleSort();\r\n\t\t\t\t}, 800);\r\n\r\n\t\t\t} else if (this.props.commands.arrayLength === prevProps.commands.arrayLength) {\r\n\r\n\t\t\t\tthis.refreshChart();\r\n\t\t\t\tthis.clearAllTimeouts();\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tthis.bubbleSort();\r\n\t\t\t\t}, 800);\r\n\t\t\t}\r\n\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t\t<Bar data={this.state} width={100} height={50} options={{\r\n\t\t\t\t\tlegend: {\r\n\t\t\t\t\t\tdisplay: true,\r\n\t\t\t\t\t\tposition: 'top',\r\n\t\t\t\t\t\tlabels: {\r\n\t\t\t\t\t\t\tboxWidth: 0,\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}} ref={this.chartReference}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n}\r\nexport const MemorizedQuickChart = React.memo(QuickSortChart);\r\n"]},"metadata":{},"sourceType":"module"}