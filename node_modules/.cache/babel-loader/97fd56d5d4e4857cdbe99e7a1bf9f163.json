{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonMtextMixin = void 0;\n\nfunction CommonMtextMixin(Base) {\n  var _a;\n\n  return _a = function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.getVariant = function () {\n      var options = this.jax.options;\n      var data = this.jax.math.outputData;\n      var merror = (!!data.merrorFamily || !!options.merrorFont) && this.node.Parent.isKind('merror');\n\n      if (!!data.mtextFamily || !!options.mtextFont || merror) {\n        var variant = this.node.attributes.get('mathvariant');\n        var font = this.constructor.INHERITFONTS[variant] || this.jax.font.getCssFont(variant);\n        var family = font[0] || (merror ? data.merrorFamily || options.merrorFont : data.mtextFamily || options.mtextFont);\n        this.variant = this.explicitVariant(family, font[2] ? 'bold' : '', font[1] ? 'italic' : '');\n        return;\n      }\n\n      _super.prototype.getVariant.call(this);\n    };\n\n    return class_1;\n  }(Base), _a.INHERITFONTS = {\n    normal: ['', false, false],\n    bold: ['', false, true],\n    italic: ['', true, false],\n    'bold-italic': ['', true, true]\n  }, _a;\n}\n\nexports.CommonMtextMixin = CommonMtextMixin;","map":{"version":3,"sources":["../../../../ts/output/common/Wrappers/mtext.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA,SAAgB,gBAAhB,CAA+D,IAA/D,EAAsE;;;AAEpE,SAAA,EAAA,GAAA,UAAA,MAAA,EAAA;AAAqB,IAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAd,aAAA,OAAA,GAAA;;AAsCN;;AApBW,IAAA,OAAA,CAAA,SAAA,CAAA,UAAA,GAAV,YAAA;AACE,UAAM,OAAO,GAAG,KAAK,GAAL,CAAS,OAAzB;AACA,UAAM,IAAI,GAAG,KAAK,GAAL,CAAS,IAAT,CAAc,UAA3B;AAMA,UAAM,MAAM,GAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAP,IAAuB,CAAC,CAAC,OAAO,CAAC,UAAlC,KAAiD,KAAK,IAAL,CAAU,MAAV,CAAiB,MAAjB,CAAwB,QAAxB,CAAjE;;AACA,UAAI,CAAC,CAAC,IAAI,CAAC,WAAP,IAAsB,CAAC,CAAC,OAAO,CAAC,SAAhC,IAA6C,MAAjD,EAAyD;AACvD,YAAM,OAAO,GAAG,KAAK,IAAL,CAAU,UAAV,CAAqB,GAArB,CAAyB,aAAzB,CAAhB;AACA,YAAM,IAAI,GAAI,KAAK,WAAL,CAAyB,YAAzB,CAAsC,OAAtC,KAAkD,KAAK,GAAL,CAAS,IAAT,CAAc,UAAd,CAAyB,OAAzB,CAAhE;AACA,YAAM,MAAM,GAAG,IAAI,CAAC,CAAD,CAAJ,KAAY,MAAM,GAAG,IAAI,CAAC,YAAL,IAAqB,OAAO,CAAC,UAAhC,GACG,IAAI,CAAC,WAAL,IAAoB,OAAO,CAAC,SADjD,CAAf;AAEA,aAAK,OAAL,GAAe,KAAK,eAAL,CAAqB,MAArB,EAA6B,IAAI,CAAC,CAAD,CAAJ,GAAU,MAAV,GAAmB,EAAhD,EAAoD,IAAI,CAAC,CAAD,CAAJ,GAAU,QAAV,GAAqB,EAAzE,CAAf;AACA;AACD;;AACD,MAAA,MAAA,CAAA,SAAA,CAAM,UAAN,CAAgB,IAAhB,CAAgB,IAAhB;AACD,KAlBS;;AAoBZ,WAAA,OAAA;AAAC,GAtCD,CAAqB,IAArB,CAAA,EAQgB,EAAA,CAAA,YAAA,GAAe;AAC3B,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,KAAL,EAAY,KAAZ,CADmB;AAE3B,IAAA,IAAI,EAAE,CAAC,EAAD,EAAK,KAAL,EAAY,IAAZ,CAFqB;AAG3B,IAAA,MAAM,EAAE,CAAC,EAAD,EAAK,IAAL,EAAW,KAAX,CAHmB;AAI3B,mBAAe,CAAC,EAAD,EAAK,IAAL,EAAW,IAAX;AAJY,GAR/B,EAsCE,EAtCF;AAwCD;;AA1CD,OAAA,CAAA,gBAAA,GAAA,gBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommonMtextMixin = void 0;\nfunction CommonMtextMixin(Base) {\n    var _a;\n    return _a = (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_1.prototype.getVariant = function () {\n                var options = this.jax.options;\n                var data = this.jax.math.outputData;\n                var merror = ((!!data.merrorFamily || !!options.merrorFont) && this.node.Parent.isKind('merror'));\n                if (!!data.mtextFamily || !!options.mtextFont || merror) {\n                    var variant = this.node.attributes.get('mathvariant');\n                    var font = this.constructor.INHERITFONTS[variant] || this.jax.font.getCssFont(variant);\n                    var family = font[0] || (merror ? data.merrorFamily || options.merrorFont :\n                        data.mtextFamily || options.mtextFont);\n                    this.variant = this.explicitVariant(family, font[2] ? 'bold' : '', font[1] ? 'italic' : '');\n                    return;\n                }\n                _super.prototype.getVariant.call(this);\n            };\n            return class_1;\n        }(Base)),\n        _a.INHERITFONTS = {\n            normal: ['', false, false],\n            bold: ['', false, true],\n            italic: ['', true, false],\n            'bold-italic': ['', true, true]\n        },\n        _a;\n}\nexports.CommonMtextMixin = CommonMtextMixin;\n//# sourceMappingURL=mtext.js.map"]},"metadata":{},"sourceType":"script"}