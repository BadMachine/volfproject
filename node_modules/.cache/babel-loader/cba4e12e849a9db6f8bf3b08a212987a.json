{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\drawCOCOimage.tsx\";\nimport React from 'react';\nimport { randomColor } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DrawCOCOimage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.canvas = void 0;\n    this.canvasForeground = void 0;\n    this.state = void 0;\n    this.state = {\n      bboxes: [],\n      descriptions: [],\n      colors: []\n    };\n  }\n\n  componentDidMount() {\n    //console.log('qweqwe     ', this.props.props.Image.width);\n    this.updateImage();\n  }\n\n  handleMouse(e) {\n    const ctx = this.canvasForeground.getContext('2d');\n    const rect = this.canvasForeground.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    let i = 0;\n    let r;\n    ctx.clearRect(0, 0, e.target.width, e.target.height);\n\n    while (i < this.state.bboxes.length) {\n      r = this.state.bboxes[i++];\n      ctx.beginPath();\n      ctx.rect(r[0], r[1], r[2], r[3]);\n      ctx.fillStyle = ctx.isPointInPath(x, y) ? 'blue' : 'yellow';\n      ctx.fill();\n    }\n  }\n\n  updateImage() {\n    const bboxes = [];\n    const descriptions = [];\n    const colors = [];\n    const imageObj1 = new Image(); //console.log(this.props.props.Image.url);\n\n    imageObj1.src = this.props.props.Image.url;\n\n    imageObj1.onload = () => {\n      const ctx = this.canvas.getContext('2d');\n      const ctxForeground = this.canvasForeground.getContext('2d');\n      ctx.drawImage(imageObj1, 0, 0);\n      this.props.props.Image.info.bboxes.forEach(bbox => {\n        const fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.3`;\n        bboxes.push(bbox.box);\n        descriptions.push(bbox.category);\n        colors.push(fillColor);\n        ctxForeground.fillStyle = fillColor;\n        ctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\n      });\n    };\n\n    this.setState({\n      bboxes: bboxes,\n      descriptions: descriptions\n    });\n  }\n\n  componentDidUpdate(prevProps, Props) {\n    if (this.props !== prevProps) {\n      this.updateImage();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: {\n          zIndex: 2\n        },\n        ref: canvas => this.canvasForeground = canvas,\n        width: this.props.props.Image.width,\n        height: this.props.props.Image.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        style: {\n          zIndex: 1,\n          marginTop: `-${this.props.props.Image.height}px`\n        },\n        onMouseMove: this.handleMouse.bind(this),\n        ref: canvas => this.canvas = canvas,\n        width: this.props.props.Image.width,\n        height: this.props.props.Image.height,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/drawCOCOimage.tsx"],"names":["React","randomColor","DrawCOCOimage","Component","constructor","props","canvasRef","createRef","canvas","canvasForeground","state","bboxes","descriptions","colors","componentDidMount","updateImage","handleMouse","e","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","i","r","clearRect","target","width","height","length","beginPath","fillStyle","isPointInPath","fill","imageObj1","Image","src","url","onload","ctxForeground","drawImage","info","forEach","bbox","fillColor","push","box","category","fillRect","setState","componentDidUpdate","prevProps","Props","render","zIndex","marginTop","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {randomColor} from '../interfaces/SortInterfaces';\r\ninterface bbox{\r\n\tbbox: number[],\r\n\tcategory:string\r\n}\r\ninterface segment{\r\n\tsegments: number[][]\r\n}\r\ninterface segments{\r\n\tarea: number,\r\n\tsegments:segment,\r\n\tcategory:string\r\n}\r\n\r\n\r\n\r\ninterface props{\r\n\tfilename: string,\r\n\turl: string,\r\n\theight: number,\r\n\twidth: number,\r\n\tinfo: {\r\n\t\tbboxes: bbox[],\r\n\t\tsegments: segments\r\n\r\n\t}\r\n}\r\ninterface stateInterface{\r\n\tbboxes:number[][], descriptions:string[], colors:string[]\r\n}\r\n\r\nexport class DrawCOCOimage extends React.Component<any, any>{\r\n\tpublic canvasRef = React.createRef<any>();\r\n\tpublic canvas:any;\r\n\tpublic canvasForeground:any;\r\n\treadonly state:stateInterface;\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { bboxes:[], descriptions:[], colors:[]};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//console.log('qweqwe     ', this.props.props.Image.width);\r\n\t\tthis.updateImage();\r\n\t}\r\n\r\n\r\n\thandleMouse(e:any){\r\n\r\n\t\tconst ctx = this.canvasForeground.getContext('2d');\r\n\t\tconst rect = this.canvasForeground.getBoundingClientRect();\r\n\t\tconst x = e.clientX - rect.left;\r\n\t\tconst y = e.clientY - rect.top;\r\n\t\tlet i = 0;\r\n\t\tlet r:number[];\r\n\t\tctx.clearRect(0, 0, e.target.width, e.target.height);\r\n\r\n\t\twhile (i< this.state.bboxes.length) {\r\n\t\t\tr = this.state.bboxes[i++];\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(r[0], r[1], r[2], r[3]);\r\n\t\t\tctx.fillStyle = ctx.isPointInPath(x, y) ? 'blue':'yellow';\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tupdateImage(){\r\n\t\tconst bboxes:number[]=[];\r\n\t\tconst descriptions:string[] = [];\r\n\t\tconst colors:string[] = [];\r\n\t\tconst imageObj1 = new Image();\r\n\t\t//console.log(this.props.props.Image.url);\r\n\t\timageObj1.src = this.props.props.Image.url;\r\n\t\timageObj1.onload = ()=> {\r\n\t\t\tconst ctx = this.canvas.getContext('2d');\r\n\t\t\tconst ctxForeground = this.canvasForeground.getContext('2d');\r\n\t\t\tctx.drawImage(imageObj1,0,0);\r\n\r\n\t\t\tthis.props.props.Image.info.bboxes.forEach( (bbox: any)=>{\r\n\t\t\t\tconst fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.3`;\r\n\t\t\t\tbboxes.push(bbox.box);\r\n\t\t\t\tdescriptions.push(bbox.category);\r\n\t\t\t\tcolors.push(fillColor);\r\n\t\t\t\tctxForeground.fillStyle = fillColor;\r\n\t\t\t\tctxForeground.fillRect(bbox.box[0],bbox.box[1],bbox.box[2],bbox.box[3]);\r\n\r\n\t\t\t});\r\n\r\n\t\t};\r\n\t\tthis.setState({bboxes: bboxes as number[], descriptions: descriptions});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<any>, Props: Readonly<any>) {\r\n\t\tif(this.props!==prevProps){\r\n\t\t\tthis.updateImage();\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<canvas style={{zIndex:2}} ref={(canvas)=>this.canvasForeground=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}></canvas>\r\n\r\n\t\t\t\t<canvas style={{zIndex:1, marginTop:`-${this.props.props.Image.height}px`}} onMouseMove={this.handleMouse.bind(this)}  ref={(canvas)=>this.canvas=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}> </canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}