{"ast":null,"code":"import * as instancesVal from '../instances_val2017.json';\nimport { randomColor } from '../interfaces/SortInterfaces';\nexport const colors = [`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`, `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`];\n\nconst parseCategories = () => {\n  const classesTemp = [];\n  instancesVal.categories.forEach(item => {\n    if (!(item.supercategory in classesTemp)) {\n      classesTemp[item.supercategory] = [];\n    }\n\n    if (!(item.name in classesTemp[item.supercategory])) {\n      classesTemp[item.supercategory].push(item.name);\n    }\n  });\n  return classesTemp;\n};\n\nexport const classes = parseCategories();\nexport const parseSubCategories = supercategory => {\n  if (supercategory === 'all') {\n    console.log('qqqq');\n    console.log(Object.values(classes).flat());\n    return Object.values(classes).flat();\n  } else return classes[supercategory];\n};\n\nfunction fetchBboxesAndSegments(imageID) {\n  const bboxes = [];\n  const segments = [];\n  const annotationForImage = instancesVal.annotations.filter(annotation => annotation.image_id === imageID);\n  annotationForImage.forEach(annotation => {\n    bboxes.push({\n      box: annotation.bbox,\n      category: instancesVal.categories.find(item => item.id === annotation.category_id).name\n    });\n    segments.push({\n      area: annotation.area,\n      segments: annotation.segmentation,\n      category: instancesVal.categories.find(item => item.id === annotation.category_id).name\n    });\n  });\n  return {\n    bboxes: bboxes,\n    segments: segments\n  };\n}\n\nexport const getRandomCocoExample = () => {\n  const random = Math.round(Math.random() * instancesVal.images.length);\n  const image = instancesVal.images[random];\n  return {\n    filename: image.file_name,\n    url: image.coco_url,\n    height: image.height,\n    width: image.width,\n    info: fetchBboxesAndSegments(image.id),\n    showBboxes: false,\n    showKeypoints: false\n  };\n};","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/cocoParser.ts"],"names":["instancesVal","randomColor","colors","parseCategories","classesTemp","categories","forEach","item","supercategory","name","push","classes","parseSubCategories","console","log","Object","values","flat","fetchBboxesAndSegments","imageID","bboxes","segments","annotationForImage","annotations","filter","annotation","image_id","box","bbox","category","find","id","category_id","area","segmentation","getRandomCocoExample","random","Math","round","images","length","image","filename","file_name","url","coco_url","height","width","info","showBboxes","showKeypoints"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as instancesVal from '../instances_val2017.json';\r\nimport {randomColor} from '../interfaces/SortInterfaces';\r\n\r\n\r\nexport const colors = [\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\t`rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`,\r\n\r\n];\r\n\r\nconst parseCategories=()=> {\r\n\tconst classesTemp:any = [];\r\n\t(<any>instancesVal).categories.forEach((item: any) => {\r\n\r\n\t\tif (!(item.supercategory in classesTemp)) {\r\n\t\t\tclassesTemp[item.supercategory] = [];\r\n\t\t}\r\n\t\tif (!(item.name in classesTemp[item.supercategory])) {\r\n\t\t\tclassesTemp[item.supercategory].push(item.name);\r\n\t\t}\r\n\t});\r\n\treturn classesTemp;\r\n};\r\nexport const classes = parseCategories();\r\n\r\nexport const parseSubCategories = (supercategory: string)=>{\r\n\r\n\tif(supercategory==='all') {\r\n\t\tconsole.log('qqqq');\r\n\t\tconsole.log(Object.values(classes).flat());\r\n\t\treturn Object.values(classes).flat();\r\n\t}\r\n\telse return classes[supercategory];\r\n};\r\n\r\n\r\nfunction fetchBboxesAndSegments(imageID:number){\r\n\tconst bboxes:any = [];\r\n\tconst segments:any = [];\r\n\r\n\tconst annotationForImage = (<any>instancesVal).annotations.filter((annotation: any) => annotation.image_id === imageID);\r\n\tannotationForImage.forEach((annotation:any)=>{\r\n\t\tbboxes.push({box: annotation.bbox, category: (<any>instancesVal).categories.find((item: any)=> item.id ===annotation.category_id).name});\r\n\t\tsegments.push({area: annotation.area, segments: annotation.segmentation, category: (<any>instancesVal).categories.find((item: any)=> item.id ===annotation.category_id).name   });\r\n\t});\r\n\treturn {bboxes: bboxes, segments: segments};\r\n\r\n}\r\n\r\n\r\nexport const getRandomCocoExample = ()=>{\r\n\r\n\tconst random = Math.round(Math.random() * ((<any>instancesVal).images.length));\r\n\tconst image = (<any>instancesVal).images[random];\r\n\r\n\treturn {\r\n\t\tfilename: image.file_name,\r\n\t\turl: image.coco_url,\r\n\t\theight: image.height,\r\n\t\twidth: image.width,\r\n\t\tinfo: fetchBboxesAndSegments(image.id),\r\n\t\tshowBboxes: false,\r\n\t\tshowKeypoints: false\r\n\t};\r\n\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"module"}