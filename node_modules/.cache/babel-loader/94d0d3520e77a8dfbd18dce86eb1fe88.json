{"ast":null,"code":"\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MathMLCompile = void 0;\n\nvar MmlNode_js_1 = require(\"../../core/MmlTree/MmlNode.js\");\n\nvar Options_js_1 = require(\"../../util/Options.js\");\n\nvar Entities = require(\"../../util/Entities.js\");\n\nvar MathMLCompile = function () {\n  function MathMLCompile(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var Class = this.constructor;\n    this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, Class.OPTIONS), options);\n  }\n\n  MathMLCompile.prototype.setMmlFactory = function (mmlFactory) {\n    this.factory = mmlFactory;\n  };\n\n  MathMLCompile.prototype.compile = function (node) {\n    var mml = this.makeNode(node);\n    mml.verifyTree(this.options['verify']);\n    mml.setInheritedAttributes({}, false, 0, false);\n    mml.walkTree(this.markMrows);\n    return mml;\n  };\n\n  MathMLCompile.prototype.makeNode = function (node) {\n    var e_1, _a;\n\n    var adaptor = this.adaptor;\n    var limits = false;\n    var kind = adaptor.kind(node).replace(/^.*:/, '');\n    var texClass = adaptor.getAttribute(node, 'data-mjx-texclass') || '';\n\n    if (texClass) {\n      texClass = this.filterAttribute('data-mjx-texclass', texClass) || '';\n    }\n\n    var type = texClass && kind === 'mrow' ? 'TeXAtom' : kind;\n\n    try {\n      for (var _b = __values(this.filterClassList(adaptor.allClasses(node))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_1 = _c.value;\n\n        if (name_1.match(/^MJX-TeXAtom-/)) {\n          texClass = name_1.substr(12);\n          type = 'TeXAtom';\n        } else if (name_1 === 'MJX-fixedlimits') {\n          limits = true;\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this.factory.getNodeClass(type) || this.error('Unknown node type \"' + type + '\"');\n    var mml = this.factory.create(type);\n\n    if (type === 'TeXAtom') {\n      this.texAtom(mml, texClass, limits);\n    } else if (texClass) {\n      mml.texClass = MmlNode_js_1.TEXCLASS[texClass];\n      mml.setProperty('texClass', mml.texClass);\n    }\n\n    this.addAttributes(mml, node);\n    this.checkClass(mml, node);\n    this.addChildren(mml, node);\n    return mml;\n  };\n\n  MathMLCompile.prototype.addAttributes = function (mml, node) {\n    var e_2, _a;\n\n    var ignoreVariant = false;\n\n    try {\n      for (var _b = __values(this.adaptor.allAttributes(node)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var attr = _c.value;\n        var name_2 = attr.name;\n        var value = this.filterAttribute(name_2, attr.value);\n\n        if (value === null) {\n          return;\n        }\n\n        if (name_2.substr(0, 9) === 'data-mjx-') {\n          if (name_2 === 'data-mjx-alternate') {\n            mml.setProperty('variantForm', true);\n          } else if (name_2 === 'data-mjx-variant') {\n            mml.attributes.set('mathvariant', value);\n            ignoreVariant = true;\n          }\n        } else if (name_2 !== 'class') {\n          var val = value.toLowerCase();\n\n          if (val === 'true' || val === 'false') {\n            mml.attributes.set(name_2, val === 'true');\n          } else if (!ignoreVariant || name_2 !== 'mathvariant') {\n            mml.attributes.set(name_2, value);\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n  };\n\n  MathMLCompile.prototype.filterAttribute = function (_name, value) {\n    return value;\n  };\n\n  MathMLCompile.prototype.filterClassList = function (list) {\n    return list;\n  };\n\n  MathMLCompile.prototype.addChildren = function (mml, node) {\n    var e_3, _a;\n\n    if (mml.arity === 0) {\n      return;\n    }\n\n    var adaptor = this.adaptor;\n\n    try {\n      for (var _b = __values(adaptor.childNodes(node)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n        var name_3 = adaptor.kind(child);\n\n        if (name_3 === '#comment') {\n          continue;\n        }\n\n        if (name_3 === '#text') {\n          this.addText(mml, child);\n        } else if (mml.isKind('annotation-xml')) {\n          mml.appendChild(this.factory.create('XML').setXML(child, adaptor));\n        } else {\n          var childMml = mml.appendChild(this.makeNode(child));\n\n          if (childMml.arity === 0 && adaptor.childNodes(child).length) {\n            if (this.options['fixMisplacedChildren']) {\n              this.addChildren(mml, child);\n            } else {\n              childMml.mError('There should not be children for ' + childMml.kind + ' nodes', this.options['verify'], true);\n            }\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n  };\n\n  MathMLCompile.prototype.addText = function (mml, child) {\n    var text = this.adaptor.value(child);\n\n    if ((mml.isToken || mml.getProperty('isChars')) && mml.arity) {\n      if (mml.isToken) {\n        text = Entities.translate(text);\n        text = this.trimSpace(text);\n      }\n\n      mml.appendChild(this.factory.create('text').setText(text));\n    } else if (text.match(/\\S/)) {\n      this.error('Unexpected text node \"' + text + '\"');\n    }\n  };\n\n  MathMLCompile.prototype.checkClass = function (mml, node) {\n    var e_4, _a;\n\n    var classList = [];\n\n    try {\n      for (var _b = __values(this.filterClassList(this.adaptor.allClasses(node))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var name_4 = _c.value;\n\n        if (name_4.substr(0, 4) === 'MJX-') {\n          if (name_4 === 'MJX-variant') {\n            mml.setProperty('variantForm', true);\n          } else if (name_4.substr(0, 11) !== 'MJX-TeXAtom') {\n            mml.attributes.set('mathvariant', this.fixCalligraphic(name_4.substr(3)));\n          }\n        } else {\n          classList.push(name_4);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    if (classList.length) {\n      mml.attributes.set('class', classList.join(' '));\n    }\n  };\n\n  MathMLCompile.prototype.fixCalligraphic = function (variant) {\n    return variant.replace(/caligraphic/, 'calligraphic');\n  };\n\n  MathMLCompile.prototype.texAtom = function (mml, texClass, limits) {\n    mml.texClass = MmlNode_js_1.TEXCLASS[texClass];\n    mml.setProperty('texClass', mml.texClass);\n\n    if (texClass === 'OP' && !limits) {\n      mml.setProperty('movesupsub', true);\n      mml.attributes.setInherited('movablelimits', true);\n    }\n  };\n\n  MathMLCompile.prototype.markMrows = function (mml) {\n    if (mml.isKind('mrow') && !mml.isInferred && mml.childNodes.length >= 2) {\n      var first = mml.childNodes[0];\n      var last = mml.childNodes[mml.childNodes.length - 1];\n\n      if (first.isKind('mo') && first.attributes.get('fence') && last.isKind('mo') && last.attributes.get('fence')) {\n        if (first.childNodes.length) {\n          mml.setProperty('open', first.getText());\n        }\n\n        if (last.childNodes.length) {\n          mml.setProperty('close', last.getText());\n        }\n      }\n    }\n  };\n\n  MathMLCompile.prototype.trimSpace = function (text) {\n    return text.replace(/[\\t\\n\\r]/g, ' ').replace(/^ +/, '').replace(/ +$/, '').replace(/  +/g, ' ');\n  };\n\n  MathMLCompile.prototype.error = function (message) {\n    throw new Error(message);\n  };\n\n  MathMLCompile.OPTIONS = {\n    MmlFactory: null,\n    fixMisplacedChildren: true,\n    verify: __assign({}, MmlNode_js_1.AbstractMmlNode.verifyDefaults),\n    translateEntities: true\n  };\n  return MathMLCompile;\n}();\n\nexports.MathMLCompile = MathMLCompile;","map":{"version":3,"sources":["../../../ts/input/mathml/MathMLCompile.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MathMLCompile = void 0;\nvar MmlNode_js_1 = require(\"../../core/MmlTree/MmlNode.js\");\nvar Options_js_1 = require(\"../../util/Options.js\");\nvar Entities = require(\"../../util/Entities.js\");\nvar MathMLCompile = (function () {\n    function MathMLCompile(options) {\n        if (options === void 0) { options = {}; }\n        var Class = this.constructor;\n        this.options = Options_js_1.userOptions(Options_js_1.defaultOptions({}, Class.OPTIONS), options);\n    }\n    MathMLCompile.prototype.setMmlFactory = function (mmlFactory) {\n        this.factory = mmlFactory;\n    };\n    MathMLCompile.prototype.compile = function (node) {\n        var mml = this.makeNode(node);\n        mml.verifyTree(this.options['verify']);\n        mml.setInheritedAttributes({}, false, 0, false);\n        mml.walkTree(this.markMrows);\n        return mml;\n    };\n    MathMLCompile.prototype.makeNode = function (node) {\n        var e_1, _a;\n        var adaptor = this.adaptor;\n        var limits = false;\n        var kind = adaptor.kind(node).replace(/^.*:/, '');\n        var texClass = adaptor.getAttribute(node, 'data-mjx-texclass') || '';\n        if (texClass) {\n            texClass = this.filterAttribute('data-mjx-texclass', texClass) || '';\n        }\n        var type = texClass && kind === 'mrow' ? 'TeXAtom' : kind;\n        try {\n            for (var _b = __values(this.filterClassList(adaptor.allClasses(node))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_1 = _c.value;\n                if (name_1.match(/^MJX-TeXAtom-/)) {\n                    texClass = name_1.substr(12);\n                    type = 'TeXAtom';\n                }\n                else if (name_1 === 'MJX-fixedlimits') {\n                    limits = true;\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.factory.getNodeClass(type) || this.error('Unknown node type \"' + type + '\"');\n        var mml = this.factory.create(type);\n        if (type === 'TeXAtom') {\n            this.texAtom(mml, texClass, limits);\n        }\n        else if (texClass) {\n            mml.texClass = MmlNode_js_1.TEXCLASS[texClass];\n            mml.setProperty('texClass', mml.texClass);\n        }\n        this.addAttributes(mml, node);\n        this.checkClass(mml, node);\n        this.addChildren(mml, node);\n        return mml;\n    };\n    MathMLCompile.prototype.addAttributes = function (mml, node) {\n        var e_2, _a;\n        var ignoreVariant = false;\n        try {\n            for (var _b = __values(this.adaptor.allAttributes(node)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var attr = _c.value;\n                var name_2 = attr.name;\n                var value = this.filterAttribute(name_2, attr.value);\n                if (value === null) {\n                    return;\n                }\n                if (name_2.substr(0, 9) === 'data-mjx-') {\n                    if (name_2 === 'data-mjx-alternate') {\n                        mml.setProperty('variantForm', true);\n                    }\n                    else if (name_2 === 'data-mjx-variant') {\n                        mml.attributes.set('mathvariant', value);\n                        ignoreVariant = true;\n                    }\n                }\n                else if (name_2 !== 'class') {\n                    var val = value.toLowerCase();\n                    if (val === 'true' || val === 'false') {\n                        mml.attributes.set(name_2, val === 'true');\n                    }\n                    else if (!ignoreVariant || name_2 !== 'mathvariant') {\n                        mml.attributes.set(name_2, value);\n                    }\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n    };\n    MathMLCompile.prototype.filterAttribute = function (_name, value) {\n        return value;\n    };\n    MathMLCompile.prototype.filterClassList = function (list) {\n        return list;\n    };\n    MathMLCompile.prototype.addChildren = function (mml, node) {\n        var e_3, _a;\n        if (mml.arity === 0) {\n            return;\n        }\n        var adaptor = this.adaptor;\n        try {\n            for (var _b = __values(adaptor.childNodes(node)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                var name_3 = adaptor.kind(child);\n                if (name_3 === '#comment') {\n                    continue;\n                }\n                if (name_3 === '#text') {\n                    this.addText(mml, child);\n                }\n                else if (mml.isKind('annotation-xml')) {\n                    mml.appendChild(this.factory.create('XML').setXML(child, adaptor));\n                }\n                else {\n                    var childMml = mml.appendChild(this.makeNode(child));\n                    if (childMml.arity === 0 && adaptor.childNodes(child).length) {\n                        if (this.options['fixMisplacedChildren']) {\n                            this.addChildren(mml, child);\n                        }\n                        else {\n                            childMml.mError('There should not be children for ' + childMml.kind + ' nodes', this.options['verify'], true);\n                        }\n                    }\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n    };\n    MathMLCompile.prototype.addText = function (mml, child) {\n        var text = this.adaptor.value(child);\n        if ((mml.isToken || mml.getProperty('isChars')) && mml.arity) {\n            if (mml.isToken) {\n                text = Entities.translate(text);\n                text = this.trimSpace(text);\n            }\n            mml.appendChild(this.factory.create('text').setText(text));\n        }\n        else if (text.match(/\\S/)) {\n            this.error('Unexpected text node \"' + text + '\"');\n        }\n    };\n    MathMLCompile.prototype.checkClass = function (mml, node) {\n        var e_4, _a;\n        var classList = [];\n        try {\n            for (var _b = __values(this.filterClassList(this.adaptor.allClasses(node))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var name_4 = _c.value;\n                if (name_4.substr(0, 4) === 'MJX-') {\n                    if (name_4 === 'MJX-variant') {\n                        mml.setProperty('variantForm', true);\n                    }\n                    else if (name_4.substr(0, 11) !== 'MJX-TeXAtom') {\n                        mml.attributes.set('mathvariant', this.fixCalligraphic(name_4.substr(3)));\n                    }\n                }\n                else {\n                    classList.push(name_4);\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (classList.length) {\n            mml.attributes.set('class', classList.join(' '));\n        }\n    };\n    MathMLCompile.prototype.fixCalligraphic = function (variant) {\n        return variant.replace(/caligraphic/, 'calligraphic');\n    };\n    MathMLCompile.prototype.texAtom = function (mml, texClass, limits) {\n        mml.texClass = MmlNode_js_1.TEXCLASS[texClass];\n        mml.setProperty('texClass', mml.texClass);\n        if (texClass === 'OP' && !limits) {\n            mml.setProperty('movesupsub', true);\n            mml.attributes.setInherited('movablelimits', true);\n        }\n    };\n    MathMLCompile.prototype.markMrows = function (mml) {\n        if (mml.isKind('mrow') && !mml.isInferred && mml.childNodes.length >= 2) {\n            var first = mml.childNodes[0];\n            var last = mml.childNodes[mml.childNodes.length - 1];\n            if (first.isKind('mo') && first.attributes.get('fence') &&\n                last.isKind('mo') && last.attributes.get('fence')) {\n                if (first.childNodes.length) {\n                    mml.setProperty('open', first.getText());\n                }\n                if (last.childNodes.length) {\n                    mml.setProperty('close', last.getText());\n                }\n            }\n        }\n    };\n    MathMLCompile.prototype.trimSpace = function (text) {\n        return text.replace(/[\\t\\n\\r]/g, ' ')\n            .replace(/^ +/, '')\n            .replace(/ +$/, '')\n            .replace(/  +/g, ' ');\n    };\n    MathMLCompile.prototype.error = function (message) {\n        throw new Error(message);\n    };\n    MathMLCompile.OPTIONS = {\n        MmlFactory: null,\n        fixMisplacedChildren: true,\n        verify: __assign({}, MmlNode_js_1.AbstractMmlNode.verifyDefaults),\n        translateEntities: true\n    };\n    return MathMLCompile;\n}());\nexports.MathMLCompile = MathMLCompile;\n//# sourceMappingURL=MathMLCompile.js.map"]},"metadata":{},"sourceType":"script"}