{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonOutputJax = void 0;\n\nvar OutputJax_js_1 = require(\"../../core/OutputJax.js\");\n\nvar MathItem_js_1 = require(\"../../core/MathItem.js\");\n\nvar Options_js_1 = require(\"../../util/Options.js\");\n\nvar lengths_js_1 = require(\"../../util/lengths.js\");\n\nvar Styles_js_1 = require(\"../../util/Styles.js\");\n\nvar StyleList_js_1 = require(\"../../util/StyleList.js\");\n\nvar CommonOutputJax = function (_super) {\n  __extends(CommonOutputJax, _super);\n\n  function CommonOutputJax(options, defaultFactory, defaultFont) {\n    if (options === void 0) {\n      options = null;\n    }\n\n    if (defaultFactory === void 0) {\n      defaultFactory = null;\n    }\n\n    if (defaultFont === void 0) {\n      defaultFont = null;\n    }\n\n    var _this = this;\n\n    var _a = __read(Options_js_1.separateOptions(options, defaultFont.OPTIONS), 2),\n        jaxOptions = _a[0],\n        fontOptions = _a[1];\n\n    _this = _super.call(this, jaxOptions) || this;\n    _this.factory = _this.options.wrapperFactory || new defaultFactory();\n    _this.factory.jax = _this;\n    _this.cssStyles = _this.options.cssStyles || new StyleList_js_1.CssStyles();\n    _this.font = _this.options.font || new defaultFont(fontOptions);\n    _this.unknownCache = new Map();\n    return _this;\n  }\n\n  CommonOutputJax.prototype.typeset = function (math, html) {\n    this.setDocument(html);\n    var node = this.createNode();\n    this.toDOM(math, node, html);\n    return node;\n  };\n\n  CommonOutputJax.prototype.createNode = function () {\n    var jax = this.constructor.NAME;\n    return this.html('mjx-container', {\n      'class': 'MathJax',\n      jax: jax\n    });\n  };\n\n  CommonOutputJax.prototype.setScale = function (node) {\n    var scale = this.math.metrics.scale * this.options.scale;\n\n    if (scale !== 1) {\n      this.adaptor.setStyle(node, 'fontSize', lengths_js_1.percent(scale));\n    }\n  };\n\n  CommonOutputJax.prototype.toDOM = function (math, node, html) {\n    if (html === void 0) {\n      html = null;\n    }\n\n    this.setDocument(html);\n    this.math = math;\n    this.pxPerEm = math.metrics.ex / this.font.params.x_height;\n    math.root.setTeXclass(null);\n    this.setScale(node);\n    this.nodeMap = new Map();\n    this.container = node;\n    this.processMath(math.root, node);\n    this.nodeMap = null;\n    this.executeFilters(this.postFilters, math, html, node);\n  };\n\n  CommonOutputJax.prototype.getBBox = function (math, html) {\n    this.setDocument(html);\n    this.math = math;\n    math.root.setTeXclass(null);\n    this.nodeMap = new Map();\n    var bbox = this.factory.wrap(math.root).getBBox();\n    this.nodeMap = null;\n    return bbox;\n  };\n\n  CommonOutputJax.prototype.getMetrics = function (html) {\n    var e_1, _a;\n\n    this.setDocument(html);\n    var adaptor = this.adaptor;\n    var maps = this.getMetricMaps(html);\n\n    try {\n      for (var _b = __values(html.math), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var math = _c.value;\n        var parent_1 = adaptor.parent(math.start.node);\n\n        if (math.state() < MathItem_js_1.STATE.METRICS && parent_1) {\n          var map = maps[math.display ? 1 : 0];\n\n          var _d = map.get(parent_1),\n              em = _d.em,\n              ex = _d.ex,\n              containerWidth = _d.containerWidth,\n              lineWidth = _d.lineWidth,\n              scale = _d.scale,\n              family = _d.family;\n\n          math.setMetrics(em, ex, containerWidth, lineWidth, scale);\n\n          if (this.options.mtextInheritFont) {\n            math.outputData.mtextFamily = family;\n          }\n\n          if (this.options.merrorInheritFont) {\n            math.outputData.merrorFamily = family;\n          }\n\n          math.state(MathItem_js_1.STATE.METRICS);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  CommonOutputJax.prototype.getMetricsFor = function (node, display) {\n    var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;\n    var test = this.getTestElement(node, display);\n    var metrics = this.measureMetrics(test, getFamily);\n    this.adaptor.remove(test);\n    return metrics;\n  };\n\n  CommonOutputJax.prototype.getMetricMaps = function (html) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;\n\n    var adaptor = this.adaptor;\n    var domMaps = [new Map(), new Map()];\n\n    try {\n      for (var _f = __values(html.math), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var math = _g.value;\n        var node = adaptor.parent(math.start.node);\n\n        if (node && math.state() < MathItem_js_1.STATE.METRICS) {\n          var map = domMaps[math.display ? 1 : 0];\n\n          if (!map.has(node)) {\n            map.set(node, this.getTestElement(node, math.display));\n          }\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;\n    var maps = [new Map(), new Map()];\n\n    try {\n      for (var _h = __values(maps.keys()), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var i = _j.value;\n\n        try {\n          for (var _k = (e_4 = void 0, __values(domMaps[i].keys())), _l = _k.next(); !_l.done; _l = _k.next()) {\n            var node = _l.value;\n            maps[i].set(node, this.measureMetrics(domMaps[i].get(node), getFamily));\n          }\n        } catch (e_4_1) {\n          e_4 = {\n            error: e_4_1\n          };\n        } finally {\n          try {\n            if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n          } finally {\n            if (e_4) throw e_4.error;\n          }\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(maps.keys()), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var i = _o.value;\n\n        try {\n          for (var _p = (e_6 = void 0, __values(domMaps[i].values())), _q = _p.next(); !_q.done; _q = _p.next()) {\n            var node = _q.value;\n            adaptor.remove(node);\n          }\n        } catch (e_6_1) {\n          e_6 = {\n            error: e_6_1\n          };\n        } finally {\n          try {\n            if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n          } finally {\n            if (e_6) throw e_6.error;\n          }\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    return maps;\n  };\n\n  CommonOutputJax.prototype.getTestElement = function (node, display) {\n    var adaptor = this.adaptor;\n\n    if (!this.testInline) {\n      this.testInline = this.html('mjx-test', {\n        style: {\n          display: 'inline-block',\n          width: '100%',\n          'font-style': 'normal',\n          'font-weight': 'normal',\n          'font-size': '100%',\n          'font-size-adjust': 'none',\n          'text-indent': 0,\n          'text-transform': 'none',\n          'letter-spacing': 'normal',\n          'word-spacing': 'normal',\n          overflow: 'hidden',\n          height: '1px',\n          'margin-right': '-1px'\n        }\n      }, [this.html('mjx-left-box', {\n        style: {\n          display: 'inline-block',\n          width: 0,\n          'float': 'left'\n        }\n      }), this.html('mjx-ex-box', {\n        style: {\n          position: 'absolute',\n          overflow: 'hidden',\n          width: '1px',\n          height: '60ex'\n        }\n      }), this.html('mjx-right-box', {\n        style: {\n          display: 'inline-block',\n          width: 0,\n          'float': 'right'\n        }\n      })]);\n      this.testDisplay = adaptor.clone(this.testInline);\n      adaptor.setStyle(this.testDisplay, 'display', 'table');\n      adaptor.setStyle(this.testDisplay, 'margin-right', '');\n      adaptor.setStyle(adaptor.firstChild(this.testDisplay), 'display', 'none');\n      var right = adaptor.lastChild(this.testDisplay);\n      adaptor.setStyle(right, 'display', 'table-cell');\n      adaptor.setStyle(right, 'width', '10000em');\n      adaptor.setStyle(right, 'float', '');\n    }\n\n    return adaptor.append(node, adaptor.clone(display ? this.testDisplay : this.testInline));\n  };\n\n  CommonOutputJax.prototype.measureMetrics = function (node, getFamily) {\n    var adaptor = this.adaptor;\n    var family = getFamily ? adaptor.fontFamily(node) : '';\n    var em = adaptor.fontSize(node);\n    var ex = adaptor.nodeSize(adaptor.childNode(node, 1))[1] / 60 || em * this.options.exFactor;\n    var containerWidth = adaptor.getStyle(node, 'display') === 'table' ? adaptor.nodeSize(adaptor.lastChild(node))[0] - 1 : adaptor.nodeBBox(adaptor.lastChild(node)).left - adaptor.nodeBBox(adaptor.firstChild(node)).left - 2;\n    var scale = Math.max(this.options.minScale, this.options.matchFontHeight ? ex / this.font.params.x_height / em : 1);\n    var lineWidth = 1000000;\n    return {\n      em: em,\n      ex: ex,\n      containerWidth: containerWidth,\n      lineWidth: lineWidth,\n      scale: scale,\n      family: family\n    };\n  };\n\n  CommonOutputJax.prototype.styleSheet = function (html) {\n    var e_7, _a, e_8, _b;\n\n    this.setDocument(html);\n    this.cssStyles.clear();\n    this.cssStyles.addStyles(this.constructor.commonStyles);\n\n    if ('getStyles' in html) {\n      try {\n        for (var _c = __values(html.getStyles()), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var styles = _d.value;\n          this.cssStyles.addStyles(styles);\n        }\n      } catch (e_7_1) {\n        e_7 = {\n          error: e_7_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_7) throw e_7.error;\n        }\n      }\n    }\n\n    try {\n      for (var _e = __values(this.factory.getKinds()), _f = _e.next(); !_f.done; _f = _e.next()) {\n        var kind = _f.value;\n        this.addClassStyles(this.factory.getNodeClass(kind));\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    this.cssStyles.addStyles(this.font.styles);\n    var sheet = this.html('style', {\n      id: 'MJX-styles'\n    }, [this.text('\\n' + this.cssStyles.cssText + '\\n')]);\n    return sheet;\n  };\n\n  CommonOutputJax.prototype.addClassStyles = function (CLASS) {\n    this.cssStyles.addStyles(CLASS.styles);\n  };\n\n  CommonOutputJax.prototype.setDocument = function (html) {\n    if (html) {\n      this.document = html;\n      this.adaptor.document = html.document;\n    }\n  };\n\n  CommonOutputJax.prototype.html = function (type, def, content, ns) {\n    if (def === void 0) {\n      def = {};\n    }\n\n    if (content === void 0) {\n      content = [];\n    }\n\n    return this.adaptor.node(type, def, content, ns);\n  };\n\n  CommonOutputJax.prototype.text = function (text) {\n    return this.adaptor.text(text);\n  };\n\n  CommonOutputJax.prototype.fixed = function (m, n) {\n    if (n === void 0) {\n      n = 3;\n    }\n\n    if (Math.abs(m) < .0006) {\n      return '0';\n    }\n\n    return m.toFixed(n).replace(/\\.?0+$/, '');\n  };\n\n  CommonOutputJax.prototype.measureText = function (text, variant, font) {\n    if (font === void 0) {\n      font = ['', false, false];\n    }\n\n    var node = this.unknownText(text, variant);\n\n    if (variant === '-explicitFont') {\n      var styles = this.cssFontStyles(font);\n      this.adaptor.setAttributes(node, {\n        style: styles\n      });\n    }\n\n    return this.measureTextNodeWithCache(node, text, variant, font);\n  };\n\n  CommonOutputJax.prototype.measureTextNodeWithCache = function (text, chars, variant, font) {\n    if (font === void 0) {\n      font = ['', false, false];\n    }\n\n    if (variant === '-explicitFont') {\n      variant = [font[0], font[1] ? 'T' : 'F', font[2] ? 'T' : 'F', ''].join('-');\n    }\n\n    if (!this.unknownCache.has(variant)) {\n      this.unknownCache.set(variant, new Map());\n    }\n\n    var map = this.unknownCache.get(variant);\n    var cached = map.get(chars);\n    if (cached) return cached;\n    var bbox = this.measureTextNode(text);\n    map.set(chars, bbox);\n    return bbox;\n  };\n\n  CommonOutputJax.prototype.measureXMLnode = function (xml) {\n    var adaptor = this.adaptor;\n    var content = this.html('mjx-xml-block', {\n      style: {\n        display: 'inline-block'\n      }\n    }, [adaptor.clone(xml)]);\n    var base = this.html('mjx-baseline', {\n      style: {\n        display: 'inline-block',\n        width: 0,\n        height: 0\n      }\n    });\n    var style = {\n      position: 'absolute',\n      display: 'inline-block',\n      'font-family': 'initial',\n      'line-height': 'normal'\n    };\n    var node = this.html('mjx-measure-xml', {\n      style: style\n    }, [base, content]);\n    adaptor.append(adaptor.parent(this.math.start.node), this.container);\n    adaptor.append(this.container, node);\n    var em = this.math.metrics.em * this.math.metrics.scale;\n\n    var _a = adaptor.nodeBBox(content),\n        left = _a.left,\n        right = _a.right,\n        bottom = _a.bottom,\n        top = _a.top;\n\n    var w = (right - left) / em;\n    var h = (adaptor.nodeBBox(base).top - top) / em;\n    var d = (bottom - top) / em - h;\n    adaptor.remove(this.container);\n    adaptor.remove(node);\n    return {\n      w: w,\n      h: h,\n      d: d\n    };\n  };\n\n  CommonOutputJax.prototype.cssFontStyles = function (font, styles) {\n    if (styles === void 0) {\n      styles = {};\n    }\n\n    var _a = __read(font, 3),\n        family = _a[0],\n        italic = _a[1],\n        bold = _a[2];\n\n    styles['font-family'] = this.font.getFamily(family);\n    if (italic) styles['font-style'] = 'italic';\n    if (bold) styles['font-weight'] = 'bold';\n    return styles;\n  };\n\n  CommonOutputJax.prototype.getFontData = function (styles) {\n    if (!styles) {\n      styles = new Styles_js_1.Styles();\n    }\n\n    return [this.font.getFamily(styles.get('font-family')), styles.get('font-style') === 'italic', styles.get('font-weight') === 'bold'];\n  };\n\n  CommonOutputJax.NAME = 'Common';\n  CommonOutputJax.OPTIONS = __assign(__assign({}, OutputJax_js_1.AbstractOutputJax.OPTIONS), {\n    scale: 1,\n    minScale: .5,\n    matchFontHeight: true,\n    mtextInheritFont: false,\n    merrorInheritFont: false,\n    mtextFont: '',\n    merrorFont: 'serif',\n    mathmlSpacing: false,\n    skipAttributes: {},\n    exFactor: .5,\n    displayAlign: 'center',\n    displayIndent: '0',\n    wrapperFactory: null,\n    font: null,\n    cssStyles: null\n  });\n  CommonOutputJax.commonStyles = {};\n  return CommonOutputJax;\n}(OutputJax_js_1.AbstractOutputJax);\n\nexports.CommonOutputJax = CommonOutputJax;","map":{"version":3,"sources":["../../../ts/output/common/OutputJax.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommonOutputJax = void 0;\nvar OutputJax_js_1 = require(\"../../core/OutputJax.js\");\nvar MathItem_js_1 = require(\"../../core/MathItem.js\");\nvar Options_js_1 = require(\"../../util/Options.js\");\nvar lengths_js_1 = require(\"../../util/lengths.js\");\nvar Styles_js_1 = require(\"../../util/Styles.js\");\nvar StyleList_js_1 = require(\"../../util/StyleList.js\");\nvar CommonOutputJax = (function (_super) {\n    __extends(CommonOutputJax, _super);\n    function CommonOutputJax(options, defaultFactory, defaultFont) {\n        if (options === void 0) { options = null; }\n        if (defaultFactory === void 0) { defaultFactory = null; }\n        if (defaultFont === void 0) { defaultFont = null; }\n        var _this = this;\n        var _a = __read(Options_js_1.separateOptions(options, defaultFont.OPTIONS), 2), jaxOptions = _a[0], fontOptions = _a[1];\n        _this = _super.call(this, jaxOptions) || this;\n        _this.factory = _this.options.wrapperFactory ||\n            new defaultFactory();\n        _this.factory.jax = _this;\n        _this.cssStyles = _this.options.cssStyles || new StyleList_js_1.CssStyles();\n        _this.font = _this.options.font || new defaultFont(fontOptions);\n        _this.unknownCache = new Map();\n        return _this;\n    }\n    CommonOutputJax.prototype.typeset = function (math, html) {\n        this.setDocument(html);\n        var node = this.createNode();\n        this.toDOM(math, node, html);\n        return node;\n    };\n    CommonOutputJax.prototype.createNode = function () {\n        var jax = this.constructor.NAME;\n        return this.html('mjx-container', { 'class': 'MathJax', jax: jax });\n    };\n    CommonOutputJax.prototype.setScale = function (node) {\n        var scale = this.math.metrics.scale * this.options.scale;\n        if (scale !== 1) {\n            this.adaptor.setStyle(node, 'fontSize', lengths_js_1.percent(scale));\n        }\n    };\n    CommonOutputJax.prototype.toDOM = function (math, node, html) {\n        if (html === void 0) { html = null; }\n        this.setDocument(html);\n        this.math = math;\n        this.pxPerEm = math.metrics.ex / this.font.params.x_height;\n        math.root.setTeXclass(null);\n        this.setScale(node);\n        this.nodeMap = new Map();\n        this.container = node;\n        this.processMath(math.root, node);\n        this.nodeMap = null;\n        this.executeFilters(this.postFilters, math, html, node);\n    };\n    CommonOutputJax.prototype.getBBox = function (math, html) {\n        this.setDocument(html);\n        this.math = math;\n        math.root.setTeXclass(null);\n        this.nodeMap = new Map();\n        var bbox = this.factory.wrap(math.root).getBBox();\n        this.nodeMap = null;\n        return bbox;\n    };\n    CommonOutputJax.prototype.getMetrics = function (html) {\n        var e_1, _a;\n        this.setDocument(html);\n        var adaptor = this.adaptor;\n        var maps = this.getMetricMaps(html);\n        try {\n            for (var _b = __values(html.math), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var math = _c.value;\n                var parent_1 = adaptor.parent(math.start.node);\n                if (math.state() < MathItem_js_1.STATE.METRICS && parent_1) {\n                    var map = maps[math.display ? 1 : 0];\n                    var _d = map.get(parent_1), em = _d.em, ex = _d.ex, containerWidth = _d.containerWidth, lineWidth = _d.lineWidth, scale = _d.scale, family = _d.family;\n                    math.setMetrics(em, ex, containerWidth, lineWidth, scale);\n                    if (this.options.mtextInheritFont) {\n                        math.outputData.mtextFamily = family;\n                    }\n                    if (this.options.merrorInheritFont) {\n                        math.outputData.merrorFamily = family;\n                    }\n                    math.state(MathItem_js_1.STATE.METRICS);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n    };\n    CommonOutputJax.prototype.getMetricsFor = function (node, display) {\n        var getFamily = (this.options.mtextInheritFont || this.options.merrorInheritFont);\n        var test = this.getTestElement(node, display);\n        var metrics = this.measureMetrics(test, getFamily);\n        this.adaptor.remove(test);\n        return metrics;\n    };\n    CommonOutputJax.prototype.getMetricMaps = function (html) {\n        var e_2, _a, e_3, _b, e_4, _c, e_5, _d, e_6, _e;\n        var adaptor = this.adaptor;\n        var domMaps = [new Map(), new Map()];\n        try {\n            for (var _f = __values(html.math), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var math = _g.value;\n                var node = adaptor.parent(math.start.node);\n                if (node && math.state() < MathItem_js_1.STATE.METRICS) {\n                    var map = domMaps[math.display ? 1 : 0];\n                    if (!map.has(node)) {\n                        map.set(node, this.getTestElement(node, math.display));\n                    }\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var getFamily = this.options.mtextInheritFont || this.options.merrorInheritFont;\n        var maps = [new Map(), new Map()];\n        try {\n            for (var _h = __values(maps.keys()), _j = _h.next(); !_j.done; _j = _h.next()) {\n                var i = _j.value;\n                try {\n                    for (var _k = (e_4 = void 0, __values(domMaps[i].keys())), _l = _k.next(); !_l.done; _l = _k.next()) {\n                        var node = _l.value;\n                        maps[i].set(node, this.measureMetrics(domMaps[i].get(node), getFamily));\n                    }\n                }\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\n                finally {\n                    try {\n                        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n                    }\n                    finally { if (e_4) throw e_4.error; }\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        try {\n            for (var _m = __values(maps.keys()), _o = _m.next(); !_o.done; _o = _m.next()) {\n                var i = _o.value;\n                try {\n                    for (var _p = (e_6 = void 0, __values(domMaps[i].values())), _q = _p.next(); !_q.done; _q = _p.next()) {\n                        var node = _q.value;\n                        adaptor.remove(node);\n                    }\n                }\n                catch (e_6_1) { e_6 = { error: e_6_1 }; }\n                finally {\n                    try {\n                        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n                    }\n                    finally { if (e_6) throw e_6.error; }\n                }\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        return maps;\n    };\n    CommonOutputJax.prototype.getTestElement = function (node, display) {\n        var adaptor = this.adaptor;\n        if (!this.testInline) {\n            this.testInline = this.html('mjx-test', { style: {\n                    display: 'inline-block',\n                    width: '100%',\n                    'font-style': 'normal',\n                    'font-weight': 'normal',\n                    'font-size': '100%',\n                    'font-size-adjust': 'none',\n                    'text-indent': 0,\n                    'text-transform': 'none',\n                    'letter-spacing': 'normal',\n                    'word-spacing': 'normal',\n                    overflow: 'hidden',\n                    height: '1px',\n                    'margin-right': '-1px'\n                } }, [\n                this.html('mjx-left-box', { style: {\n                        display: 'inline-block',\n                        width: 0,\n                        'float': 'left'\n                    } }),\n                this.html('mjx-ex-box', { style: {\n                        position: 'absolute',\n                        overflow: 'hidden',\n                        width: '1px', height: '60ex'\n                    } }),\n                this.html('mjx-right-box', { style: {\n                        display: 'inline-block',\n                        width: 0,\n                        'float': 'right'\n                    } })\n            ]);\n            this.testDisplay = adaptor.clone(this.testInline);\n            adaptor.setStyle(this.testDisplay, 'display', 'table');\n            adaptor.setStyle(this.testDisplay, 'margin-right', '');\n            adaptor.setStyle(adaptor.firstChild(this.testDisplay), 'display', 'none');\n            var right = adaptor.lastChild(this.testDisplay);\n            adaptor.setStyle(right, 'display', 'table-cell');\n            adaptor.setStyle(right, 'width', '10000em');\n            adaptor.setStyle(right, 'float', '');\n        }\n        return adaptor.append(node, adaptor.clone(display ? this.testDisplay : this.testInline));\n    };\n    CommonOutputJax.prototype.measureMetrics = function (node, getFamily) {\n        var adaptor = this.adaptor;\n        var family = (getFamily ? adaptor.fontFamily(node) : '');\n        var em = adaptor.fontSize(node);\n        var ex = (adaptor.nodeSize(adaptor.childNode(node, 1))[1] / 60) || (em * this.options.exFactor);\n        var containerWidth = (adaptor.getStyle(node, 'display') === 'table' ?\n            adaptor.nodeSize(adaptor.lastChild(node))[0] - 1 :\n            adaptor.nodeBBox(adaptor.lastChild(node)).left -\n                adaptor.nodeBBox(adaptor.firstChild(node)).left - 2);\n        var scale = Math.max(this.options.minScale, this.options.matchFontHeight ? ex / this.font.params.x_height / em : 1);\n        var lineWidth = 1000000;\n        return { em: em, ex: ex, containerWidth: containerWidth, lineWidth: lineWidth, scale: scale, family: family };\n    };\n    CommonOutputJax.prototype.styleSheet = function (html) {\n        var e_7, _a, e_8, _b;\n        this.setDocument(html);\n        this.cssStyles.clear();\n        this.cssStyles.addStyles(this.constructor.commonStyles);\n        if ('getStyles' in html) {\n            try {\n                for (var _c = __values(html.getStyles()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var styles = _d.value;\n                    this.cssStyles.addStyles(styles);\n                }\n            }\n            catch (e_7_1) { e_7 = { error: e_7_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_7) throw e_7.error; }\n            }\n        }\n        try {\n            for (var _e = __values(this.factory.getKinds()), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var kind = _f.value;\n                this.addClassStyles(this.factory.getNodeClass(kind));\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        this.cssStyles.addStyles(this.font.styles);\n        var sheet = this.html('style', { id: 'MJX-styles' }, [this.text('\\n' + this.cssStyles.cssText + '\\n')]);\n        return sheet;\n    };\n    CommonOutputJax.prototype.addClassStyles = function (CLASS) {\n        this.cssStyles.addStyles(CLASS.styles);\n    };\n    CommonOutputJax.prototype.setDocument = function (html) {\n        if (html) {\n            this.document = html;\n            this.adaptor.document = html.document;\n        }\n    };\n    CommonOutputJax.prototype.html = function (type, def, content, ns) {\n        if (def === void 0) { def = {}; }\n        if (content === void 0) { content = []; }\n        return this.adaptor.node(type, def, content, ns);\n    };\n    CommonOutputJax.prototype.text = function (text) {\n        return this.adaptor.text(text);\n    };\n    CommonOutputJax.prototype.fixed = function (m, n) {\n        if (n === void 0) { n = 3; }\n        if (Math.abs(m) < .0006) {\n            return '0';\n        }\n        return m.toFixed(n).replace(/\\.?0+$/, '');\n    };\n    CommonOutputJax.prototype.measureText = function (text, variant, font) {\n        if (font === void 0) { font = ['', false, false]; }\n        var node = this.unknownText(text, variant);\n        if (variant === '-explicitFont') {\n            var styles = this.cssFontStyles(font);\n            this.adaptor.setAttributes(node, { style: styles });\n        }\n        return this.measureTextNodeWithCache(node, text, variant, font);\n    };\n    CommonOutputJax.prototype.measureTextNodeWithCache = function (text, chars, variant, font) {\n        if (font === void 0) { font = ['', false, false]; }\n        if (variant === '-explicitFont') {\n            variant = [font[0], font[1] ? 'T' : 'F', font[2] ? 'T' : 'F', ''].join('-');\n        }\n        if (!this.unknownCache.has(variant)) {\n            this.unknownCache.set(variant, new Map());\n        }\n        var map = this.unknownCache.get(variant);\n        var cached = map.get(chars);\n        if (cached)\n            return cached;\n        var bbox = this.measureTextNode(text);\n        map.set(chars, bbox);\n        return bbox;\n    };\n    CommonOutputJax.prototype.measureXMLnode = function (xml) {\n        var adaptor = this.adaptor;\n        var content = this.html('mjx-xml-block', { style: { display: 'inline-block' } }, [adaptor.clone(xml)]);\n        var base = this.html('mjx-baseline', { style: { display: 'inline-block', width: 0, height: 0 } });\n        var style = {\n            position: 'absolute',\n            display: 'inline-block',\n            'font-family': 'initial',\n            'line-height': 'normal'\n        };\n        var node = this.html('mjx-measure-xml', { style: style }, [base, content]);\n        adaptor.append(adaptor.parent(this.math.start.node), this.container);\n        adaptor.append(this.container, node);\n        var em = this.math.metrics.em * this.math.metrics.scale;\n        var _a = adaptor.nodeBBox(content), left = _a.left, right = _a.right, bottom = _a.bottom, top = _a.top;\n        var w = (right - left) / em;\n        var h = (adaptor.nodeBBox(base).top - top) / em;\n        var d = (bottom - top) / em - h;\n        adaptor.remove(this.container);\n        adaptor.remove(node);\n        return { w: w, h: h, d: d };\n    };\n    CommonOutputJax.prototype.cssFontStyles = function (font, styles) {\n        if (styles === void 0) { styles = {}; }\n        var _a = __read(font, 3), family = _a[0], italic = _a[1], bold = _a[2];\n        styles['font-family'] = this.font.getFamily(family);\n        if (italic)\n            styles['font-style'] = 'italic';\n        if (bold)\n            styles['font-weight'] = 'bold';\n        return styles;\n    };\n    CommonOutputJax.prototype.getFontData = function (styles) {\n        if (!styles) {\n            styles = new Styles_js_1.Styles();\n        }\n        return [this.font.getFamily(styles.get('font-family')),\n            styles.get('font-style') === 'italic',\n            styles.get('font-weight') === 'bold'];\n    };\n    CommonOutputJax.NAME = 'Common';\n    CommonOutputJax.OPTIONS = __assign(__assign({}, OutputJax_js_1.AbstractOutputJax.OPTIONS), { scale: 1, minScale: .5, matchFontHeight: true, mtextInheritFont: false, merrorInheritFont: false, mtextFont: '', merrorFont: 'serif', mathmlSpacing: false, skipAttributes: {}, exFactor: .5, displayAlign: 'center', displayIndent: '0', wrapperFactory: null, font: null, cssStyles: null });\n    CommonOutputJax.commonStyles = {};\n    return CommonOutputJax;\n}(OutputJax_js_1.AbstractOutputJax));\nexports.CommonOutputJax = CommonOutputJax;\n//# sourceMappingURL=OutputJax.js.map"]},"metadata":{},"sourceType":"script"}