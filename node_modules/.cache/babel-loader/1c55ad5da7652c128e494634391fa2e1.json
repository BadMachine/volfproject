{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MmlInferredMrow = exports.MmlMrow = void 0;\n\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\n\nvar MmlMrow = function (_super) {\n  __extends(MmlMrow, _super);\n\n  function MmlMrow() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._core = null;\n    return _this;\n  }\n\n  Object.defineProperty(MmlMrow.prototype, \"kind\", {\n    get: function () {\n      return 'mrow';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMrow.prototype, \"isSpacelike\", {\n    get: function () {\n      var e_1, _a;\n\n      try {\n        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n\n          if (!child.isSpacelike) {\n            return false;\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlMrow.prototype, \"isEmbellished\", {\n    get: function () {\n      var e_2, _a;\n\n      var embellished = false;\n      var i = 0;\n\n      try {\n        for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n\n          if (child) {\n            if (child.isEmbellished) {\n              if (embellished) {\n                return false;\n              }\n\n              embellished = true;\n              this._core = i;\n            } else if (!child.isSpacelike) {\n              return false;\n            }\n          }\n\n          i++;\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n\n      return embellished;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlMrow.prototype.core = function () {\n    if (!this.isEmbellished || this._core == null) {\n      return this;\n    }\n\n    return this.childNodes[this._core];\n  };\n\n  MmlMrow.prototype.coreMO = function () {\n    if (!this.isEmbellished || this._core == null) {\n      return this;\n    }\n\n    return this.childNodes[this._core].coreMO();\n  };\n\n  MmlMrow.prototype.nonSpaceLength = function () {\n    var e_3, _a;\n\n    var n = 0;\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child && !child.isSpacelike) {\n          n++;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return n;\n  };\n\n  MmlMrow.prototype.firstNonSpace = function () {\n    var e_4, _a;\n\n    try {\n      for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var child = _c.value;\n\n        if (child && !child.isSpacelike) {\n          return child;\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    return null;\n  };\n\n  MmlMrow.prototype.lastNonSpace = function () {\n    var i = this.childNodes.length;\n\n    while (--i >= 0) {\n      var child = this.childNodes[i];\n\n      if (child && !child.isSpacelike) {\n        return child;\n      }\n    }\n\n    return null;\n  };\n\n  MmlMrow.prototype.setTeXclass = function (prev) {\n    var e_5, _a, e_6, _b;\n\n    if ((this.getProperty('open') != null || this.getProperty('close') != null) && (!prev || prev.getProperty('fnOP') != null)) {\n      this.getPrevClass(prev);\n      prev = null;\n\n      try {\n        for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {\n          var child = _d.value;\n          prev = child.setTeXclass(prev);\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      if (this.texClass == null) {\n        this.texClass = MmlNode_js_1.TEXCLASS.INNER;\n      }\n    } else {\n      try {\n        for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var child = _f.value;\n          prev = child.setTeXclass(prev);\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n\n      if (this.childNodes[0]) {\n        this.updateTeXclass(this.childNodes[0]);\n      }\n    }\n\n    return prev;\n  };\n\n  MmlMrow.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n  return MmlMrow;\n}(MmlNode_js_1.AbstractMmlNode);\n\nexports.MmlMrow = MmlMrow;\n\nvar MmlInferredMrow = function (_super) {\n  __extends(MmlInferredMrow, _super);\n\n  function MmlInferredMrow() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MmlInferredMrow.prototype, \"kind\", {\n    get: function () {\n      return 'inferredMrow';\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlInferredMrow.prototype, \"isInferred\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MmlInferredMrow.prototype, \"notParent\", {\n    get: function () {\n      return true;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MmlInferredMrow.prototype.toString = function () {\n    return '[' + this.childNodes.join(',') + ']';\n  };\n\n  MmlInferredMrow.defaults = MmlMrow.defaults;\n  return MmlInferredMrow;\n}(MmlMrow);\n\nexports.MmlInferredMrow = MmlInferredMrow;","map":{"version":3,"sources":["../../../../ts/core/MmlTree/MmlNodes/mrow.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MmlInferredMrow = exports.MmlMrow = void 0;\nvar MmlNode_js_1 = require(\"../MmlNode.js\");\nvar MmlMrow = (function (_super) {\n    __extends(MmlMrow, _super);\n    function MmlMrow() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._core = null;\n        return _this;\n    }\n    Object.defineProperty(MmlMrow.prototype, \"kind\", {\n        get: function () {\n            return 'mrow';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMrow.prototype, \"isSpacelike\", {\n        get: function () {\n            var e_1, _a;\n            try {\n                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var child = _c.value;\n                    if (!child.isSpacelike) {\n                        return false;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlMrow.prototype, \"isEmbellished\", {\n        get: function () {\n            var e_2, _a;\n            var embellished = false;\n            var i = 0;\n            try {\n                for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var child = _c.value;\n                    if (child) {\n                        if (child.isEmbellished) {\n                            if (embellished) {\n                                return false;\n                            }\n                            embellished = true;\n                            this._core = i;\n                        }\n                        else if (!child.isSpacelike) {\n                            return false;\n                        }\n                    }\n                    i++;\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            return embellished;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlMrow.prototype.core = function () {\n        if (!this.isEmbellished || this._core == null) {\n            return this;\n        }\n        return this.childNodes[this._core];\n    };\n    MmlMrow.prototype.coreMO = function () {\n        if (!this.isEmbellished || this._core == null) {\n            return this;\n        }\n        return this.childNodes[this._core].coreMO();\n    };\n    MmlMrow.prototype.nonSpaceLength = function () {\n        var e_3, _a;\n        var n = 0;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child && !child.isSpacelike) {\n                    n++;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        return n;\n    };\n    MmlMrow.prototype.firstNonSpace = function () {\n        var e_4, _a;\n        try {\n            for (var _b = __values(this.childNodes), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var child = _c.value;\n                if (child && !child.isSpacelike) {\n                    return child;\n                }\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        return null;\n    };\n    MmlMrow.prototype.lastNonSpace = function () {\n        var i = this.childNodes.length;\n        while (--i >= 0) {\n            var child = this.childNodes[i];\n            if (child && !child.isSpacelike) {\n                return child;\n            }\n        }\n        return null;\n    };\n    MmlMrow.prototype.setTeXclass = function (prev) {\n        var e_5, _a, e_6, _b;\n        if ((this.getProperty('open') != null || this.getProperty('close') != null) &&\n            (!prev || prev.getProperty('fnOP') != null)) {\n            this.getPrevClass(prev);\n            prev = null;\n            try {\n                for (var _c = __values(this.childNodes), _d = _c.next(); !_d.done; _d = _c.next()) {\n                    var child = _d.value;\n                    prev = child.setTeXclass(prev);\n                }\n            }\n            catch (e_5_1) { e_5 = { error: e_5_1 }; }\n            finally {\n                try {\n                    if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n                }\n                finally { if (e_5) throw e_5.error; }\n            }\n            if (this.texClass == null) {\n                this.texClass = MmlNode_js_1.TEXCLASS.INNER;\n            }\n        }\n        else {\n            try {\n                for (var _e = __values(this.childNodes), _f = _e.next(); !_f.done; _f = _e.next()) {\n                    var child = _f.value;\n                    prev = child.setTeXclass(prev);\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n            if (this.childNodes[0]) {\n                this.updateTeXclass(this.childNodes[0]);\n            }\n        }\n        return prev;\n    };\n    MmlMrow.defaults = __assign({}, MmlNode_js_1.AbstractMmlNode.defaults);\n    return MmlMrow;\n}(MmlNode_js_1.AbstractMmlNode));\nexports.MmlMrow = MmlMrow;\nvar MmlInferredMrow = (function (_super) {\n    __extends(MmlInferredMrow, _super);\n    function MmlInferredMrow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(MmlInferredMrow.prototype, \"kind\", {\n        get: function () {\n            return 'inferredMrow';\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlInferredMrow.prototype, \"isInferred\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MmlInferredMrow.prototype, \"notParent\", {\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MmlInferredMrow.prototype.toString = function () {\n        return '[' + this.childNodes.join(',') + ']';\n    };\n    MmlInferredMrow.defaults = MmlMrow.defaults;\n    return MmlInferredMrow;\n}(MmlMrow));\nexports.MmlInferredMrow = MmlInferredMrow;\n//# sourceMappingURL=mrow.js.map"]},"metadata":{},"sourceType":"script"}