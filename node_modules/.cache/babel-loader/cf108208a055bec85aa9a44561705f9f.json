{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.retryAfter = exports.handleRetriesFor = void 0;\n\nfunction handleRetriesFor(code) {\n  return new Promise(function run(ok, fail) {\n    try {\n      ok(code());\n    } catch (err) {\n      if (err.retry && err.retry instanceof Promise) {\n        err.retry.then(function () {\n          return run(ok, fail);\n        }).catch(function (perr) {\n          return fail(perr);\n        });\n      } else if (err.restart && err.restart.isCallback) {\n        MathJax.Callback.After(function () {\n          return run(ok, fail);\n        }, err.restart);\n      } else {\n        fail(err);\n      }\n    }\n  });\n}\n\nexports.handleRetriesFor = handleRetriesFor;\n\nfunction retryAfter(promise) {\n  var err = new Error('MathJax retry');\n  err.retry = promise;\n  throw err;\n}\n\nexports.retryAfter = retryAfter;","map":{"version":3,"sources":["../../ts/util/Retries.ts"],"names":[],"mappings":";;;;;;;AAqEA,SAAgB,gBAAhB,CAAiC,IAAjC,EAA+C;AAC7C,SAAO,IAAI,OAAJ,CAAY,SAAS,GAAT,CAAa,EAAb,EAA2B,IAA3B,EAAyC;AAC1D,QAAI;AACF,MAAA,EAAE,CAAC,IAAI,EAAL,CAAF;AACD,KAFD,CAEE,OAAO,GAAP,EAAY;AACZ,UAAI,GAAG,CAAC,KAAJ,IAAa,GAAG,CAAC,KAAJ,YAAqB,OAAtC,EAA+C;AAC7C,QAAA,GAAG,CAAC,KAAJ,CAAU,IAAV,CAAe,YAAA;AAAM,iBAAA,GAAG,CAAC,EAAD,EAAH,IAAG,CAAH;AAAa,SAAlC,EACU,KADV,CACgB,UAAC,IAAD,EAAY;AAAK,iBAAA,IAAI,CAAJ,IAAI,CAAJ;AAAU,SAD3C;AAED,OAHD,MAGO,IAAI,GAAG,CAAC,OAAJ,IAAe,GAAG,CAAC,OAAJ,CAAY,UAA/B,EAA2C;AAEhD,QAAA,OAAO,CAAC,QAAR,CAAiB,KAAjB,CAAuB,YAAA;AAAM,iBAAA,GAAG,CAAC,EAAD,EAAH,IAAG,CAAH;AAAa,SAA1C,EAA4C,GAAG,CAAC,OAAhD;AACD,OAHM,MAGA;AACL,QAAA,IAAI,CAAC,GAAD,CAAJ;AACD;AACF;AACF,GAdM,CAAP;AAeD;;AAhBD,OAAA,CAAA,gBAAA,GAAA,gBAAA;;AA4BA,SAAgB,UAAhB,CAA2B,OAA3B,EAAgD;AAC9C,MAAI,GAAG,GAAG,IAAI,KAAJ,CAAU,eAAV,CAAV;AACA,EAAA,GAAG,CAAC,KAAJ,GAAY,OAAZ;AACA,QAAM,GAAN;AACD;;AAJD,OAAA,CAAA,UAAA,GAAA,UAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retryAfter = exports.handleRetriesFor = void 0;\nfunction handleRetriesFor(code) {\n    return new Promise(function run(ok, fail) {\n        try {\n            ok(code());\n        }\n        catch (err) {\n            if (err.retry && err.retry instanceof Promise) {\n                err.retry.then(function () { return run(ok, fail); })\n                    .catch(function (perr) { return fail(perr); });\n            }\n            else if (err.restart && err.restart.isCallback) {\n                MathJax.Callback.After(function () { return run(ok, fail); }, err.restart);\n            }\n            else {\n                fail(err);\n            }\n        }\n    });\n}\nexports.handleRetriesFor = handleRetriesFor;\nfunction retryAfter(promise) {\n    var err = new Error('MathJax retry');\n    err.retry = promise;\n    throw err;\n}\nexports.retryAfter = retryAfter;\n//# sourceMappingURL=Retries.js.map"]},"metadata":{},"sourceType":"script"}