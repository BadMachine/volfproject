{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\drawCOCOimage.tsx\";\nimport React from 'react';\nimport { randomColor } from '../interfaces/SortInterfaces';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DrawCOCOimage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.canvas = void 0;\n    this.state = void 0;\n    this.state = {\n      bboxes: [],\n      descriptions: [],\n      colors: []\n    };\n  }\n\n  componentDidMount() {\n    //console.log('qweqwe     ', this.props.props.Image.width);\n    this.updateImage();\n  }\n\n  handleMouse(e) {\n    const ctx = this.canvas.getContext('2d'); //console.log(ctx);\n    //const ctx = this.canvas.getContext('2d');\n\n    const rect = this.canvas.getBoundingClientRect();\n    console.log(rect);\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    let i = 0;\n    let r;\n    ctx.clearRect(0, 0, e.target.width, e.target.height);\n\n    while (i < this.state.bboxes.length) {\n      r = this.state.bboxes[i++];\n      ctx.beginPath();\n      ctx.rect(r[0], r[1], r[2], r[3]);\n      ctx.fillStyle = ctx.isPointInPath(x, y) ? 'blue' : 'yellow';\n      ctx.fill();\n    }\n  }\n\n  updateImage() {\n    const bboxes = [];\n    const descriptions = [];\n    const colors = [];\n    const imageObj1 = new Image();\n    imageObj1.src = this.props.props.Image.url;\n\n    imageObj1.onload = () => {\n      const ctx = this.canvas.getContext('2d');\n      ctx.drawImage(imageObj1, 0, 0); //ctx.fillStyle = 'rgba(21,235,21,0.5)';\n      //ctx.fillRect(25,72,32,32);\n\n      this.props.props.Image.info.bboxes.forEach(bbox => {\n        const fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.3`;\n        bboxes.push(bbox.box);\n        descriptions.push(bbox.category);\n        colors.push(fillColor);\n        ctx.fillStyle = fillColor;\n        ctx.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\n      });\n    };\n\n    this.setState({\n      bboxes: bboxes,\n      descriptions: descriptions\n    });\n  }\n\n  componentDidUpdate(prevProps, Props) {\n    if (this.props !== prevProps) {\n      this.updateImage();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseMove: this.handleMouse.bind(this),\n        ref: canvas => this.canvas = canvas,\n        width: this.props.props.Image.width,\n        height: this.props.props.Image.height,\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/drawCOCOimage.tsx"],"names":["React","randomColor","DrawCOCOimage","Component","constructor","props","canvasRef","createRef","canvas","state","bboxes","descriptions","colors","componentDidMount","updateImage","handleMouse","e","ctx","getContext","rect","getBoundingClientRect","console","log","x","clientX","left","y","clientY","top","i","r","clearRect","target","width","height","length","beginPath","fillStyle","isPointInPath","fill","imageObj1","Image","src","url","onload","drawImage","info","forEach","bbox","fillColor","push","box","category","fillRect","setState","componentDidUpdate","prevProps","Props","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {randomColor} from '../interfaces/SortInterfaces';\r\ninterface bbox{\r\n\tbbox: number[],\r\n\tcategory:string\r\n}\r\ninterface segment{\r\n\tsegments: number[][]\r\n}\r\ninterface segments{\r\n\tarea: number,\r\n\tsegments:segment,\r\n\tcategory:string\r\n}\r\n\r\n\r\n\r\ninterface props{\r\n\tfilename: string,\r\n\turl: string,\r\n\theight: number,\r\n\twidth: number,\r\n\tinfo: {\r\n\t\tbboxes: bbox[],\r\n\t\tsegments: segments\r\n\r\n\t}\r\n}\r\ninterface stateInterface{\r\n\tbboxes:number[][], descriptions:string[], colors:string[]\r\n}\r\n\r\nexport class DrawCOCOimage extends React.Component<any, any>{\r\n\tpublic canvasRef = React.createRef<any>();\r\n\tpublic canvas:any;\r\n\treadonly state:stateInterface;\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { bboxes:[], descriptions:[], colors:[]};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\t//console.log('qweqwe     ', this.props.props.Image.width);\r\n\t\tthis.updateImage();\r\n\t}\r\n\r\n\r\n\thandleMouse(e:any){\r\n\t\t\r\n\t\tconst ctx = this.canvas.getContext('2d');\r\n\t\t//console.log(ctx);\r\n\t\t//const ctx = this.canvas.getContext('2d');\r\n\t\tconst rect = this.canvas.getBoundingClientRect();\r\n\t\tconsole.log(rect);\r\n\t\tconst x = e.clientX - rect.left;\r\n\t\tconst y = e.clientY - rect.top;\r\n\t\tlet i = 0;\r\n\t\tlet r:number[];\r\n\t\tctx.clearRect(0, 0, e.target.width, e.target.height);\r\n\r\n\t\twhile (i< this.state.bboxes.length) {\r\n\t\t\tr = this.state.bboxes[i++];\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(r[0], r[1], r[2], r[3]);\r\n\t\t\tctx.fillStyle = ctx.isPointInPath(x, y) ? 'blue':'yellow';\r\n\t\t\tctx.fill();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\tupdateImage(){\r\n\t\tconst bboxes:number[]=[];\r\n\t\tconst descriptions:string[] = [];\r\n\t\tconst colors:string[] = [];\r\n\t\tconst imageObj1 = new Image();\r\n\t\timageObj1.src = this.props.props.Image.url;\r\n\t\timageObj1.onload = ()=> {\r\n\t\t\tconst ctx = this.canvas.getContext('2d');\r\n\t\t\tctx.drawImage(imageObj1,0,0);\r\n\t\t\t//ctx.fillStyle = 'rgba(21,235,21,0.5)';\r\n\t\t\t//ctx.fillRect(25,72,32,32);\r\n\t\t\tthis.props.props.Image.info.bboxes.forEach( (bbox: any)=>{\r\n\t\t\t\tconst fillColor = `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.3`;\r\n\t\t\t\tbboxes.push(bbox.box);\r\n\t\t\t\tdescriptions.push(bbox.category);\r\n\t\t\t\tcolors.push(fillColor);\r\n\t\t\t\tctx.fillStyle = fillColor;\r\n\t\t\t\tctx.fillRect(bbox.box[0],bbox.box[1],bbox.box[2],bbox.box[3]);\r\n\r\n\t\t\t});\r\n\r\n\t\t};\r\n\t\tthis.setState({bboxes: bboxes as number[], descriptions: descriptions});\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps: Readonly<any>, Props: Readonly<any>) {\r\n\t\tif(this.props!==prevProps){\r\n\t\t\tthis.updateImage();\r\n\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<canvas onMouseMove={this.handleMouse.bind(this)}  ref={(canvas)=>this.canvas=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}> </canvas>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}