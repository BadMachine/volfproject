{"ast":null,"code":"\"use strict\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nvar __values = this && this.__values || function (o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator,\n      m = s && o[s],\n      i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar StackItemFactory_js_1 = require(\"./StackItemFactory.js\");\n\nvar NodeFactory_js_1 = require(\"./NodeFactory.js\");\n\nvar Options_js_1 = require(\"../../util/Options.js\");\n\nvar ParseOptions = function () {\n  function ParseOptions(configuration, options) {\n    if (options === void 0) {\n      options = [];\n    }\n\n    this.options = {};\n    this.packageData = new Map();\n    this.parsers = [];\n    this.root = null;\n    this.nodeLists = {};\n    this.error = false;\n    this.handlers = configuration.handlers;\n    this.nodeFactory = new NodeFactory_js_1.NodeFactory();\n    this.nodeFactory.configuration = this;\n    this.nodeFactory.setCreators(configuration.nodes);\n    this.itemFactory = new StackItemFactory_js_1.default(configuration.items);\n    this.itemFactory.configuration = this;\n    Options_js_1.defaultOptions.apply(void 0, __spread([this.options], options));\n    Options_js_1.defaultOptions(this.options, configuration.options);\n  }\n\n  ParseOptions.prototype.pushParser = function (parser) {\n    this.parsers.unshift(parser);\n  };\n\n  ParseOptions.prototype.popParser = function () {\n    this.parsers.shift();\n  };\n\n  Object.defineProperty(ParseOptions.prototype, \"parser\", {\n    get: function () {\n      return this.parsers[0];\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ParseOptions.prototype.clear = function () {\n    this.parsers = [];\n    this.root = null;\n    this.nodeLists = {};\n    this.error = false;\n    this.tags.resetTag();\n  };\n\n  ParseOptions.prototype.addNode = function (property, node) {\n    var list = this.nodeLists[property];\n\n    if (!list) {\n      list = this.nodeLists[property] = [];\n    }\n\n    list.push(node);\n  };\n\n  ParseOptions.prototype.getList = function (property) {\n    var e_1, _a;\n\n    var list = this.nodeLists[property] || [];\n    var result = [];\n\n    try {\n      for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {\n        var node = list_1_1.value;\n\n        if (this.inTree(node)) {\n          result.push(node);\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this.nodeLists[property] = result;\n    return result;\n  };\n\n  ParseOptions.prototype.inTree = function (node) {\n    while (node && node !== this.root) {\n      node = node.parent;\n    }\n\n    return !!node;\n  };\n\n  return ParseOptions;\n}();\n\nexports.default = ParseOptions;","map":{"version":3,"sources":["../../../ts/input/tex/ParseOptions.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar StackItemFactory_js_1 = require(\"./StackItemFactory.js\");\nvar NodeFactory_js_1 = require(\"./NodeFactory.js\");\nvar Options_js_1 = require(\"../../util/Options.js\");\nvar ParseOptions = (function () {\n    function ParseOptions(configuration, options) {\n        if (options === void 0) { options = []; }\n        this.options = {};\n        this.packageData = new Map();\n        this.parsers = [];\n        this.root = null;\n        this.nodeLists = {};\n        this.error = false;\n        this.handlers = configuration.handlers;\n        this.nodeFactory = new NodeFactory_js_1.NodeFactory();\n        this.nodeFactory.configuration = this;\n        this.nodeFactory.setCreators(configuration.nodes);\n        this.itemFactory = new StackItemFactory_js_1.default(configuration.items);\n        this.itemFactory.configuration = this;\n        Options_js_1.defaultOptions.apply(void 0, __spread([this.options], options));\n        Options_js_1.defaultOptions(this.options, configuration.options);\n    }\n    ParseOptions.prototype.pushParser = function (parser) {\n        this.parsers.unshift(parser);\n    };\n    ParseOptions.prototype.popParser = function () {\n        this.parsers.shift();\n    };\n    Object.defineProperty(ParseOptions.prototype, \"parser\", {\n        get: function () {\n            return this.parsers[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ParseOptions.prototype.clear = function () {\n        this.parsers = [];\n        this.root = null;\n        this.nodeLists = {};\n        this.error = false;\n        this.tags.resetTag();\n    };\n    ParseOptions.prototype.addNode = function (property, node) {\n        var list = this.nodeLists[property];\n        if (!list) {\n            list = this.nodeLists[property] = [];\n        }\n        list.push(node);\n    };\n    ParseOptions.prototype.getList = function (property) {\n        var e_1, _a;\n        var list = this.nodeLists[property] || [];\n        var result = [];\n        try {\n            for (var list_1 = __values(list), list_1_1 = list_1.next(); !list_1_1.done; list_1_1 = list_1.next()) {\n                var node = list_1_1.value;\n                if (this.inTree(node)) {\n                    result.push(node);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (list_1_1 && !list_1_1.done && (_a = list_1.return)) _a.call(list_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        this.nodeLists[property] = result;\n        return result;\n    };\n    ParseOptions.prototype.inTree = function (node) {\n        while (node && node !== this.root) {\n            node = node.parent;\n        }\n        return !!node;\n    };\n    return ParseOptions;\n}());\nexports.default = ParseOptions;\n//# sourceMappingURL=ParseOptions.js.map"]},"metadata":{},"sourceType":"script"}