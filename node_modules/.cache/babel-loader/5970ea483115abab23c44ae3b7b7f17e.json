{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\BubbleChart.tsx\";\nimport React, { Component } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.chartReference = void 0;\n    this.chart = void 0;\n    this.timer = void 0;\n    this.chartReference = /*#__PURE__*/React.createRef();\n    this.state = {\n      labels: Array.from({\n        length: 200\n      }, (_, i) => (i + 1).toString()),\n      datasets: [{\n        label: '',\n        data: Array.from({\n          length: 200\n        }, () => Math.floor(Math.random() * 1000)),\n        backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)'],\n        borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)'],\n        borderWidth: 1\n      }]\n    };\n  }\n\n  componentDidMount() {\n    this.chart = this.chartReference.current.chartInstance;\n    setTimeout(() => {\n      this.BubbleSort();\n    }, 1000);\n  }\n\n  BubbleSort() {\n    const data = this.state.datasets[0].data;\n    let timeout = 100;\n\n    for (let it = 0; it < data.length; ++it) {\n      for (let that = 0; that < data.length - 1 - it; ++that) {\n        if (data[that] > data[that + 1]) {\n          const temporary = data[that];\n          data[that] = data[that + 1];\n          data[that + 1] = temporary; //setArrayToSort({label: arrayToSort.label, labels:arrayToSort.labels, data:data});\n\n          const temporaryState = this.state;\n          temporaryState.datasets[0].data = data;\n          timeout += 10;\n          setTimeout(() => {\n            this.setState(temporaryState);\n          }, 1000);\n        }\n      }\n    }\n\n    console.log(data);\n  }\n\n  updateChartDelayed(data, timeout) {\n    this.timer = setTimeout(() => {\n      this.chart.datasets[0].data = data;\n      this.chart.update();\n    }, timeout);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Bar, {\n      ref: this.chartReference,\n      data: this.state,\n      width: 100,\n      height: 100\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/BubbleChart.tsx"],"names":["React","Component","Bar","BarChart","constructor","props","chartReference","chart","timer","createRef","state","labels","Array","from","length","_","i","toString","datasets","label","data","Math","floor","random","backgroundColor","borderColor","borderWidth","componentDidMount","current","chartInstance","setTimeout","BubbleSort","timeout","it","that","temporary","temporaryState","setState","console","log","updateChartDelayed","update","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\ninterface propstosort {\r\n\tdata: number;\r\n\tlabels: number;\r\n\tchartReference: any;\r\n}\r\n\r\ninterface State  {\r\n\tlabels:string[],\r\n\tdatasets: [{\r\n\t\tlabel: string,\r\n\t\tdata: number[],\r\n\t\tbackgroundColor: string[],\r\n\t\tborderColor: string[],\r\n\t\tborderWidth: number\r\n\t}]\r\n}\r\n\r\n\r\n\r\n\r\nexport default class BarChart extends Component<any,any> {\r\n\tchartReference: any;\r\n\tchart: any;\r\n\ttimer: any;\r\n\r\n\tconstructor(props: propstosort) {\r\n\t\tsuper(props);\r\n\t\tthis.chartReference = React.createRef();\r\n\r\n\t\tthis.state = {\r\n\t\t\tlabels:Array.from({ length: 200 }, (_, i) => (i+1).toString()),\r\n\t\t\tdatasets: [{\r\n\t\t\t\tlabel: '',\r\n\t\t\t\tdata: Array.from({length: 200}, () => Math.floor(Math.random() * 1000)),\r\n\t\t\t\tbackgroundColor: [\r\n\t\t\t\t\t'rgba(255, 99, 132, 0.2)',\r\n\t\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\t\t\t\t\t'rgba(255, 159, 64, 0.2)',\r\n\t\t\t\t\t'rgba(54, 162, 235, 0.2)',\r\n\t\t\t\t\t'rgba(255, 206, 86, 0.2)',\r\n\t\t\t\t\t'rgba(75, 192, 192, 0.2)',\r\n\t\t\t\t\t'rgba(153, 102, 255, 0.2)',\r\n\r\n\t\t\t\t],\r\n\t\t\t\tborderColor: [\r\n\t\t\t\t\t'rgba(255, 99, 132, 1)',\r\n\t\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t\t'rgba(153, 102, 255, 1)',\r\n\t\t\t\t\t'rgba(255, 159, 64, 1)',\r\n\t\t\t\t\t'rgba(54, 162, 235, 1)',\r\n\t\t\t\t\t'rgba(255, 206, 86, 1)',\r\n\t\t\t\t\t'rgba(75, 192, 192, 1)',\r\n\t\t\t\t\t'rgba(153, 102, 255, 1)'\r\n\t\t\t\t],\r\n\t\t\t\tborderWidth: 1\r\n\t\t\t}]\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.chart = this.chartReference.current.chartInstance;\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.BubbleSort();\r\n\t\t}, 1000);\r\n\t}\r\n\r\n\r\n\tBubbleSort(){\r\n\t\tconst data = this.state.datasets[0].data;\r\n\t\tlet timeout = 100;\r\n\t\tfor(let it=0; it<data.length; ++it){\r\n\r\n\t\t\tfor(let that=0; that< data.length-1 -it;++that){\r\n\t\t\t\tif (data[that] > data[that+1]) {\r\n\t\t\t\t\tconst temporary = data[that];\r\n\t\t\t\t\tdata[that] = data[that+1];\r\n\t\t\t\t\tdata[that+1] = temporary;\r\n\r\n\t\t\t\t\t//setArrayToSort({label: arrayToSort.label, labels:arrayToSort.labels, data:data});\r\n\t\t\t\t\tconst temporaryState = this.state;\r\n\r\n\t\t\t\t\ttemporaryState.datasets[0].data = data;\r\n\t\t\t\t\ttimeout += 10;\r\n\t\t\t\t\tsetTimeout(()=>{\r\n\t\t\t\t\t\tthis.setState(temporaryState);\r\n\t\t\t\t\t}, 1000);\r\n\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconsole.log(data);\r\n\t}\r\n\r\n\r\n\tupdateChartDelayed(data:any, timeout:any) {\r\n\t\tthis.timer = setTimeout(() => {\r\n\t\t\tthis.chart.datasets[0].data = data;\r\n\t\t\tthis.chart.update();\r\n\t\t}, timeout);\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Bar\r\n\t\t\t\tref={this.chartReference}\r\n\t\t\t\tdata={this.state}\r\n\t\t\t\twidth={100}\r\n\t\t\t\theight={100}\r\n\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n}"]},"metadata":{},"sourceType":"module"}