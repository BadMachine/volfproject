{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bumpy\\\\WebstormProjects\\\\volfproject\\\\src\\\\components\\\\drawCOCOimage.tsx\";\nimport React from 'react'; //import * as React from 'react';\n\nimport { randomColor } from '../interfaces/SortInterfaces';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class DrawCOCOimage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvas = void 0;\n    this.canvasForeground = void 0;\n    this.imageHasBeenLoaded = void 0;\n    this.tooltipRef = void 0;\n    this.data = void 0;\n    this.hColors = void 0;\n    this.hColors = Array.from({\n      length: 150\n    }, () => `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`);\n    this.tooltipRef = /*#__PURE__*/React.createRef();\n    this.imageHasBeenLoaded = false;\n    this.data = {\n      bboxes: [],\n      segments: [],\n      descriptions: []\n    };\n  }\n\n  componentDidMount() {\n    this.updateImage();\n  }\n\n  handleMouse(e) {\n    const ctx = this.canvasForeground.getContext('2d');\n    const rect = this.canvasForeground.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    let i = 0;\n    let r;\n\n    if (this.props.props.Image.showBboxes && this.props.props.Image.showKeypoints) {\n      ctx.clearRect(0, 0, this.canvasForeground.width, this.canvasForeground.height);\n\n      while (i < this.data.bboxes.length) {\n        const RGBA = this.hColors[i].substr(0, this.hColors[i].length - 4) + ' 0.2)';\n        r = this.data.bboxes[i];\n        ctx.beginPath();\n        ctx.rect(r[0], r[1], r[2], r[3]);\n\n        if (ctx.isPointInPath(x, y)) {\n          ctx.fillStyle = RGBA;\n          this.tooltipRef.current.innerText = this.data.descriptions[i];\n        } else {\n          ctx.fillStyle = this.hColors[i];\n        }\n\n        ctx.fill();\n        i++;\n      }\n    }\n  }\n\n  updateImage() {\n    this.imageHasBeenLoaded = false;\n    const bboxes = [];\n    const descriptions = [];\n    const imageObj1 = new Image();\n    imageObj1.src = this.props.props.Image.url;\n\n    imageObj1.onload = () => {\n      const ctx = this.canvas.getContext('2d');\n      const ctxForeground = this.canvasForeground.getContext('2d');\n      ctx.drawImage(imageObj1, 0, 0);\n\n      if (this.props.props.Image.showBboxes && this.props.props.Image.showKeypoints) {\n        const segments = [];\n        ctxForeground.clearRect(0, 0, this.props.props.Image.width, this.props.props.Image.height);\n        this.props.props.Image.info.bboxes.forEach((bbox, index) => {\n          const fillColor = this.hColors[index];\n          bboxes.push(bbox.box);\n          descriptions.push(bbox.category);\n          ctxForeground.fillStyle = fillColor;\n          ctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\n        });\n        this.props.props.Image.info.segments.forEach((segment, index) => {\n          const segmentData = segment.segments;\n\n          if ('counts' in Object(segmentData)) {\n            //segmentData = segment.segments.counts;\n            console.log('HERE WE GO AGAIN, ', segmentData);\n          }\n\n          const subSegmenedToSegment = [];\n\n          for (let z = 0; z < segmentData.length; z++) {\n            subSegmenedToSegment.push(segmentData[z]);\n\n            if (descriptions.length === 0) {\n              descriptions.push(segment.category);\n            }\n\n            ctxForeground.beginPath();\n            ctxForeground.moveTo(segmentData[z][0], segmentData[z][1]);\n\n            for (let i = 2; i < segmentData[z].length; i += 2) {\n              ctxForeground.lineTo(segmentData[z][i], segmentData[z][i + 1]);\n            }\n\n            ctxForeground.lineTo(segmentData[z][0], segmentData[z][1]);\n            ctxForeground.lineWidth = 8;\n            ctxForeground.stroke();\n            ctxForeground.fillStyle = this.hColors[index];\n            ctxForeground.fill();\n            ctxForeground.beginPath();\n          }\n\n          segments.push(subSegmenedToSegment);\n        });\n        this.data = {\n          bboxes: bboxes,\n          segments: segments,\n          descriptions: descriptions\n        };\n      } else if (this.props.props.Image.showBboxes) {\n        ctxForeground.clearRect(0, 0, this.props.props.Image.width, this.props.props.Image.height);\n        this.props.props.Image.info.bboxes.forEach((bbox, index) => {\n          const fillColor = this.hColors[index];\n          bboxes.push(bbox.box);\n          descriptions.push(bbox.category);\n          ctxForeground.fillStyle = fillColor;\n          ctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\n        });\n        this.data = {\n          bboxes: bboxes,\n          segments: this.data.segments,\n          descriptions: descriptions\n        };\n      } else if (this.props.props.Image.showKeypoints) {\n        const segments = [];\n        ctxForeground.clearRect(0, 0, this.props.props.Image.width, this.props.props.Image.height);\n        this.props.props.Image.info.segments.forEach((segment, index) => {\n          const segmentData = segment.segments;\n\n          if ('counts' in Object(segmentData)) {\n            console.log('HERE WE GO AGAIN, ', segmentData);\n          }\n\n          const subSegmenedToSegment = [];\n\n          for (let z = 0; z < segmentData.length; z++) {\n            subSegmenedToSegment.push(segmentData[z]);\n\n            if (descriptions.length === 0) {\n              descriptions.push(segment.category);\n            }\n\n            ctxForeground.beginPath();\n            ctxForeground.moveTo(segmentData[z][0], segmentData[z][1]);\n\n            for (let i = 2; i < segmentData[z].length; i += 2) {\n              ctxForeground.lineTo(segmentData[z][i], segmentData[z][i + 1]);\n            }\n\n            ctxForeground.lineTo(segmentData[z][0], segmentData[z][1]);\n            ctxForeground.lineWidth = 8;\n            ctxForeground.stroke();\n            ctxForeground.fillStyle = this.hColors[index];\n            ctxForeground.fill();\n            ctxForeground.beginPath();\n          }\n\n          segments.push(subSegmenedToSegment);\n        });\n        this.data = {\n          bboxes: this.data.bboxes,\n          segments: segments,\n          descriptions: descriptions\n        };\n      } else {\n        ctxForeground.clearRect(0, 0, this.props.props.Image.width, this.props.props.Image.height);\n      }\n\n      this.imageHasBeenLoaded = true;\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    //\n    if (this.props.props.Image.showBboxes === true) {\n      this.updateImage();\n    } else {\n      this.updateImage();\n    }\n\n    if (this.props.props.Image.showKeypoints === true) {\n      this.updateImage();\n    } else {\n      this.updateImage();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(OverlayTrigger, {\n        placement: 'bottom',\n        overlay: /*#__PURE__*/_jsxDEV(Tooltip, {\n          id: \"tooltip-disabled\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            ref: this.tooltipRef,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 52\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n            style: {\n              zIndex: 1\n            },\n            ref: canvas => this.canvas = canvas,\n            width: this.props.props.Image.width,\n            height: this.props.props.Image.height,\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n            style: {\n              top: 0,\n              zIndex: 2,\n              marginLeft: `-${this.props.props.Image.width}px`\n            },\n            onMouseMove: this.handleMouse.bind(this),\n            ref: canvas => this.canvasForeground = canvas,\n            width: this.props.props.Image.width,\n            height: this.props.props.Image.height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/drawCOCOimage.tsx"],"names":["React","randomColor","OverlayTrigger","Tooltip","DrawCOCOimage","Component","constructor","props","canvas","canvasForeground","imageHasBeenLoaded","tooltipRef","data","hColors","Array","from","length","createRef","bboxes","segments","descriptions","componentDidMount","updateImage","handleMouse","e","ctx","getContext","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","i","r","Image","showBboxes","showKeypoints","clearRect","width","height","RGBA","substr","beginPath","isPointInPath","fillStyle","current","innerText","fill","imageObj1","src","url","onload","ctxForeground","drawImage","info","forEach","bbox","index","fillColor","push","box","category","fillRect","segment","segmentData","Object","console","log","subSegmenedToSegment","z","moveTo","lineTo","lineWidth","stroke","componentDidUpdate","prevProps","render","display","zIndex","marginLeft","bind"],"mappings":"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","sourcesContent":["import React from 'react';\r\n//import * as React from 'react';\r\nimport {CommandsInterface, randomColor} from '../interfaces/SortInterfaces';\r\nimport {OverlayTrigger, Tooltip} from 'react-bootstrap';\r\nimport {ReactDOM} from 'react';\r\n\r\ninterface bbox{\r\n\tbox: number[],\r\n\tcategory:string\r\n}\r\ninterface segment{\r\n\tsegments: number[]\r\n}\r\n\r\ninterface segments{\r\n\tarea: number,\r\n\tsegments: number[][],\r\n\tcounts: number[][],\r\n\tcategory:string\r\n}\r\n\r\n\r\ninterface props{\r\n\tprops: {\r\n\t\tImage:{\r\n\t\tfilename: string,\r\n\t\turl: string,\r\n\t\theight: number,\r\n\t\twidth: number,\r\n\t\tinfo: {\r\n\t\t\tbboxes: bbox[],\r\n\t\t\tsegments: any\r\n\t\t},\r\n\t\tshowBboxes: boolean,\r\n\t\tshowKeypoints: boolean\r\n\t}\r\n\t}\r\n}\r\ninterface stateInterface{\r\n\tbboxes:number[][],\r\n\tsegments: number[][][],\r\n\tdescriptions:string[]\r\n}\r\n\r\n\r\n\r\nexport class DrawCOCOimage extends React.Component<props, any>{\r\n\tpublic canvas:any;\r\n\tpublic canvasForeground:any;\r\n\tprivate imageHasBeenLoaded: boolean;\r\n\tpublic tooltipRef:any;\r\n\tprivate data:stateInterface;\r\n\tprivate hColors: string[];\r\n\tconstructor(props: any) {\r\n\t\tsuper(props);\r\n\t\tthis.hColors = Array.from({length: 150}, () => `rgba(${randomColor()}, ${randomColor()}, ${randomColor()}, 0.4`);\r\n\t\tthis.tooltipRef = React.createRef();\r\n\t\tthis.imageHasBeenLoaded = false;\r\n\t\tthis.data = { bboxes:[], segments:[], descriptions:[]};\r\n\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.updateImage();\r\n\t}\r\n\r\n\r\n\thandleMouse(e:any){\r\n\r\n\t\tconst ctx = this.canvasForeground.getContext('2d');\r\n\t\tconst rect = this.canvasForeground.getBoundingClientRect();\r\n\t\tconst x = e.clientX - rect.left;\r\n\t\tconst y = e.clientY - rect.top;\r\n\t\tlet i = 0;\r\n\t\tlet r;\r\n\t\tif(this.props.props.Image.showBboxes && this.props.props.Image.showKeypoints) {\r\n\t\t\tctx.clearRect(0, 0, this.canvasForeground.width, this.canvasForeground.height);\r\n\t\t\twhile (i < this.data.bboxes.length) {\r\n\t\t\t\tconst RGBA = this.hColors[i].substr(0, this.hColors[i].length - 4) + ' 0.2)';\r\n\t\t\t\tr = this.data.bboxes[i];\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.rect(r[0], r[1], r[2], r[3]);\r\n\r\n\t\t\t\tif (ctx.isPointInPath(x, y)) {\r\n\t\t\t\t\tctx.fillStyle = RGBA;\r\n\t\t\t\t\tthis.tooltipRef.current.innerText = this.data.descriptions[i];\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tctx.fillStyle = this.hColors[i];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tctx.fill();\r\n\t\t\t\ti++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdateImage(){\r\n\t\tthis.imageHasBeenLoaded = false;\r\n\t\tconst bboxes:number[][]=[];\r\n\t\tconst descriptions:string[] = [];\r\n\t\tconst imageObj1 = new Image();\r\n\t\timageObj1.src = this.props.props.Image.url;\r\n\t\timageObj1.onload = ()=> {\r\n\r\n\t\t\tconst ctx = this.canvas.getContext('2d');\r\n\t\t\tconst ctxForeground = this.canvasForeground.getContext('2d');\r\n\t\t\tctx.drawImage(imageObj1, 0, 0);\r\n\r\n\r\n\t\t\tif(this.props.props.Image.showBboxes && this.props.props.Image.showKeypoints) {\r\n\t\t\t\tconst segments:number[][][] = [];\r\n\r\n\t\t\t\tctxForeground.clearRect(0, 0, this.props.props.Image.width, this.props.props.Image.height);\r\n\t\t\t\tthis.props.props.Image.info.bboxes.forEach((bbox: any, index) => {\r\n\t\t\t\t\tconst fillColor = this.hColors[index];\r\n\t\t\t\t\tbboxes.push(bbox.box);\r\n\t\t\t\t\tdescriptions.push(bbox.category);\r\n\t\t\t\t\tctxForeground.fillStyle = fillColor;\r\n\t\t\t\t\tctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.props.props.Image.info.segments.forEach((segment:any, index:number)=> {\r\n\r\n\t\t\t\t\tconst segmentData = segment.segments;\r\n\r\n\t\t\t\t\tif ('counts' in Object(segmentData) ) {\r\n\t\t\t\t\t\t//segmentData = segment.segments.counts;\r\n\t\t\t\t\t\tconsole.log('HERE WE GO AGAIN, ', segmentData);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst subSegmenedToSegment= [];\r\n\t\t\t\t\tfor (let z = 0; z < segmentData.length; z++) {\r\n\t\t\t\t\t\tsubSegmenedToSegment.push(segmentData[z]);\r\n\t\t\t\t\t\tif (descriptions.length === 0) {\r\n\t\t\t\t\t\t\tdescriptions.push(segment.category);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tctxForeground.beginPath();\r\n\t\t\t\t\t\tctxForeground.moveTo(segmentData[z][0], segmentData[z][1]);\r\n\r\n\t\t\t\t\t\tfor (let i = 2; i < segmentData[z].length; i += 2) {\r\n\r\n\t\t\t\t\t\t\tctxForeground.lineTo(segmentData[z][i], segmentData[z][i + 1]);\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tctxForeground.lineTo(segmentData[z][0], segmentData[z][1]);\r\n\t\t\t\t\t\tctxForeground.lineWidth = 8;\r\n\t\t\t\t\t\tctxForeground.stroke();\r\n\t\t\t\t\t\tctxForeground.fillStyle = this.hColors[index];\r\n\t\t\t\t\t\tctxForeground.fill();\r\n\t\t\t\t\t\tctxForeground.beginPath();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsegments.push(subSegmenedToSegment);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.data = { bboxes: bboxes, segments: segments, descriptions: descriptions };\r\n\r\n\t\t\t}else if(this.props.props.Image.showBboxes){\r\n\r\n\t\t\t\tctxForeground.clearRect(0, 0, this.props.props.Image.width, this.props.props.Image.height);\r\n\t\t\t\tthis.props.props.Image.info.bboxes.forEach((bbox: any, index) => {\r\n\t\t\t\t\tconst fillColor = this.hColors[index];\r\n\t\t\t\t\tbboxes.push(bbox.box);\r\n\t\t\t\t\tdescriptions.push(bbox.category);\r\n\t\t\t\t\tctxForeground.fillStyle = fillColor;\r\n\t\t\t\t\tctxForeground.fillRect(bbox.box[0], bbox.box[1], bbox.box[2], bbox.box[3]);\r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.data = { bboxes: bboxes, segments: this.data.segments, descriptions: descriptions };\r\n\t\t\t}else if(this.props.props.Image.showKeypoints){\r\n\r\n\t\t\t\tconst segments:number[][][] = [];\r\n\t\t\t\tctxForeground.clearRect(0, 0, this.props.props.Image.width, this.props.props.Image.height);\r\n\r\n\t\t\t\tthis.props.props.Image.info.segments.forEach((segment:any, index:number)=> {\r\n\r\n\t\t\t\t\tconst segmentData = segment.segments;\r\n\r\n\t\t\t\t\tif ('counts' in Object(segmentData) ) {\r\n\r\n\t\t\t\t\t\tconsole.log('HERE WE GO AGAIN, ', segmentData);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst subSegmenedToSegment= [];\r\n\t\t\t\t\tfor (let z = 0; z < segmentData.length; z++) {\r\n\t\t\t\t\t\tsubSegmenedToSegment.push(segmentData[z]);\r\n\t\t\t\t\t\tif (descriptions.length === 0) {\r\n\t\t\t\t\t\t\tdescriptions.push(segment.category);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tctxForeground.beginPath();\r\n\t\t\t\t\t\tctxForeground.moveTo(segmentData[z][0], segmentData[z][1]);\r\n\r\n\t\t\t\t\t\tfor (let i = 2; i < segmentData[z].length; i += 2) {\r\n\r\n\t\t\t\t\t\t\tctxForeground.lineTo(segmentData[z][i], segmentData[z][i + 1]);\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tctxForeground.lineTo(segmentData[z][0], segmentData[z][1]);\r\n\t\t\t\t\t\tctxForeground.lineWidth = 8;\r\n\t\t\t\t\t\tctxForeground.stroke();\r\n\t\t\t\t\t\tctxForeground.fillStyle = this.hColors[index];\r\n\t\t\t\t\t\tctxForeground.fill();\r\n\t\t\t\t\t\tctxForeground.beginPath();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tsegments.push(subSegmenedToSegment);\r\n\t\t\t\t});\r\n\t\t\t\tthis.data = { bboxes: this.data.bboxes, segments: segments, descriptions: descriptions };\r\n\t\t\t}\r\n\r\n\t\t\telse{\r\n\t\t\t\tctxForeground.clearRect(0,0,this.props.props.Image.width,this.props.props.Image.height);\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis.imageHasBeenLoaded=true;\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tcomponentDidUpdate(prevProps:props) {\r\n\t\t//\r\n\r\n\t\tif(this.props.props.Image.showBboxes===true){\r\n\r\n\t\t\tthis.updateImage();\r\n\t\t}else{\r\n\r\n\t\t\tthis.updateImage();\r\n\t\t}\r\n\r\n\t\tif(this.props.props.Image.showKeypoints===true){\r\n\r\n\t\t\tthis.updateImage();\r\n\t\t}else{\r\n\r\n\t\t\tthis.updateImage();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<OverlayTrigger placement={'bottom'} overlay={ <Tooltip id=\"tooltip-disabled\"><i ref={this.tooltipRef}> </i></Tooltip> } >\r\n\t\t\t\t\t<div style={{ display: 'flex'}}>\r\n\t\t\t\t\t\t<canvas style={{zIndex:1}}   ref={(canvas)=>this.canvas=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}> </canvas>\r\n\t\t\t\t\t\t<canvas style={{top: 0,zIndex:2, marginLeft:`-${this.props.props.Image.width}px`}} onMouseMove={this.handleMouse.bind(this)} ref={(canvas)=>this.canvasForeground=canvas} width={this.props.props.Image.width} height={this.props.props.Image.height}></canvas>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</OverlayTrigger>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}