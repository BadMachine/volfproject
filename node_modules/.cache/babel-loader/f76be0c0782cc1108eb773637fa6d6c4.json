{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CommonTeXFontMixin = void 0;\n\nfunction CommonTeXFontMixin(Base) {\n  var _a;\n\n  return _a = function (_super) {\n    __extends(class_1, _super);\n\n    function class_1() {\n      return _super !== null && _super.apply(this, arguments) || this;\n    }\n\n    class_1.prototype.getDelimiterData = function (n) {\n      return this.getChar('-smallop', n) || this.getChar('-size4', n);\n    };\n\n    return class_1;\n  }(Base), _a.defaultVariants = __spread(Base.defaultVariants, [['-smallop', 'normal'], ['-largeop', 'normal'], ['-size3', 'normal'], ['-size4', 'normal'], ['-tex-calligraphic', 'italic'], ['-tex-bold-calligraphic', 'bold-italic'], ['-tex-oldstyle', 'normal'], ['-tex-bold-oldstyle', 'bold'], ['-tex-mathit', 'italic'], ['-tex-variant', 'normal']]), _a.defaultCssFonts = __assign(__assign({}, Base.defaultCssFonts), {\n    '-smallop': ['serif', false, false],\n    '-largeop': ['serif', false, false],\n    '-size3': ['serif', false, false],\n    '-size4': ['serif', false, false],\n    '-tex-calligraphic': ['cursive', true, false],\n    '-tex-bold-calligraphic': ['cursive', true, true],\n    '-tex-oldstyle': ['serif', false, false],\n    '-tex-bold-oldstyle': ['serif', false, true],\n    '-tex-mathit': ['serif', true, false]\n  }), _a.defaultSizeVariants = ['normal', '-smallop', '-largeop', '-size3', '-size4'], _a;\n}\n\nexports.CommonTeXFontMixin = CommonTeXFontMixin;","map":{"version":3,"sources":["../../../../ts/output/common/fonts/tex.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAgB,kBAAhB,CAKE,IALF,EAKS;;;AAEP,SAAA,EAAA,GAAA,UAAA,MAAA,EAAA;AAAqB,IAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAAd,aAAA,OAAA,GAAA;;AA+CN;;AAJW,IAAA,OAAA,CAAA,SAAA,CAAA,gBAAA,GAAV,UAA2B,CAA3B,EAAoC;AAClC,aAAO,KAAK,OAAL,CAAa,UAAb,EAAyB,CAAzB,KAA+B,KAAK,OAAL,CAAa,QAAb,EAAuB,CAAvB,CAAtC;AACD,KAFS;;AAIZ,WAAA,OAAA;AAAC,GA/CD,CAAqB,IAArB,CAAA,EAKmB,EAAA,CAAA,eAAA,GAAe,QAAA,CAC3B,IAAI,CAAC,eADsB,EACP,CACvB,CAAC,UAAD,EAAa,QAAb,CADuB,EAEvB,CAAC,UAAD,EAAa,QAAb,CAFuB,EAGvB,CAAC,QAAD,EAAW,QAAX,CAHuB,EAIvB,CAAC,QAAD,EAAW,QAAX,CAJuB,EAKvB,CAAC,mBAAD,EAAsB,QAAtB,CALuB,EAMvB,CAAC,wBAAD,EAA2B,aAA3B,CANuB,EAOvB,CAAC,eAAD,EAAkB,QAAlB,CAPuB,EAQvB,CAAC,oBAAD,EAAuB,MAAvB,CARuB,EASvB,CAAC,aAAD,EAAgB,QAAhB,CATuB,EAUvB,CAAC,cAAD,EAAiB,QAAjB,CAVuB,CADO,CALlC,EAsBmB,EAAA,CAAA,eAAA,GAAe,QAAA,CAAA,QAAA,CAAA,EAAA,EAC3B,IAAI,CAAC,eADsB,CAAA,EACP;AACvB,gBAAY,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CADW;AAEvB,gBAAY,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CAFW;AAGvB,cAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CAHa;AAIvB,cAAU,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CAJa;AAKvB,yBAAqB,CAAC,SAAD,EAAY,IAAZ,EAAkB,KAAlB,CALE;AAMvB,8BAA0B,CAAC,SAAD,EAAY,IAAZ,EAAkB,IAAlB,CANH;AAOvB,qBAAiB,CAAC,OAAD,EAAU,KAAV,EAAiB,KAAjB,CAPM;AAQvB,0BAAsB,CAAC,OAAD,EAAU,KAAV,EAAiB,IAAjB,CARC;AASvB,mBAAe,CAAC,OAAD,EAAU,IAAV,EAAgB,KAAhB;AATQ,GADO,CAtBlC,EAsCmB,EAAA,CAAA,mBAAA,GAAsB,CAAC,QAAD,EAAW,UAAX,EAAuB,UAAvB,EAAmC,QAAnC,EAA6C,QAA7C,CAtCzC,EA+CE,EA/CF;AAiDD;;AAxDD,OAAA,CAAA,kBAAA,GAAA,kBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CommonTeXFontMixin = void 0;\nfunction CommonTeXFontMixin(Base) {\n    var _a;\n    return _a = (function (_super) {\n            __extends(class_1, _super);\n            function class_1() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            class_1.prototype.getDelimiterData = function (n) {\n                return this.getChar('-smallop', n) || this.getChar('-size4', n);\n            };\n            return class_1;\n        }(Base)),\n        _a.defaultVariants = __spread(Base.defaultVariants, [\n            ['-smallop', 'normal'],\n            ['-largeop', 'normal'],\n            ['-size3', 'normal'],\n            ['-size4', 'normal'],\n            ['-tex-calligraphic', 'italic'],\n            ['-tex-bold-calligraphic', 'bold-italic'],\n            ['-tex-oldstyle', 'normal'],\n            ['-tex-bold-oldstyle', 'bold'],\n            ['-tex-mathit', 'italic'],\n            ['-tex-variant', 'normal']\n        ]),\n        _a.defaultCssFonts = __assign(__assign({}, Base.defaultCssFonts), { '-smallop': ['serif', false, false], '-largeop': ['serif', false, false], '-size3': ['serif', false, false], '-size4': ['serif', false, false], '-tex-calligraphic': ['cursive', true, false], '-tex-bold-calligraphic': ['cursive', true, true], '-tex-oldstyle': ['serif', false, false], '-tex-bold-oldstyle': ['serif', false, true], '-tex-mathit': ['serif', true, false] }),\n        _a.defaultSizeVariants = ['normal', '-smallop', '-largeop', '-size3', '-size4'],\n        _a;\n}\nexports.CommonTeXFontMixin = CommonTeXFontMixin;\n//# sourceMappingURL=tex.js.map"]},"metadata":{},"sourceType":"script"}