{"ast":null,"code":"import * as instancesVal from '../instances_val2017.json';\nconst classes = [];\ninstancesVal.categories.forEach(item => {\n  if (!(item.supercategory in classes)) {\n    classes[item.supercategory] = [];\n  }\n\n  if (!(item.name in classes[item.supercategory])) {\n    classes[item.supercategory].push(item.name);\n  }\n});\nexport function parseSuperCategories() {\n  const supercategories = instancesVal.categories.map(item => item.supercategory).filter((value, index, self) => self.indexOf(value) === index);\n  return supercategories;\n}\nexport function parseSubCategories() {\n  const supercategories = instancesVal.categories.map(item => item.name).filter((value, index, self) => self.indexOf(value) === index);\n  return supercategories;\n}","map":{"version":3,"sources":["C:/Users/Bumpy/WebstormProjects/volfproject/src/components/cocoParser.ts"],"names":["instancesVal","classes","categories","forEach","item","supercategory","name","push","parseSuperCategories","supercategories","map","filter","value","index","self","indexOf","parseSubCategories"],"mappings":"AACA,OAAO,KAAKA,YAAZ,MAA8B,2BAA9B;AAEA,MAAMC,OAAO,GAAG,EAAhB;AACOD,YAAN,CAAoBE,UAApB,CAA+BC,OAA/B,CAAyCC,IAAD,IAAY;AAEpD,MAAG,EAAEA,IAAI,CAACC,aAAL,IAAsBJ,OAAxB,CAAH,EAAqC;AACpCA,IAAAA,OAAO,CAACG,IAAI,CAACC,aAAN,CAAP,GAA8B,EAA9B;AACA;;AACD,MAAG,EAAED,IAAI,CAACE,IAAL,IAAaL,OAAO,CAACG,IAAI,CAACC,aAAN,CAAtB,CAAH,EAAgD;AAC/CJ,IAAAA,OAAO,CAACG,IAAI,CAACC,aAAN,CAAP,CAA4BE,IAA5B,CAAiCH,IAAI,CAACE,IAAtC;AACA;AACD,CARA;AAUD,OAAO,SAASE,oBAAT,GAAyC;AAC/C,QAAMC,eAAe,GAAST,YAAN,CAAoBE,UAApB,CAA+BQ,GAA/B,CAAoCN,IAAD,IAAcA,IAAI,CAACC,aAAtD,EAAqEM,MAArE,CAA4E,CAACC,KAAD,EAAYC,KAAZ,EAAuBC,IAAvB,KAAoCA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAAxI,CAAxB;AACA,SAAOJ,eAAP;AACA;AACD,OAAO,SAASO,kBAAT,GAAuC;AAC7C,QAAMP,eAAe,GAAST,YAAN,CAAoBE,UAApB,CAA+BQ,GAA/B,CAAoCN,IAAD,IAAcA,IAAI,CAACE,IAAtD,EAA4DK,MAA5D,CAAmE,CAACC,KAAD,EAAYC,KAAZ,EAAuBC,IAAvB,KAAoCA,IAAI,CAACC,OAAL,CAAaH,KAAb,MAAwBC,KAA/H,CAAxB;AACA,SAAOJ,eAAP;AACA","sourcesContent":["import React from 'react';\r\nimport * as instancesVal from '../instances_val2017.json';\r\n\r\nconst classes = [];\r\n\t(<any>instancesVal).categories.forEach( (item:any)=>{\r\n\r\n\tif(!(item.supercategory in classes) ){\r\n\t\tclasses[item.supercategory] = [];\r\n\t}\r\n\tif(!(item.name in classes[item.supercategory])) {\r\n\t\tclasses[item.supercategory].push(item.name)\r\n\t}\r\n});\r\n\r\nexport function parseSuperCategories(): string[]{\r\n\tconst supercategories = (<any>instancesVal).categories.map((item:any) => item.supercategory).filter((value:any, index:any, self:any) => self.indexOf(value) === index);\r\n\treturn supercategories as string[];\r\n}\r\nexport function parseSubCategories(): string[]{\r\n\tconst supercategories = (<any>instancesVal).categories.map((item:any) => item.name).filter((value:any, index:any, self:any) => self.indexOf(value) === index);\r\n\treturn supercategories as string[];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}